   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"i2c.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	i2c_init
  20              		.thumb
  21              		.thumb_func
  23              	i2c_init:
  24              	.LFB0:
  25              		.file 1 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c"
   1:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** /**
   2:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****  * Author: Xavier Vilajosana (xvilajosana@eecs.berkeley.edu)
   3:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****  *         Pere Tuset (peretuset@openmote.com)
   4:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****  * Date:   July 2013
   5:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****  * Description:CC2538-specific definition of the "i2c" bsp module.
   6:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****  */
   7:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
   8:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "gpio.h"
   9:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "source/i2c_lib.h"
  10:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "ioc.h"
  11:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "sys_ctrl.h"
  12:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  13:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "headers/hw_gpio.h"
  14:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "headers/hw_i2cm.h"
  15:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "headers/hw_ioc.h"
  16:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "headers/hw_memmap.h"
  17:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "headers/hw_sys_ctrl.h"
  18:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #include "headers/hw_types.h"
  19:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  20:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** //=========================== define ==========================================
  21:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  22:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #define I2C_PERIPHERAL          ( SYS_CTRL_PERIPH_I2C )
  23:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #define I2C_BASE                ( GPIO_B_BASE )
  24:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #define I2C_SCL                 ( GPIO_PIN_3 )
  25:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #define I2C_SDA                 ( GPIO_PIN_4 )
  26:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #define I2C_BAUDRATE            ( 100000 )
  27:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** #define I2C_MAX_DELAY_US        ( 100000 )
  28:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  29:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** //=========================== variables =======================================
  30:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  31:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  32:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** //=========================== prototypes ======================================
  33:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  34:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** extern uint32_t board_timer_get(void);
  35:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** extern bool board_timer_expired(uint32_t future);
  36:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  37:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** //=========================== public ==========================================
  38:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  39:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** void i2c_init(void) {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 82B0     		sub	sp, sp, #8
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  40:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     bool status;
  41:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
  42:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Enable peripheral except in deep sleep modes (e.g. LPM1, LPM2, LPM3)
  43:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     SysCtrlPeripheralEnable(I2C_PERIPHERAL);
  38              		.loc 1 43 0
  39 0006 4FF44070 		mov	r0, #768
  40 000a FFF7FEFF 		bl	SysCtrlPeripheralEnable
  44:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     SysCtrlPeripheralSleepEnable(I2C_PERIPHERAL);
  41              		.loc 1 44 0
  42 000e 4FF44070 		mov	r0, #768
  43 0012 FFF7FEFF 		bl	SysCtrlPeripheralSleepEnable
  45:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     SysCtrlPeripheralDeepSleepDisable(I2C_PERIPHERAL);
  44              		.loc 1 45 0
  45 0016 4FF44070 		mov	r0, #768
  46 001a FFF7FEFF 		bl	SysCtrlPeripheralDeepSleepDisable
  46:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  47:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Reset peripheral previous to configuring it
  48:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     SysCtrlPeripheralReset(I2C_PERIPHERAL);
  47              		.loc 1 48 0
  48 001e 4FF44070 		mov	r0, #768
  49 0022 FFF7FEFF 		bl	SysCtrlPeripheralReset
  49:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  50:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Configure the SCL pin
  51:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     GPIOPinTypeI2C(I2C_BASE, I2C_SCL);
  50              		.loc 1 51 0
  51 0026 1548     		ldr	r0, .L2
  52 0028 0821     		movs	r1, #8
  53 002a FFF7FEFF 		bl	GPIOPinTypeI2C
  52:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     IOCPinConfigPeriphInput(I2C_BASE, I2C_SCL, IOC_I2CMSSCL);
  54              		.loc 1 52 0
  55 002e 1348     		ldr	r0, .L2
  56 0030 0821     		movs	r1, #8
  57 0032 134A     		ldr	r2, .L2+4
  58 0034 FFF7FEFF 		bl	IOCPinConfigPeriphInput
  53:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     IOCPinConfigPeriphOutput(I2C_BASE, I2C_SCL, IOC_MUX_OUT_SEL_I2C_CMSSCL);
  59              		.loc 1 53 0
  60 0038 1048     		ldr	r0, .L2
  61 003a 0821     		movs	r1, #8
  62 003c 0C22     		movs	r2, #12
  63 003e FFF7FEFF 		bl	IOCPinConfigPeriphOutput
  54:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  55:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Configure the SDA pin
  56:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     GPIOPinTypeI2C(I2C_BASE, I2C_SDA);
  64              		.loc 1 56 0
  65 0042 0E48     		ldr	r0, .L2
  66 0044 1021     		movs	r1, #16
  67 0046 FFF7FEFF 		bl	GPIOPinTypeI2C
  57:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     IOCPinConfigPeriphInput(I2C_BASE, I2C_SDA, IOC_I2CMSSDA);
  68              		.loc 1 57 0
  69 004a 0C48     		ldr	r0, .L2
  70 004c 1021     		movs	r1, #16
  71 004e 0D4A     		ldr	r2, .L2+8
  72 0050 FFF7FEFF 		bl	IOCPinConfigPeriphInput
  58:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     IOCPinConfigPeriphOutput(I2C_BASE, I2C_SDA, IOC_MUX_OUT_SEL_I2C_CMSSDA);
  73              		.loc 1 58 0
  74 0054 0948     		ldr	r0, .L2
  75 0056 1021     		movs	r1, #16
  76 0058 0B22     		movs	r2, #11
  77 005a FFF7FEFF 		bl	IOCPinConfigPeriphOutput
  59:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  60:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Configure the I2C clock
  61:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     status = (I2C_BAUDRATE == 400000 ? true : false);
  78              		.loc 1 61 0
  79 005e 0023     		movs	r3, #0
  80 0060 FB71     		strb	r3, [r7, #7]
  62:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterInitExpClk(SysCtrlClockGet(), status);
  81              		.loc 1 62 0
  82 0062 FFF7FEFF 		bl	SysCtrlClockGet
  83 0066 0246     		mov	r2, r0
  84 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  85 006a 1046     		mov	r0, r2
  86 006c 1946     		mov	r1, r3
  87 006e FFF7FEFF 		bl	I2CMasterInitExpClk
  63:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  64:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Enable the I2C module as master
  65:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterEnable();
  88              		.loc 1 65 0
  89 0072 FFF7FEFF 		bl	I2CMasterEnable
  66:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** }
  90              		.loc 1 66 0
  91 0076 0837     		adds	r7, r7, #8
  92              		.cfi_def_cfa_offset 8
  93 0078 BD46     		mov	sp, r7
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 007a 80BD     		pop	{r7, pc}
  97              	.L3:
  98              		.align	2
  99              	.L2:
 100 007c 00A00D40 		.word	1074634752
 101 0080 30410D40 		.word	1074610480
 102 0084 2C410D40 		.word	1074610476
 103              		.cfi_endproc
 104              	.LFE0:
 106              		.align	2
 107              		.global	i2c_read_byte
 108              		.thumb
 109              		.thumb_func
 111              	i2c_read_byte:
 112              	.LFB1:
  67:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  68:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** bool i2c_read_byte(uint8_t address, uint8_t* byte) {
 113              		.loc 1 68 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 16
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0088 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 008a 84B0     		sub	sp, sp, #16
 122              		.cfi_def_cfa_offset 24
 123 008c 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 125 008e 0346     		mov	r3, r0
 126 0090 3960     		str	r1, [r7]
 127 0092 FB71     		strb	r3, [r7, #7]
  69:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     uint32_t future = I2C_MAX_DELAY_US;
 128              		.loc 1 69 0
 129 0094 144B     		ldr	r3, .L8
 130 0096 FB60     		str	r3, [r7, #12]
  70:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
  71:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Receive operation
  72:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterSlaveAddrSet(address, true);
 131              		.loc 1 72 0
 132 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133 009a 1846     		mov	r0, r3
 134 009c 0121     		movs	r1, #1
 135 009e FFF7FEFF 		bl	I2CMasterSlaveAddrSet
  73:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  74:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Single receive operation
  75:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterControl(I2C_MASTER_CMD_SINGLE_RECEIVE);
 136              		.loc 1 75 0
 137 00a2 0720     		movs	r0, #7
 138 00a4 FFF7FEFF 		bl	I2CMasterControl
  76:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  77:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Calculate timeout
  78:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     future += board_timer_get();
 139              		.loc 1 78 0
 140 00a8 FFF7FEFF 		bl	board_timer_get
 141 00ac 0246     		mov	r2, r0
 142 00ae FB68     		ldr	r3, [r7, #12]
 143 00b0 1344     		add	r3, r3, r2
 144 00b2 FB60     		str	r3, [r7, #12]
  79:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  80:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Wait until complete or timeout
  81:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     while (I2CMasterBusy()) {
 145              		.loc 1 81 0
 146 00b4 07E0     		b	.L5
 147              	.L7:
  82:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Update timeout status and return if expired
  83:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         if (board_timer_expired(future)) return false;
 148              		.loc 1 83 0
 149 00b6 F868     		ldr	r0, [r7, #12]
 150 00b8 FFF7FEFF 		bl	board_timer_expired
 151 00bc 0346     		mov	r3, r0
 152 00be 002B     		cmp	r3, #0
 153 00c0 01D0     		beq	.L5
 154              		.loc 1 83 0 is_stmt 0 discriminator 1
 155 00c2 0023     		movs	r3, #0
 156 00c4 0BE0     		b	.L6
 157              	.L5:
  81:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Update timeout status and return if expired
 158              		.loc 1 81 0 is_stmt 1
 159 00c6 FFF7FEFF 		bl	I2CMasterBusy
 160 00ca 0346     		mov	r3, r0
 161 00cc 002B     		cmp	r3, #0
 162 00ce F2D1     		bne	.L7
  84:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     }
  85:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  86:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Read data from I2C
  87:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     *byte = I2CMasterDataGet();
 163              		.loc 1 87 0
 164 00d0 FFF7FEFF 		bl	I2CMasterDataGet
 165 00d4 0346     		mov	r3, r0
 166 00d6 DAB2     		uxtb	r2, r3
 167 00d8 3B68     		ldr	r3, [r7]
 168 00da 1A70     		strb	r2, [r3]
  88:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
  89:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Return status
  90:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     return true;
 169              		.loc 1 90 0
 170 00dc 0123     		movs	r3, #1
 171              	.L6:
  91:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** }
 172              		.loc 1 91 0
 173 00de 1846     		mov	r0, r3
 174 00e0 1037     		adds	r7, r7, #16
 175              		.cfi_def_cfa_offset 8
 176 00e2 BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 00e4 80BD     		pop	{r7, pc}
 180              	.L9:
 181 00e6 00BF     		.align	2
 182              	.L8:
 183 00e8 A0860100 		.word	100000
 184              		.cfi_endproc
 185              	.LFE1:
 187              		.align	2
 188              		.global	i2c_read_bytes
 189              		.thumb
 190              		.thumb_func
 192              	i2c_read_bytes:
 193              	.LFB2:
  92:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  93:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** uint32_t i2c_read_bytes(uint8_t address, uint8_t* buffer, uint32_t length) {
 194              		.loc 1 93 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 24
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 00ec 90B5     		push	{r4, r7, lr}
 199              		.cfi_def_cfa_offset 12
 200              		.cfi_offset 4, -12
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 00ee 87B0     		sub	sp, sp, #28
 204              		.cfi_def_cfa_offset 40
 205 00f0 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
 207 00f2 0346     		mov	r3, r0
 208 00f4 B960     		str	r1, [r7, #8]
 209 00f6 7A60     		str	r2, [r7, #4]
 210 00f8 FB73     		strb	r3, [r7, #15]
  94:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     uint32_t future = I2C_MAX_DELAY_US;
 211              		.loc 1 94 0
 212 00fa 1E4B     		ldr	r3, .L17
 213 00fc 7B61     		str	r3, [r7, #20]
  95:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
  96:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Receive operation
  97:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterSlaveAddrSet(address, true);
 214              		.loc 1 97 0
 215 00fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 216 0100 1846     		mov	r0, r3
 217 0102 0121     		movs	r1, #1
 218 0104 FFF7FEFF 		bl	I2CMasterSlaveAddrSet
  98:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
  99:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Multiple receive operation
 100:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterControl(I2C_MASTER_CMD_BURST_RECEIVE_START);
 219              		.loc 1 100 0
 220 0108 0B20     		movs	r0, #11
 221 010a FFF7FEFF 		bl	I2CMasterControl
 101:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 102:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Calculate timeout
 103:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     future += board_timer_get();
 222              		.loc 1 103 0
 223 010e FFF7FEFF 		bl	board_timer_get
 224 0112 0246     		mov	r2, r0
 225 0114 7B69     		ldr	r3, [r7, #20]
 226 0116 1344     		add	r3, r3, r2
 227 0118 7B61     		str	r3, [r7, #20]
 104:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 105:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Iterate overall all bytes
 106:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     while (length) {
 228              		.loc 1 106 0
 229 011a 22E0     		b	.L11
 230              	.L16:
 107:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Wait until complete or timeout
 108:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         while (I2CMasterBusy()) {
 231              		.loc 1 108 0
 232 011c 07E0     		b	.L12
 233              	.L14:
 109:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****             // Update timeout status and return if expired
 110:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****             if (board_timer_expired(future)) return length;
 234              		.loc 1 110 0
 235 011e 7869     		ldr	r0, [r7, #20]
 236 0120 FFF7FEFF 		bl	board_timer_expired
 237 0124 0346     		mov	r3, r0
 238 0126 002B     		cmp	r3, #0
 239 0128 01D0     		beq	.L12
 240              		.loc 1 110 0 is_stmt 0 discriminator 1
 241 012a 7B68     		ldr	r3, [r7, #4]
 242 012c 1DE0     		b	.L13
 243              	.L12:
 108:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****             // Update timeout status and return if expired
 244              		.loc 1 108 0 is_stmt 1
 245 012e FFF7FEFF 		bl	I2CMasterBusy
 246 0132 0346     		mov	r3, r0
 247 0134 002B     		cmp	r3, #0
 248 0136 F2D1     		bne	.L14
 111:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         }
 112:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         
 113:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Read data from I2C
 114:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         *buffer++ = I2CMasterDataGet();
 249              		.loc 1 114 0
 250 0138 BC68     		ldr	r4, [r7, #8]
 251 013a 631C     		adds	r3, r4, #1
 252 013c BB60     		str	r3, [r7, #8]
 253 013e FFF7FEFF 		bl	I2CMasterDataGet
 254 0142 0346     		mov	r3, r0
 255 0144 DBB2     		uxtb	r3, r3
 256 0146 2370     		strb	r3, [r4]
 115:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         length--;
 257              		.loc 1 115 0
 258 0148 7B68     		ldr	r3, [r7, #4]
 259 014a 013B     		subs	r3, r3, #1
 260 014c 7B60     		str	r3, [r7, #4]
 116:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 117:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Check if it's the last byte
 118:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         if (length == 1) I2CMasterControl(I2C_MASTER_CMD_BURST_RECEIVE_FINISH);
 261              		.loc 1 118 0
 262 014e 7B68     		ldr	r3, [r7, #4]
 263 0150 012B     		cmp	r3, #1
 264 0152 03D1     		bne	.L15
 265              		.loc 1 118 0 is_stmt 0 discriminator 1
 266 0154 0520     		movs	r0, #5
 267 0156 FFF7FEFF 		bl	I2CMasterControl
 268 015a 02E0     		b	.L11
 269              	.L15:
 119:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         else             I2CMasterControl(I2C_MASTER_CMD_BURST_RECEIVE_CONT);
 270              		.loc 1 119 0 is_stmt 1
 271 015c 0920     		movs	r0, #9
 272 015e FFF7FEFF 		bl	I2CMasterControl
 273              	.L11:
 106:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Wait until complete or timeout
 274              		.loc 1 106 0
 275 0162 7B68     		ldr	r3, [r7, #4]
 276 0164 002B     		cmp	r3, #0
 277 0166 D9D1     		bne	.L16
 120:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     }
 121:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
 122:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Return bytes read
 123:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     return length;
 278              		.loc 1 123 0
 279 0168 7B68     		ldr	r3, [r7, #4]
 280              	.L13:
 124:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** }
 281              		.loc 1 124 0
 282 016a 1846     		mov	r0, r3
 283 016c 1C37     		adds	r7, r7, #28
 284              		.cfi_def_cfa_offset 12
 285 016e BD46     		mov	sp, r7
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 0170 90BD     		pop	{r4, r7, pc}
 289              	.L18:
 290 0172 00BF     		.align	2
 291              	.L17:
 292 0174 A0860100 		.word	100000
 293              		.cfi_endproc
 294              	.LFE2:
 296              		.align	2
 297              		.global	i2c_write_byte
 298              		.thumb
 299              		.thumb_func
 301              	i2c_write_byte:
 302              	.LFB3:
 125:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 126:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** bool i2c_write_byte(uint8_t address, uint8_t byte) {   
 303              		.loc 1 126 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 16
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0178 80B5     		push	{r7, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 017a 84B0     		sub	sp, sp, #16
 312              		.cfi_def_cfa_offset 24
 313 017c 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 315 017e 0346     		mov	r3, r0
 316 0180 0A46     		mov	r2, r1
 317 0182 FB71     		strb	r3, [r7, #7]
 318 0184 1346     		mov	r3, r2
 319 0186 BB71     		strb	r3, [r7, #6]
 127:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     uint32_t future = I2C_MAX_DELAY_US;
 320              		.loc 1 127 0
 321 0188 134B     		ldr	r3, .L23
 322 018a FB60     		str	r3, [r7, #12]
 128:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
 129:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Transmit operation
 130:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterSlaveAddrSet(address, false);
 323              		.loc 1 130 0
 324 018c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 325 018e 1846     		mov	r0, r3
 326 0190 0021     		movs	r1, #0
 327 0192 FFF7FEFF 		bl	I2CMasterSlaveAddrSet
 131:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 132:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Write byte to I2C buffer
 133:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterDataPut(byte);
 328              		.loc 1 133 0
 329 0196 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 330 0198 1846     		mov	r0, r3
 331 019a FFF7FEFF 		bl	I2CMasterDataPut
 134:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 135:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Single transmit operation
 136:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterControl(I2C_MASTER_CMD_SINGLE_SEND);
 332              		.loc 1 136 0
 333 019e 0720     		movs	r0, #7
 334 01a0 FFF7FEFF 		bl	I2CMasterControl
 137:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
 138:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Calculate timeout
 139:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     future += board_timer_get();
 335              		.loc 1 139 0
 336 01a4 FFF7FEFF 		bl	board_timer_get
 337 01a8 0246     		mov	r2, r0
 338 01aa FB68     		ldr	r3, [r7, #12]
 339 01ac 1344     		add	r3, r3, r2
 340 01ae FB60     		str	r3, [r7, #12]
 140:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 141:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Wait until complete or timeout
 142:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     while (I2CMasterBusy()) {
 341              		.loc 1 142 0
 342 01b0 07E0     		b	.L20
 343              	.L22:
 143:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Check timeout status and return if expired
 144:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         if (board_timer_expired(future)) return false;
 344              		.loc 1 144 0
 345 01b2 F868     		ldr	r0, [r7, #12]
 346 01b4 FFF7FEFF 		bl	board_timer_expired
 347 01b8 0346     		mov	r3, r0
 348 01ba 002B     		cmp	r3, #0
 349 01bc 01D0     		beq	.L20
 350              		.loc 1 144 0 is_stmt 0 discriminator 1
 351 01be 0023     		movs	r3, #0
 352 01c0 05E0     		b	.L21
 353              	.L20:
 142:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Check timeout status and return if expired
 354              		.loc 1 142 0 is_stmt 1
 355 01c2 FFF7FEFF 		bl	I2CMasterBusy
 356 01c6 0346     		mov	r3, r0
 357 01c8 002B     		cmp	r3, #0
 358 01ca F2D1     		bne	.L22
 145:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     }
 146:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
 147:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     return true;
 359              		.loc 1 147 0
 360 01cc 0123     		movs	r3, #1
 361              	.L21:
 148:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** }
 362              		.loc 1 148 0
 363 01ce 1846     		mov	r0, r3
 364 01d0 1037     		adds	r7, r7, #16
 365              		.cfi_def_cfa_offset 8
 366 01d2 BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 01d4 80BD     		pop	{r7, pc}
 370              	.L24:
 371 01d6 00BF     		.align	2
 372              	.L23:
 373 01d8 A0860100 		.word	100000
 374              		.cfi_endproc
 375              	.LFE3:
 377              		.align	2
 378              		.global	i2c_write_bytes
 379              		.thumb
 380              		.thumb_func
 382              	i2c_write_bytes:
 383              	.LFB4:
 149:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 150:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** uint32_t i2c_write_bytes(uint8_t address, uint8_t* buffer, uint32_t length) {
 384              		.loc 1 150 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 24
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 01dc 80B5     		push	{r7, lr}
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 01de 86B0     		sub	sp, sp, #24
 393              		.cfi_def_cfa_offset 32
 394 01e0 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 396 01e2 0346     		mov	r3, r0
 397 01e4 B960     		str	r1, [r7, #8]
 398 01e6 7A60     		str	r2, [r7, #4]
 399 01e8 FB73     		strb	r3, [r7, #15]
 151:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     uint32_t future = I2C_MAX_DELAY_US;
 400              		.loc 1 151 0
 401 01ea 294B     		ldr	r3, .L35
 402 01ec 7B61     		str	r3, [r7, #20]
 152:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
 153:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Transmit operation
 154:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterSlaveAddrSet(address, false);
 403              		.loc 1 154 0
 404 01ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 405 01f0 1846     		mov	r0, r3
 406 01f2 0021     		movs	r1, #0
 407 01f4 FFF7FEFF 		bl	I2CMasterSlaveAddrSet
 155:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 156:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Write byte to I2C buffer
 157:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterDataPut(*buffer++);
 408              		.loc 1 157 0
 409 01f8 BB68     		ldr	r3, [r7, #8]
 410 01fa 5A1C     		adds	r2, r3, #1
 411 01fc BA60     		str	r2, [r7, #8]
 412 01fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 413 0200 1846     		mov	r0, r3
 414 0202 FFF7FEFF 		bl	I2CMasterDataPut
 158:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     length--;
 415              		.loc 1 158 0
 416 0206 7B68     		ldr	r3, [r7, #4]
 417 0208 013B     		subs	r3, r3, #1
 418 020a 7B60     		str	r3, [r7, #4]
 159:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 160:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Multiple transmit operation
 161:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     I2CMasterControl(I2C_MASTER_CMD_BURST_SEND_START);
 419              		.loc 1 161 0
 420 020c 0320     		movs	r0, #3
 421 020e FFF7FEFF 		bl	I2CMasterControl
 162:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 163:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Calculate timeout
 164:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     future += board_timer_get();
 422              		.loc 1 164 0
 423 0212 FFF7FEFF 		bl	board_timer_get
 424 0216 0246     		mov	r2, r0
 425 0218 7B69     		ldr	r3, [r7, #20]
 426 021a 1344     		add	r3, r3, r2
 427 021c 7B61     		str	r3, [r7, #20]
 165:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 166:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Wait until complete or timeout
 167:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     while (I2CMasterBusy()) {
 428              		.loc 1 167 0
 429 021e 07E0     		b	.L26
 430              	.L28:
 168:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Check timeout status and return if expired
 169:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         if (board_timer_expired(future)) return length;
 431              		.loc 1 169 0
 432 0220 7869     		ldr	r0, [r7, #20]
 433 0222 FFF7FEFF 		bl	board_timer_expired
 434 0226 0346     		mov	r3, r0
 435 0228 002B     		cmp	r3, #0
 436 022a 01D0     		beq	.L26
 437              		.loc 1 169 0 is_stmt 0 discriminator 1
 438 022c 7B68     		ldr	r3, [r7, #4]
 439 022e 2BE0     		b	.L27
 440              	.L26:
 167:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Check timeout status and return if expired
 441              		.loc 1 167 0 is_stmt 1
 442 0230 FFF7FEFF 		bl	I2CMasterBusy
 443 0234 0346     		mov	r3, r0
 444 0236 002B     		cmp	r3, #0
 445 0238 F2D1     		bne	.L28
 170:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     }
 171:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 172:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Iterate overall all bytes
 173:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     while (length) {
 446              		.loc 1 173 0
 447 023a 21E0     		b	.L29
 448              	.L34:
 174:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Write byte to I2C buffer
 175:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         I2CMasterDataPut(*buffer++);
 449              		.loc 1 175 0
 450 023c BB68     		ldr	r3, [r7, #8]
 451 023e 5A1C     		adds	r2, r3, #1
 452 0240 BA60     		str	r2, [r7, #8]
 453 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 454 0244 1846     		mov	r0, r3
 455 0246 FFF7FEFF 		bl	I2CMasterDataPut
 176:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 177:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Check if it's the last byte
 178:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         if (length == 1) I2CMasterControl(I2C_MASTER_CMD_BURST_SEND_FINISH);
 456              		.loc 1 178 0
 457 024a 7B68     		ldr	r3, [r7, #4]
 458 024c 012B     		cmp	r3, #1
 459 024e 03D1     		bne	.L30
 460              		.loc 1 178 0 is_stmt 0 discriminator 1
 461 0250 0520     		movs	r0, #5
 462 0252 FFF7FEFF 		bl	I2CMasterControl
 463 0256 02E0     		b	.L31
 464              	.L30:
 179:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         else             I2CMasterControl(I2C_MASTER_CMD_BURST_SEND_CONT);
 465              		.loc 1 179 0 is_stmt 1
 466 0258 0120     		movs	r0, #1
 467 025a FFF7FEFF 		bl	I2CMasterControl
 468              	.L31:
 180:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 181:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Wait until complete or timeout
 182:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         while (I2CMasterBusy()) {
 469              		.loc 1 182 0
 470 025e 07E0     		b	.L32
 471              	.L33:
 183:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****             // Check timeout status and return if expired
 184:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****             if (board_timer_expired(future)) return length;
 472              		.loc 1 184 0
 473 0260 7869     		ldr	r0, [r7, #20]
 474 0262 FFF7FEFF 		bl	board_timer_expired
 475 0266 0346     		mov	r3, r0
 476 0268 002B     		cmp	r3, #0
 477 026a 01D0     		beq	.L32
 478              		.loc 1 184 0 is_stmt 0 discriminator 1
 479 026c 7B68     		ldr	r3, [r7, #4]
 480 026e 0BE0     		b	.L27
 481              	.L32:
 182:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****             // Check timeout status and return if expired
 482              		.loc 1 182 0 is_stmt 1
 483 0270 FFF7FEFF 		bl	I2CMasterBusy
 484 0274 0346     		mov	r3, r0
 485 0276 002B     		cmp	r3, #0
 486 0278 F2D1     		bne	.L33
 185:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         }
 186:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** 
 187:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Update the length
 188:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         length--;
 487              		.loc 1 188 0
 488 027a 7B68     		ldr	r3, [r7, #4]
 489 027c 013B     		subs	r3, r3, #1
 490 027e 7B60     		str	r3, [r7, #4]
 491              	.L29:
 173:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****         // Write byte to I2C buffer
 492              		.loc 1 173 0
 493 0280 7B68     		ldr	r3, [r7, #4]
 494 0282 002B     		cmp	r3, #0
 495 0284 DAD1     		bne	.L34
 189:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     }
 190:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     
 191:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     // Return bytes written
 192:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c ****     return length;
 496              		.loc 1 192 0
 497 0286 7B68     		ldr	r3, [r7, #4]
 498              	.L27:
 193:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/i2c.c **** }
 499              		.loc 1 193 0
 500 0288 1846     		mov	r0, r3
 501 028a 1837     		adds	r7, r7, #24
 502              		.cfi_def_cfa_offset 8
 503 028c BD46     		mov	sp, r7
 504              		.cfi_def_cfa_register 13
 505              		@ sp needed
 506 028e 80BD     		pop	{r7, pc}
 507              	.L36:
 508              		.align	2
 509              	.L35:
 510 0290 A0860100 		.word	100000
 511              		.cfi_endproc
 512              	.LFE4:
 514              	.Letext0:
 515              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 516              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c.c
     /tmp/cc3nv3lG.s:18     .text:0000000000000000 $t
     /tmp/cc3nv3lG.s:23     .text:0000000000000000 i2c_init
     /tmp/cc3nv3lG.s:100    .text:000000000000007c $d
     /tmp/cc3nv3lG.s:106    .text:0000000000000088 $t
     /tmp/cc3nv3lG.s:111    .text:0000000000000088 i2c_read_byte
     /tmp/cc3nv3lG.s:183    .text:00000000000000e8 $d
     /tmp/cc3nv3lG.s:187    .text:00000000000000ec $t
     /tmp/cc3nv3lG.s:192    .text:00000000000000ec i2c_read_bytes
     /tmp/cc3nv3lG.s:292    .text:0000000000000174 $d
     /tmp/cc3nv3lG.s:296    .text:0000000000000178 $t
     /tmp/cc3nv3lG.s:301    .text:0000000000000178 i2c_write_byte
     /tmp/cc3nv3lG.s:373    .text:00000000000001d8 $d
     /tmp/cc3nv3lG.s:377    .text:00000000000001dc $t
     /tmp/cc3nv3lG.s:382    .text:00000000000001dc i2c_write_bytes
     /tmp/cc3nv3lG.s:510    .text:0000000000000290 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.59116071098782a37a9183a8102fe91b
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.gpio.h.62.9d56422551a9e9d5b3a7f09fd40d1695
                           .group:0000000000000000 wm4.i2c_lib.h.42.5fd828f6712e1f3a1c5cb3c7bbae1df4
                           .group:0000000000000000 wm4.ioc.h.41.7444fe7016a1d045dd9fea497d615b28
                           .group:0000000000000000 wm4.sys_ctrl.h.41.c6bbd4dace326d685c1afa45bc1ba1e2
                           .group:0000000000000000 wm4.hw_gpio.h.39.abbe53cff9a4c1fb5f1c34960fe1e7aa
                           .group:0000000000000000 wm4.hw_i2cm.h.39.4b5af155c75f23d9eeb001d8feb957ac
                           .group:0000000000000000 wm4.hw_ioc.h.39.7722cce4a3cc0e3380c3cd135aee3b21
                           .group:0000000000000000 wm4.hw_memmap.h.39.19283c377d449c9bca5fdd8ccb62628c
                           .group:0000000000000000 wm4.hw_sys_ctrl.h.39.50b4d7775c38e82076d0eb3bdc2daf82

UNDEFINED SYMBOLS
SysCtrlPeripheralEnable
SysCtrlPeripheralSleepEnable
SysCtrlPeripheralDeepSleepDisable
SysCtrlPeripheralReset
GPIOPinTypeI2C
IOCPinConfigPeriphInput
IOCPinConfigPeriphOutput
SysCtrlClockGet
I2CMasterInitExpClk
I2CMasterEnable
I2CMasterSlaveAddrSet
I2CMasterControl
board_timer_get
board_timer_expired
I2CMasterBusy
I2CMasterDataGet
I2CMasterDataPut
