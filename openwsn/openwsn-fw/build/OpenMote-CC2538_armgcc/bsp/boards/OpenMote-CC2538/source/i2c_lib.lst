   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"i2c_lib.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	I2CMasterInitExpClk
  20              		.thumb
  21              		.thumb_func
  23              	I2CMasterInitExpClk:
  24              	.LFB0:
  25              		.file 1 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c"
   1:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** /******************************************************************************
   2:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  Filename:       i2c.c
   3:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  Revised:        $Date: 2013-03-20 14:47:53 +0100 (Wed, 20 Mar 2013) $
   4:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  Revision:       $Revision: 9489 $
   5:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
   6:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  Description:    Driver for Inter-IC (I2C) bus block.
   7:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
   8:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
   9:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
  10:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
  11:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  Redistribution and use in source and binary forms, with or without
  12:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  modification, are permitted provided that the following conditions
  13:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  are met:
  14:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
  15:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *    Redistributions of source code must retain the above copyright
  16:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *    notice, this list of conditions and the following disclaimer.
  17:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
  18:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *    Redistributions in binary form must reproduce the above copyright
  19:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *    notice, this list of conditions and the following disclaimer in the
  20:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *    documentation and/or other materials provided with the distribution.
  21:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
  22:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  23:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *    its contributors may be used to endorse or promote products derived
  24:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *    from this software without specific prior written permission.
  25:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
  26:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  27:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  28:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  29:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  30:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  31:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  32:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  33:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  34:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  35:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** *
  38:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** ******************************************************************************/
  39:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
  40:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
  41:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
  42:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \addtogroup i2c_api
  43:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! @{
  44:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
  45:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
  46:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
  47:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** #include <headers/hw_i2cm.h>
  48:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** #include <headers/hw_i2cs.h>
  49:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** #include <headers/hw_ints.h>
  50:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** #include <headers/hw_memmap.h>
  51:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** #include <headers/hw_sys_ctrl.h>
  52:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** #include "debug.h"
  53:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** #include "i2c_lib.h"
  54:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** #include "interrupt.h"
  55:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
  56:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
  57:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
  58:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Initializes the I2C master block
  59:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
  60:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui32I2CClk is the rate of the clock supplied to the I2C module.
  61:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param bFast set up for fast data transfers
  62:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
  63:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function initializes operation of the I2C master block.  Upon
  64:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! successful initialization of the I2C block, this functionhas set the
  65:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! bus speed for the master, and has enabled the I2C master block.
  66:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
  67:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! If the parameter \e bFast is \b true, then the master block will be set up
  68:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! to transfer data at 400 kbps; otherwise, it will be set up to transfer data
  69:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! at 100 kbps.
  70:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
  71:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! The peripheral clock will be the same as the processor clock.  This will be
  72:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the value returned by SysCtrlClockGet(), or it can be explicitly hardcoded
  73:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! if it is constant and known (to save the code/execution overhead of a call
  74:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! to SysCtrlClockGet()).
  75:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
  76:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
  77:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
  78:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
  79:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
  80:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterInitExpClk(uint32_t ui32I2CClk, bool bFast)
  81:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
  26              		.loc 1 81 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 84B0     		sub	sp, sp, #16
  35              		.cfi_def_cfa_offset 24
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 7860     		str	r0, [r7, #4]
  39 0008 0B46     		mov	r3, r1
  40 000a FB70     		strb	r3, [r7, #3]
  82:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     uint32_t ui32SCLFreq;
  83:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     uint32_t ui32TPR;
  84:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
  85:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
  86:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Must enable the device before doing anything else.
  87:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
  88:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     I2CMasterEnable();
  41              		.loc 1 88 0
  42 000c FFF7FEFF 		bl	I2CMasterEnable
  89:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
  90:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
  91:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Get the desired SCL speed.
  92:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
  93:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     if(bFast == true)
  43              		.loc 1 93 0
  44 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  45 0012 002B     		cmp	r3, #0
  46 0014 02D0     		beq	.L2
  94:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
  95:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         ui32SCLFreq = 400000;
  47              		.loc 1 95 0
  48 0016 0E4B     		ldr	r3, .L4
  49 0018 FB60     		str	r3, [r7, #12]
  50 001a 01E0     		b	.L3
  51              	.L2:
  96:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
  97:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     else
  98:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
  99:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         ui32SCLFreq = 100000;
  52              		.loc 1 99 0
  53 001c 0D4B     		ldr	r3, .L4+4
  54 001e FB60     		str	r3, [r7, #12]
  55              	.L3:
 100:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 101:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 102:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 103:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Compute the clock divider that achieves the fastest speed less than or
 104:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // equal to the desired speed.  The numerator is biased to favor a larger
 105:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // clock divider so that the resulting clock is always less than or equal
 106:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // to the desired clock, never greater.
 107:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 108:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     ui32TPR = ((ui32I2CClk + (2 * 10 * ui32SCLFreq) - 1) / (2 * 10 * ui32SCLFreq)) - 1;
  56              		.loc 1 108 0
  57 0020 FA68     		ldr	r2, [r7, #12]
  58 0022 1346     		mov	r3, r2
  59 0024 9B00     		lsls	r3, r3, #2
  60 0026 1344     		add	r3, r3, r2
  61 0028 9B00     		lsls	r3, r3, #2
  62 002a 1A46     		mov	r2, r3
  63 002c 7B68     		ldr	r3, [r7, #4]
  64 002e 1344     		add	r3, r3, r2
  65 0030 591E     		subs	r1, r3, #1
  66 0032 FA68     		ldr	r2, [r7, #12]
  67 0034 1346     		mov	r3, r2
  68 0036 9B00     		lsls	r3, r3, #2
  69 0038 1344     		add	r3, r3, r2
  70 003a 9B00     		lsls	r3, r3, #2
  71 003c B1FBF3F3 		udiv	r3, r1, r3
  72 0040 013B     		subs	r3, r3, #1
  73 0042 BB60     		str	r3, [r7, #8]
 109:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_TPR) = ui32TPR;
  74              		.loc 1 109 0
  75 0044 044A     		ldr	r2, .L4+8
  76 0046 BB68     		ldr	r3, [r7, #8]
  77 0048 1360     		str	r3, [r2]
 110:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
  78              		.loc 1 110 0
  79 004a 1037     		adds	r7, r7, #16
  80              		.cfi_def_cfa_offset 8
  81 004c BD46     		mov	sp, r7
  82              		.cfi_def_cfa_register 13
  83              		@ sp needed
  84 004e 80BD     		pop	{r7, pc}
  85              	.L5:
  86              		.align	2
  87              	.L4:
  88 0050 801A0600 		.word	400000
  89 0054 A0860100 		.word	100000
  90 0058 0C000240 		.word	1073872908
  91              		.cfi_endproc
  92              	.LFE0:
  94              		.align	2
  95              		.global	I2CSlaveInit
  96              		.thumb
  97              		.thumb_func
  99              	I2CSlaveInit:
 100              	.LFB1:
 111:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 112:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 113:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 114:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Initializes the I2C slave block
 115:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 116:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui8SlaveAddr 7-bit slave address
 117:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 118:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function initializes operation of the I2C slave block.  Upon
 119:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! successful initialization of the I2C blocks, this function has set
 120:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the slave address has enabled the I2C slave block.
 121:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 122:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! The parameter \e ui8SlaveAddr is the value that will be compared against the
 123:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! slave address sent by an I2C master.
 124:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 125:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 126:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 127:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 128:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 129:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveInit(uint8_t ui8SlaveAddr)
 130:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 101              		.loc 1 130 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 8
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 005c 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 005e 82B0     		sub	sp, sp, #8
 110              		.cfi_def_cfa_offset 16
 111 0060 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
 113 0062 0346     		mov	r3, r0
 114 0064 FB71     		strb	r3, [r7, #7]
 131:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 132:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Check the arguments.
 133:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 134:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     ASSERT(!(ui8SlaveAddr & 0x80));
 135:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 136:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 137:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Must enable the device before doing anything else.
 138:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 139:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     I2CSlaveEnable();
 115              		.loc 1 139 0
 116 0066 FFF7FEFF 		bl	I2CSlaveEnable
 140:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 141:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 142:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Set up the slave address.
 143:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 144:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_OAR) = ui8SlaveAddr;
 117              		.loc 1 144 0
 118 006a 034A     		ldr	r2, .L7
 119 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 120 006e 1360     		str	r3, [r2]
 145:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 121              		.loc 1 145 0
 122 0070 0837     		adds	r7, r7, #8
 123              		.cfi_def_cfa_offset 8
 124 0072 BD46     		mov	sp, r7
 125              		.cfi_def_cfa_register 13
 126              		@ sp needed
 127 0074 80BD     		pop	{r7, pc}
 128              	.L8:
 129 0076 00BF     		.align	2
 130              	.L7:
 131 0078 00080240 		.word	1073874944
 132              		.cfi_endproc
 133              	.LFE1:
 135              		.align	2
 136              		.global	I2CMasterEnable
 137              		.thumb
 138              		.thumb_func
 140              	I2CMasterEnable:
 141              	.LFB2:
 146:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 147:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 148:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 149:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Enables the I2C Master block
 150:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 151:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function will enable operation of the I2C Master block.
 152:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 153:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 154:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 155:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 156:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 157:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterEnable(void)
 158:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 142              		.loc 1 158 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147 007c 80B4     		push	{r7}
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 007e 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 159:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 160:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Enable the master block.
 161:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 162:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_CR) |= I2CM_CR_MFE;
 152              		.loc 1 162 0
 153 0080 044A     		ldr	r2, .L10
 154 0082 044B     		ldr	r3, .L10
 155 0084 1B68     		ldr	r3, [r3]
 156 0086 43F01003 		orr	r3, r3, #16
 157 008a 1360     		str	r3, [r2]
 163:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 158              		.loc 1 163 0
 159 008c BD46     		mov	sp, r7
 160              		.cfi_def_cfa_register 13
 161              		@ sp needed
 162 008e 5DF8047B 		ldr	r7, [sp], #4
 163              		.cfi_restore 7
 164              		.cfi_def_cfa_offset 0
 165 0092 7047     		bx	lr
 166              	.L11:
 167              		.align	2
 168              	.L10:
 169 0094 20000240 		.word	1073872928
 170              		.cfi_endproc
 171              	.LFE2:
 173              		.align	2
 174              		.global	I2CSlaveEnable
 175              		.thumb
 176              		.thumb_func
 178              	I2CSlaveEnable:
 179              	.LFB3:
 164:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 165:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 166:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 167:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Enables the I2C slave block
 168:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 169:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function enables operation of the I2C slave block.
 170:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 171:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 172:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 173:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 174:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 175:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveEnable(void)
 176:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 180              		.loc 1 176 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0098 80B4     		push	{r7}
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 009a 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 177:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 178:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Enable the clock to the slave block.
 179:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 180:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_CR) |= I2CM_CR_SFE;
 190              		.loc 1 180 0
 191 009c 064A     		ldr	r2, .L13
 192 009e 064B     		ldr	r3, .L13
 193 00a0 1B68     		ldr	r3, [r3]
 194 00a2 43F02003 		orr	r3, r3, #32
 195 00a6 1360     		str	r3, [r2]
 181:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 182:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 183:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Enable the slave.
 184:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 185:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_CTRL) = I2CS_CTRL_DA;
 196              		.loc 1 185 0
 197 00a8 044B     		ldr	r3, .L13+4
 198 00aa 0122     		movs	r2, #1
 199 00ac 1A60     		str	r2, [r3]
 186:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 200              		.loc 1 186 0
 201 00ae BD46     		mov	sp, r7
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 00b0 5DF8047B 		ldr	r7, [sp], #4
 205              		.cfi_restore 7
 206              		.cfi_def_cfa_offset 0
 207 00b4 7047     		bx	lr
 208              	.L14:
 209 00b6 00BF     		.align	2
 210              	.L13:
 211 00b8 20000240 		.word	1073872928
 212 00bc 04080240 		.word	1073874948
 213              		.cfi_endproc
 214              	.LFE3:
 216              		.align	2
 217              		.global	I2CMasterDisable
 218              		.thumb
 219              		.thumb_func
 221              	I2CMasterDisable:
 222              	.LFB4:
 187:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 188:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 189:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 190:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Disables the I2C master block
 191:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 192:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function disables operation of the I2C master block.
 193:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 194:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 195:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 196:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 197:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 198:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterDisable(void)
 199:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 223              		.loc 1 199 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228 00c0 80B4     		push	{r7}
 229              		.cfi_def_cfa_offset 4
 230              		.cfi_offset 7, -4
 231 00c2 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 200:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 201:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Disable the master block.
 202:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 203:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_CR) &= ~(I2CM_CR_MFE);
 233              		.loc 1 203 0
 234 00c4 044A     		ldr	r2, .L16
 235 00c6 044B     		ldr	r3, .L16
 236 00c8 1B68     		ldr	r3, [r3]
 237 00ca 23F01003 		bic	r3, r3, #16
 238 00ce 1360     		str	r3, [r2]
 204:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 239              		.loc 1 204 0
 240 00d0 BD46     		mov	sp, r7
 241              		.cfi_def_cfa_register 13
 242              		@ sp needed
 243 00d2 5DF8047B 		ldr	r7, [sp], #4
 244              		.cfi_restore 7
 245              		.cfi_def_cfa_offset 0
 246 00d6 7047     		bx	lr
 247              	.L17:
 248              		.align	2
 249              	.L16:
 250 00d8 20000240 		.word	1073872928
 251              		.cfi_endproc
 252              	.LFE4:
 254              		.align	2
 255              		.global	I2CSlaveDisable
 256              		.thumb
 257              		.thumb_func
 259              	I2CSlaveDisable:
 260              	.LFB5:
 205:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 206:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 207:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 208:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Disables the I2C slave block
 209:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 210:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function disables operation of the I2C slave block.
 211:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 212:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 213:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 214:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 215:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 216:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveDisable(void)
 217:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 261              		.loc 1 217 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 00dc 80B4     		push	{r7}
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 7, -4
 269 00de 00AF     		add	r7, sp, #0
 270              		.cfi_def_cfa_register 7
 218:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 219:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Disable the slave.
 220:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 221:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_CTRL) = 0;
 271              		.loc 1 221 0
 272 00e0 064B     		ldr	r3, .L19
 273 00e2 0022     		movs	r2, #0
 274 00e4 1A60     		str	r2, [r3]
 222:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 223:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 224:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Disable the clock to the slave block.
 225:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 226:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_CR) &= ~(I2CM_CR_SFE);
 275              		.loc 1 226 0
 276 00e6 064A     		ldr	r2, .L19+4
 277 00e8 054B     		ldr	r3, .L19+4
 278 00ea 1B68     		ldr	r3, [r3]
 279 00ec 23F02003 		bic	r3, r3, #32
 280 00f0 1360     		str	r3, [r2]
 227:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 281              		.loc 1 227 0
 282 00f2 BD46     		mov	sp, r7
 283              		.cfi_def_cfa_register 13
 284              		@ sp needed
 285 00f4 5DF8047B 		ldr	r7, [sp], #4
 286              		.cfi_restore 7
 287              		.cfi_def_cfa_offset 0
 288 00f8 7047     		bx	lr
 289              	.L20:
 290 00fa 00BF     		.align	2
 291              	.L19:
 292 00fc 04080240 		.word	1073874948
 293 0100 20000240 		.word	1073872928
 294              		.cfi_endproc
 295              	.LFE5:
 297              		.align	2
 298              		.global	I2CIntRegister
 299              		.thumb
 300              		.thumb_func
 302              	I2CIntRegister:
 303              	.LFB6:
 228:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 229:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 230:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 231:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Registers an interrupt handler for the I2C module
 232:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 233:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param pfnHandler is a pointer to the function to be called when the
 234:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! I2C interrupt occurs.
 235:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 236:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function sets the handler to be called when an I2C interrupt occurs.
 237:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function enables the global interrupt in the interrupt controller;
 238:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! specific I2C interrupts must be enabled through I2CMasterIntEnable() and
 239:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! I2CSlaveIntEnable().  If necessary, the interrupt handler must clear
 240:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the interrupt source through I2CMasterIntClear() and I2CSlaveIntClear().
 241:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 242:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \sa See IntRegister() for important information about registering interrupt
 243:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! handlers.
 244:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 245:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 246:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 247:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 248:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 249:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CIntRegister(void (*pfnHandler)(void))
 250:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 304              		.loc 1 250 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 8
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0104 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0106 82B0     		sub	sp, sp, #8
 313              		.cfi_def_cfa_offset 16
 314 0108 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
 316 010a 7860     		str	r0, [r7, #4]
 251:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 252:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Register the interrupt handler, returning an error if an error occurs.
 253:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 254:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     IntRegister(INT_I2C0, pfnHandler);
 317              		.loc 1 254 0
 318 010c 1820     		movs	r0, #24
 319 010e 7968     		ldr	r1, [r7, #4]
 320 0110 FFF7FEFF 		bl	IntRegister
 255:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 256:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 257:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Enable the I2C interrupt.
 258:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 259:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     IntEnable(INT_I2C0);
 321              		.loc 1 259 0
 322 0114 1820     		movs	r0, #24
 323 0116 FFF7FEFF 		bl	IntEnable
 260:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 324              		.loc 1 260 0
 325 011a 0837     		adds	r7, r7, #8
 326              		.cfi_def_cfa_offset 8
 327 011c BD46     		mov	sp, r7
 328              		.cfi_def_cfa_register 13
 329              		@ sp needed
 330 011e 80BD     		pop	{r7, pc}
 331              		.cfi_endproc
 332              	.LFE6:
 334              		.align	2
 335              		.global	I2CIntUnregister
 336              		.thumb
 337              		.thumb_func
 339              	I2CIntUnregister:
 340              	.LFB7:
 261:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 262:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 263:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 264:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Unregisters an interrupt handler for the I2C module
 265:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 266:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function clears the handler to be called when an I2C interrupt
 267:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! occurs.  The function also masks off the interrupt in the interrupt
 268:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! controller so that the interrupt handler no longer is called.
 269:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 270:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \sa See IntRegister() for important information about registering interrupt
 271:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! handlers.
 272:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 273:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 274:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 275:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 276:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 277:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CIntUnregister(void)
 278:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 341              		.loc 1 278 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0120 80B5     		push	{r7, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0122 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 279:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 280:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Disable the interrupt.
 281:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 282:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     IntDisable(INT_I2C0);
 351              		.loc 1 282 0
 352 0124 1820     		movs	r0, #24
 353 0126 FFF7FEFF 		bl	IntDisable
 283:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 284:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 285:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Unregister the interrupt handler.
 286:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 287:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     IntUnregister(INT_I2C0);
 354              		.loc 1 287 0
 355 012a 1820     		movs	r0, #24
 356 012c FFF7FEFF 		bl	IntUnregister
 288:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 357              		.loc 1 288 0
 358 0130 80BD     		pop	{r7, pc}
 359              		.cfi_endproc
 360              	.LFE7:
 362 0132 00BF     		.align	2
 363              		.global	I2CMasterIntEnable
 364              		.thumb
 365              		.thumb_func
 367              	I2CMasterIntEnable:
 368              	.LFB8:
 289:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 290:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 291:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 292:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Enables the I2C Master interrupt
 293:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 294:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function enables the I2C Master interrupt source.
 295:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 296:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 297:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 298:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 299:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 300:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterIntEnable(void)
 301:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 369              		.loc 1 301 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0134 80B4     		push	{r7}
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 0136 00AF     		add	r7, sp, #0
 378              		.cfi_def_cfa_register 7
 302:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 303:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Enable the master interrupt.
 304:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 305:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_IMR) = I2CM_IMR_IM;
 379              		.loc 1 305 0
 380 0138 034B     		ldr	r3, .L24
 381 013a 0122     		movs	r2, #1
 382 013c 1A60     		str	r2, [r3]
 306:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 383              		.loc 1 306 0
 384 013e BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 0140 5DF8047B 		ldr	r7, [sp], #4
 388              		.cfi_restore 7
 389              		.cfi_def_cfa_offset 0
 390 0144 7047     		bx	lr
 391              	.L25:
 392 0146 00BF     		.align	2
 393              	.L24:
 394 0148 10000240 		.word	1073872912
 395              		.cfi_endproc
 396              	.LFE8:
 398              		.align	2
 399              		.global	I2CSlaveIntEnable
 400              		.thumb
 401              		.thumb_func
 403              	I2CSlaveIntEnable:
 404              	.LFB9:
 307:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 308:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 309:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 310:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Enables the I2C Slave interrupt
 311:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 312:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function enables the I2C Slave interrupt source.
 313:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 314:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 315:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 316:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 317:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 318:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveIntEnable(void)
 319:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 405              		.loc 1 319 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 0
 408              		@ frame_needed = 1, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 410 014c 80B4     		push	{r7}
 411              		.cfi_def_cfa_offset 4
 412              		.cfi_offset 7, -4
 413 014e 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 320:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 321:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Enable the slave interrupt.
 322:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 323:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_IMR) |= I2C_SLAVE_INT_DATA;
 415              		.loc 1 323 0
 416 0150 044A     		ldr	r2, .L27
 417 0152 044B     		ldr	r3, .L27
 418 0154 1B68     		ldr	r3, [r3]
 419 0156 43F00103 		orr	r3, r3, #1
 420 015a 1360     		str	r3, [r2]
 324:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 421              		.loc 1 324 0
 422 015c BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 015e 5DF8047B 		ldr	r7, [sp], #4
 426              		.cfi_restore 7
 427              		.cfi_def_cfa_offset 0
 428 0162 7047     		bx	lr
 429              	.L28:
 430              		.align	2
 431              	.L27:
 432 0164 0C080240 		.word	1073874956
 433              		.cfi_endproc
 434              	.LFE9:
 436              		.align	2
 437              		.global	I2CSlaveIntEnableEx
 438              		.thumb
 439              		.thumb_func
 441              	I2CSlaveIntEnableEx:
 442              	.LFB10:
 325:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 326:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 327:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 328:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Enables individual I2C slave interrupt sources
 329:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 330:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui32IntFlags is the bit mask of the interrupt sources to be enabled.
 331:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 332:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function enables the indicated I2C slave interrupt sources.  Only the
 333:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! sources that are enabled can be reflected to the processor interrupt;
 334:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! disabled sources have no effect on the processor.
 335:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 336:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! The \e ui32IntFlags parameter is the logical OR of any of the following:
 337:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 338:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_SLAVE_INT_STOP   Stop condition detected interrupt
 339:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_SLAVE_INT_START  Start condition detected interrupt
 340:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_SLAVE_INT_DATA   Data interrupt
 341:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 342:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 343:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 344:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 345:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 346:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveIntEnableEx(uint32_t ui32IntFlags)
 347:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 443              		.loc 1 347 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448 0168 80B4     		push	{r7}
 449              		.cfi_def_cfa_offset 4
 450              		.cfi_offset 7, -4
 451 016a 83B0     		sub	sp, sp, #12
 452              		.cfi_def_cfa_offset 16
 453 016c 00AF     		add	r7, sp, #0
 454              		.cfi_def_cfa_register 7
 455 016e 7860     		str	r0, [r7, #4]
 348:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 349:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Enable the slave interrupt.
 350:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 351:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_IMR) |= ui32IntFlags;
 456              		.loc 1 351 0
 457 0170 0549     		ldr	r1, .L30
 458 0172 054B     		ldr	r3, .L30
 459 0174 1A68     		ldr	r2, [r3]
 460 0176 7B68     		ldr	r3, [r7, #4]
 461 0178 1343     		orrs	r3, r3, r2
 462 017a 0B60     		str	r3, [r1]
 352:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 463              		.loc 1 352 0
 464 017c 0C37     		adds	r7, r7, #12
 465              		.cfi_def_cfa_offset 4
 466 017e BD46     		mov	sp, r7
 467              		.cfi_def_cfa_register 13
 468              		@ sp needed
 469 0180 5DF8047B 		ldr	r7, [sp], #4
 470              		.cfi_restore 7
 471              		.cfi_def_cfa_offset 0
 472 0184 7047     		bx	lr
 473              	.L31:
 474 0186 00BF     		.align	2
 475              	.L30:
 476 0188 0C080240 		.word	1073874956
 477              		.cfi_endproc
 478              	.LFE10:
 480              		.align	2
 481              		.global	I2CMasterIntDisable
 482              		.thumb
 483              		.thumb_func
 485              	I2CMasterIntDisable:
 486              	.LFB11:
 353:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 354:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 355:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 356:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Disables the I2C master interrupt
 357:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 358:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function disables the I2C master interrupt source.
 359:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 360:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 361:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 362:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 363:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 364:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterIntDisable(void)
 365:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 487              		.loc 1 365 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 018c 80B4     		push	{r7}
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 018e 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 366:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 367:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Disable the master interrupt.
 368:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 369:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_IMR) = 0;
 497              		.loc 1 369 0
 498 0190 034B     		ldr	r3, .L33
 499 0192 0022     		movs	r2, #0
 500 0194 1A60     		str	r2, [r3]
 370:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 501              		.loc 1 370 0
 502 0196 BD46     		mov	sp, r7
 503              		.cfi_def_cfa_register 13
 504              		@ sp needed
 505 0198 5DF8047B 		ldr	r7, [sp], #4
 506              		.cfi_restore 7
 507              		.cfi_def_cfa_offset 0
 508 019c 7047     		bx	lr
 509              	.L34:
 510 019e 00BF     		.align	2
 511              	.L33:
 512 01a0 10000240 		.word	1073872912
 513              		.cfi_endproc
 514              	.LFE11:
 516              		.align	2
 517              		.global	I2CSlaveIntDisable
 518              		.thumb
 519              		.thumb_func
 521              	I2CSlaveIntDisable:
 522              	.LFB12:
 371:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 372:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 373:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 374:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Disables the I2C Slave interrupt
 375:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 376:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function disables the I2C Slave interrupt source
 377:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 378:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 379:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 380:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 381:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 382:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveIntDisable(void)
 383:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 523              		.loc 1 383 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 01a4 80B4     		push	{r7}
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 01a6 00AF     		add	r7, sp, #0
 532              		.cfi_def_cfa_register 7
 384:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 385:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Disable the slave interrupt.
 386:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 387:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_IMR) &= ~I2C_SLAVE_INT_DATA;
 533              		.loc 1 387 0
 534 01a8 044A     		ldr	r2, .L36
 535 01aa 044B     		ldr	r3, .L36
 536 01ac 1B68     		ldr	r3, [r3]
 537 01ae 23F00103 		bic	r3, r3, #1
 538 01b2 1360     		str	r3, [r2]
 388:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 539              		.loc 1 388 0
 540 01b4 BD46     		mov	sp, r7
 541              		.cfi_def_cfa_register 13
 542              		@ sp needed
 543 01b6 5DF8047B 		ldr	r7, [sp], #4
 544              		.cfi_restore 7
 545              		.cfi_def_cfa_offset 0
 546 01ba 7047     		bx	lr
 547              	.L37:
 548              		.align	2
 549              	.L36:
 550 01bc 0C080240 		.word	1073874956
 551              		.cfi_endproc
 552              	.LFE12:
 554              		.align	2
 555              		.global	I2CSlaveIntDisableEx
 556              		.thumb
 557              		.thumb_func
 559              	I2CSlaveIntDisableEx:
 560              	.LFB13:
 389:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 390:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 391:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 392:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Disables individual I2C slave interrupt sources
 393:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 394:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui32IntFlags is the bit mask of the interrupt sources to be disabled.
 395:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 396:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function disables the indicated I2C slave interrupt sources.
 397:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Only the sources that are enabled can be reflected to the processor
 398:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! interrupt; disabled sources have no effect on the processor.
 399:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 400:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! The \e ui32IntFlags parameter has the same definition as the \e ui32IntFlags
 401:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! parameter to I2CSlaveIntEnableEx().
 402:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 403:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 404:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 405:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 406:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 407:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveIntDisableEx(uint32_t ui32IntFlags)
 408:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 561              		.loc 1 408 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 8
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566 01c0 80B4     		push	{r7}
 567              		.cfi_def_cfa_offset 4
 568              		.cfi_offset 7, -4
 569 01c2 83B0     		sub	sp, sp, #12
 570              		.cfi_def_cfa_offset 16
 571 01c4 00AF     		add	r7, sp, #0
 572              		.cfi_def_cfa_register 7
 573 01c6 7860     		str	r0, [r7, #4]
 409:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 410:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Disable the slave interrupt.
 411:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 412:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_IMR) &= ~ui32IntFlags;
 574              		.loc 1 412 0
 575 01c8 0549     		ldr	r1, .L39
 576 01ca 054B     		ldr	r3, .L39
 577 01cc 1A68     		ldr	r2, [r3]
 578 01ce 7B68     		ldr	r3, [r7, #4]
 579 01d0 DB43     		mvns	r3, r3
 580 01d2 1340     		ands	r3, r3, r2
 581 01d4 0B60     		str	r3, [r1]
 413:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 582              		.loc 1 413 0
 583 01d6 0C37     		adds	r7, r7, #12
 584              		.cfi_def_cfa_offset 4
 585 01d8 BD46     		mov	sp, r7
 586              		.cfi_def_cfa_register 13
 587              		@ sp needed
 588 01da 5DF8047B 		ldr	r7, [sp], #4
 589              		.cfi_restore 7
 590              		.cfi_def_cfa_offset 0
 591 01de 7047     		bx	lr
 592              	.L40:
 593              		.align	2
 594              	.L39:
 595 01e0 0C080240 		.word	1073874956
 596              		.cfi_endproc
 597              	.LFE13:
 599              		.align	2
 600              		.global	I2CMasterIntStatus
 601              		.thumb
 602              		.thumb_func
 604              	I2CMasterIntStatus:
 605              	.LFB14:
 414:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 415:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 416:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 417:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Gets the current I2C master interrupt status
 418:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 419:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param bMasked is false if the raw interrupt status is requested and
 420:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! true if the masked interrupt status is requested.
 421:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 422:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function returns the interrupt status for the I2C master module.
 423:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Either the raw interrupt status or the status of interrupts that are allowed
 424:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! to reflect to the processor can be returned.
 425:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 426:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns the current interrupt status, returned as \b true if active
 427:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! or \b false if not active.
 428:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 429:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 430:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** bool
 431:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterIntStatus(bool bMasked)
 432:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 606              		.loc 1 432 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 611 01e4 80B4     		push	{r7}
 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 7, -4
 614 01e6 83B0     		sub	sp, sp, #12
 615              		.cfi_def_cfa_offset 16
 616 01e8 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 01ea 0346     		mov	r3, r0
 619 01ec FB71     		strb	r3, [r7, #7]
 433:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 434:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Return either the interrupt status or the raw interrupt status as
 435:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // requested.
 436:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 437:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     if(bMasked)
 620              		.loc 1 437 0
 621 01ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 622 01f0 002B     		cmp	r3, #0
 623 01f2 07D0     		beq	.L42
 438:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 439:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return((HWREG(I2CM_MIS)) ? true : false);
 624              		.loc 1 439 0
 625 01f4 0A4B     		ldr	r3, .L44
 626 01f6 1B68     		ldr	r3, [r3]
 627 01f8 002B     		cmp	r3, #0
 628 01fa 14BF     		ite	ne
 629 01fc 0123     		movne	r3, #1
 630 01fe 0023     		moveq	r3, #0
 631 0200 DBB2     		uxtb	r3, r3
 632 0202 06E0     		b	.L43
 633              	.L42:
 440:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 441:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     else
 442:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 443:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return((HWREG(I2CM_RIS)) ? true : false);
 634              		.loc 1 443 0
 635 0204 074B     		ldr	r3, .L44+4
 636 0206 1B68     		ldr	r3, [r3]
 637 0208 002B     		cmp	r3, #0
 638 020a 14BF     		ite	ne
 639 020c 0123     		movne	r3, #1
 640 020e 0023     		moveq	r3, #0
 641 0210 DBB2     		uxtb	r3, r3
 642              	.L43:
 444:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 445:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 643              		.loc 1 445 0
 644 0212 1846     		mov	r0, r3
 645 0214 0C37     		adds	r7, r7, #12
 646              		.cfi_def_cfa_offset 4
 647 0216 BD46     		mov	sp, r7
 648              		.cfi_def_cfa_register 13
 649              		@ sp needed
 650 0218 5DF8047B 		ldr	r7, [sp], #4
 651              		.cfi_restore 7
 652              		.cfi_def_cfa_offset 0
 653 021c 7047     		bx	lr
 654              	.L45:
 655 021e 00BF     		.align	2
 656              	.L44:
 657 0220 18000240 		.word	1073872920
 658 0224 14000240 		.word	1073872916
 659              		.cfi_endproc
 660              	.LFE14:
 662              		.align	2
 663              		.global	I2CSlaveIntStatus
 664              		.thumb
 665              		.thumb_func
 667              	I2CSlaveIntStatus:
 668              	.LFB15:
 446:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 447:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 448:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 449:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Gets the current I2C slave interrupt status
 450:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 451:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param bMasked is false if the raw interrupt status is requested and
 452:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! true if the masked interrupt status is requested.
 453:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 454:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function returns the interrupt status for the I2C slave module.
 455:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Either the raw interrupt status or the status of interrupts that are
 456:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! allowed to reflect to the processor can be returned.
 457:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 458:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns the current interrupt status, returned as \b true if active
 459:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! or \b false if not active.
 460:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 461:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 462:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** bool
 463:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveIntStatus(bool bMasked)
 464:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 669              		.loc 1 464 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 8
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674 0228 80B4     		push	{r7}
 675              		.cfi_def_cfa_offset 4
 676              		.cfi_offset 7, -4
 677 022a 83B0     		sub	sp, sp, #12
 678              		.cfi_def_cfa_offset 16
 679 022c 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 022e 0346     		mov	r3, r0
 682 0230 FB71     		strb	r3, [r7, #7]
 465:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 466:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Return either the interrupt status or the raw interrupt status as
 467:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // requested.
 468:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 469:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     if(bMasked)
 683              		.loc 1 469 0
 684 0232 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 685 0234 002B     		cmp	r3, #0
 686 0236 07D0     		beq	.L47
 470:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 471:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return((HWREG(I2CS_MIS)) ? true : false);
 687              		.loc 1 471 0
 688 0238 0A4B     		ldr	r3, .L49
 689 023a 1B68     		ldr	r3, [r3]
 690 023c 002B     		cmp	r3, #0
 691 023e 14BF     		ite	ne
 692 0240 0123     		movne	r3, #1
 693 0242 0023     		moveq	r3, #0
 694 0244 DBB2     		uxtb	r3, r3
 695 0246 06E0     		b	.L48
 696              	.L47:
 472:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 473:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     else
 474:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 475:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return((HWREG(I2CS_RIS)) ? true : false);
 697              		.loc 1 475 0
 698 0248 074B     		ldr	r3, .L49+4
 699 024a 1B68     		ldr	r3, [r3]
 700 024c 002B     		cmp	r3, #0
 701 024e 14BF     		ite	ne
 702 0250 0123     		movne	r3, #1
 703 0252 0023     		moveq	r3, #0
 704 0254 DBB2     		uxtb	r3, r3
 705              	.L48:
 476:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 477:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 706              		.loc 1 477 0
 707 0256 1846     		mov	r0, r3
 708 0258 0C37     		adds	r7, r7, #12
 709              		.cfi_def_cfa_offset 4
 710 025a BD46     		mov	sp, r7
 711              		.cfi_def_cfa_register 13
 712              		@ sp needed
 713 025c 5DF8047B 		ldr	r7, [sp], #4
 714              		.cfi_restore 7
 715              		.cfi_def_cfa_offset 0
 716 0260 7047     		bx	lr
 717              	.L50:
 718 0262 00BF     		.align	2
 719              	.L49:
 720 0264 14080240 		.word	1073874964
 721 0268 10080240 		.word	1073874960
 722              		.cfi_endproc
 723              	.LFE15:
 725              		.align	2
 726              		.global	I2CSlaveIntStatusEx
 727              		.thumb
 728              		.thumb_func
 730              	I2CSlaveIntStatusEx:
 731              	.LFB16:
 478:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 479:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 480:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 481:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Gets the current I2C slave interrupt status
 482:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 483:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param bMasked is false if the raw interrupt status is requested and
 484:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! true if the masked interrupt status is requested.
 485:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 486:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function returns the interrupt status for the I2C slave module.  Either
 487:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the raw interrupt status or the status of interrupts that are allowed to
 488:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! reflect to the processor can be returned.
 489:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 490:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns the current interrupt status, enumerated as a bit field of
 491:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! values described in I2CSlaveIntEnableEx().
 492:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 493:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 494:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** uint32_t
 495:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveIntStatusEx(bool bMasked)
 496:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 732              		.loc 1 496 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 8
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 737 026c 80B4     		push	{r7}
 738              		.cfi_def_cfa_offset 4
 739              		.cfi_offset 7, -4
 740 026e 83B0     		sub	sp, sp, #12
 741              		.cfi_def_cfa_offset 16
 742 0270 00AF     		add	r7, sp, #0
 743              		.cfi_def_cfa_register 7
 744 0272 0346     		mov	r3, r0
 745 0274 FB71     		strb	r3, [r7, #7]
 497:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 498:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Return either the interrupt status or the raw interrupt status as
 499:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // requested.
 500:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 501:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     if(bMasked)
 746              		.loc 1 501 0
 747 0276 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 748 0278 002B     		cmp	r3, #0
 749 027a 02D0     		beq	.L52
 502:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 503:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(HWREG(I2CS_MIS));
 750              		.loc 1 503 0
 751 027c 054B     		ldr	r3, .L54
 752 027e 1B68     		ldr	r3, [r3]
 753 0280 01E0     		b	.L53
 754              	.L52:
 504:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 505:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     else
 506:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 507:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(HWREG(I2CS_RIS));
 755              		.loc 1 507 0
 756 0282 054B     		ldr	r3, .L54+4
 757 0284 1B68     		ldr	r3, [r3]
 758              	.L53:
 508:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 509:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 759              		.loc 1 509 0
 760 0286 1846     		mov	r0, r3
 761 0288 0C37     		adds	r7, r7, #12
 762              		.cfi_def_cfa_offset 4
 763 028a BD46     		mov	sp, r7
 764              		.cfi_def_cfa_register 13
 765              		@ sp needed
 766 028c 5DF8047B 		ldr	r7, [sp], #4
 767              		.cfi_restore 7
 768              		.cfi_def_cfa_offset 0
 769 0290 7047     		bx	lr
 770              	.L55:
 771 0292 00BF     		.align	2
 772              	.L54:
 773 0294 14080240 		.word	1073874964
 774 0298 10080240 		.word	1073874960
 775              		.cfi_endproc
 776              	.LFE16:
 778              		.align	2
 779              		.global	I2CMasterIntClear
 780              		.thumb
 781              		.thumb_func
 783              	I2CMasterIntClear:
 784              	.LFB17:
 510:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 511:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 512:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 513:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Clears I2C master interrupt sources
 514:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 515:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function clears the I2C master interrupt source, so that it no longer
 516:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! asserts. This must be done in the interrupt handler to keep it from being
 517:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! called again immediately upon exit.
 518:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 519:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \note Because there is a write buffer in the Cortex-M3 processor, it may
 520:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! take several clock cycles before the interrupt source is actually cleared.
 521:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Therefore, it is recommended that the interrupt source be cleared early in
 522:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the interrupt handler (as opposed to the very last action) to avoid
 523:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! returning from the interrupt handler before the interrupt source is
 524:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! actually cleared.  Failure to do so may result in the interrupt handler
 525:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! being immediately reentered (because the interrupt controller still sees
 526:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the interrupt source asserted).
 527:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 528:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 529:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 530:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 531:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 532:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterIntClear(void)
 533:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 785              		.loc 1 533 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 790 029c 80B4     		push	{r7}
 791              		.cfi_def_cfa_offset 4
 792              		.cfi_offset 7, -4
 793 029e 00AF     		add	r7, sp, #0
 794              		.cfi_def_cfa_register 7
 534:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 535:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Clear the I2C master interrupt source.
 536:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 537:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_ICR) = I2CM_ICR_IC;
 795              		.loc 1 537 0
 796 02a0 044B     		ldr	r3, .L57
 797 02a2 0122     		movs	r2, #1
 798 02a4 1A60     		str	r2, [r3]
 538:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 539:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // This might not be needed. It was used on previous revisions of the IP
 540:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_MIS) = I2CM_ICR_IC;
 799              		.loc 1 540 0
 800 02a6 044B     		ldr	r3, .L57+4
 801 02a8 0122     		movs	r2, #1
 802 02aa 1A60     		str	r2, [r3]
 541:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 803              		.loc 1 541 0
 804 02ac BD46     		mov	sp, r7
 805              		.cfi_def_cfa_register 13
 806              		@ sp needed
 807 02ae 5DF8047B 		ldr	r7, [sp], #4
 808              		.cfi_restore 7
 809              		.cfi_def_cfa_offset 0
 810 02b2 7047     		bx	lr
 811              	.L58:
 812              		.align	2
 813              	.L57:
 814 02b4 1C000240 		.word	1073872924
 815 02b8 18000240 		.word	1073872920
 816              		.cfi_endproc
 817              	.LFE17:
 819              		.align	2
 820              		.global	I2CSlaveIntClear
 821              		.thumb
 822              		.thumb_func
 824              	I2CSlaveIntClear:
 825              	.LFB18:
 542:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 543:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 544:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 545:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Clears I2C slave interrupt sources
 546:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 547:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function clears the I2C slave interrupt source, so that it no longer
 548:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! asserts. This must be done in the interrupt handler to keep it from being
 549:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! recalled immediately upon exit.
 550:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 551:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \note Because there is a write buffer in the Cortex-M3 processor, it may
 552:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! take several clock cycles before the interrupt source is actually cleared.
 553:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Therefore, it is recommended that the interrupt source be cleared early in
 554:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the interrupt handler (as opposed to the very last action) to avoid
 555:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! returning from the interrupt handler before the interrupt source is
 556:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! actually cleared.  Failure to do so may result in the interrupt handler
 557:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! being immediately reentered (because the interrupt controller still sees
 558:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the interrupt source asserted).
 559:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 560:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 561:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 562:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 563:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 564:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveIntClear(void)
 565:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 826              		.loc 1 565 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 1, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 831 02bc 80B4     		push	{r7}
 832              		.cfi_def_cfa_offset 4
 833              		.cfi_offset 7, -4
 834 02be 00AF     		add	r7, sp, #0
 835              		.cfi_def_cfa_register 7
 566:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 567:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Clear the I2C slave interrupt source.
 568:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 569:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_ICR) = I2CS_ICR_DATAIC;
 836              		.loc 1 569 0
 837 02c0 034B     		ldr	r3, .L60
 838 02c2 0122     		movs	r2, #1
 839 02c4 1A60     		str	r2, [r3]
 570:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 840              		.loc 1 570 0
 841 02c6 BD46     		mov	sp, r7
 842              		.cfi_def_cfa_register 13
 843              		@ sp needed
 844 02c8 5DF8047B 		ldr	r7, [sp], #4
 845              		.cfi_restore 7
 846              		.cfi_def_cfa_offset 0
 847 02cc 7047     		bx	lr
 848              	.L61:
 849 02ce 00BF     		.align	2
 850              	.L60:
 851 02d0 18080240 		.word	1073874968
 852              		.cfi_endproc
 853              	.LFE18:
 855              		.align	2
 856              		.global	I2CSlaveIntClearEx
 857              		.thumb
 858              		.thumb_func
 860              	I2CSlaveIntClearEx:
 861              	.LFB19:
 571:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 572:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 573:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 574:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Clears the I2C slave interrupt sources
 575:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 576:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui32IntFlags is a bit mask of the interrupt sources to be cleared.
 577:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 578:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function clears the specified I2C Slave interrupt sources, so that they
 579:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! no longer assert.  This must be done in the interrupt handler to keep it from
 580:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! being called again immediately upon exit.
 581:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 582:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! The \e ui32IntFlags parameter has the same definition as the \e ui32IntFlags
 583:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! parameter to I2CSlaveIntEnableEx().
 584:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 585:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \note Because there is a write buffer in the Cortex-M3 processor, it may
 586:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! take several clock cycles before the interrupt source is actually cleared.
 587:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Therefore, it is recommended that the interrupt source be cleared early in
 588:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the interrupt handler (as opposed to the very last action) to avoid
 589:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! returning from the interrupt handler before the interrupt source is
 590:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! actually cleared.  Failure to do so may result in the interrupt handler
 591:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! being immediately reentered (because the interrupt controller still sees
 592:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! the interrupt source asserted).
 593:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 594:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 595:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 596:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 597:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 598:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveIntClearEx(uint32_t ui32IntFlags)
 599:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 862              		.loc 1 599 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 8
 865              		@ frame_needed = 1, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 867 02d4 80B4     		push	{r7}
 868              		.cfi_def_cfa_offset 4
 869              		.cfi_offset 7, -4
 870 02d6 83B0     		sub	sp, sp, #12
 871              		.cfi_def_cfa_offset 16
 872 02d8 00AF     		add	r7, sp, #0
 873              		.cfi_def_cfa_register 7
 874 02da 7860     		str	r0, [r7, #4]
 600:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 601:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Clear the I2C slave interrupt source.
 602:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 603:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_ICR) = ui32IntFlags;
 875              		.loc 1 603 0
 876 02dc 034A     		ldr	r2, .L63
 877 02de 7B68     		ldr	r3, [r7, #4]
 878 02e0 1360     		str	r3, [r2]
 604:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 879              		.loc 1 604 0
 880 02e2 0C37     		adds	r7, r7, #12
 881              		.cfi_def_cfa_offset 4
 882 02e4 BD46     		mov	sp, r7
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 02e6 5DF8047B 		ldr	r7, [sp], #4
 886              		.cfi_restore 7
 887              		.cfi_def_cfa_offset 0
 888 02ea 7047     		bx	lr
 889              	.L64:
 890              		.align	2
 891              	.L63:
 892 02ec 18080240 		.word	1073874968
 893              		.cfi_endproc
 894              	.LFE19:
 896              		.align	2
 897              		.global	I2CMasterSlaveAddrSet
 898              		.thumb
 899              		.thumb_func
 901              	I2CMasterSlaveAddrSet:
 902              	.LFB20:
 605:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 606:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 607:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 608:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Sets the address that the I2C master places on the bus
 609:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 610:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui8SlaveAddr 7-bit slave address
 611:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param bReceive flag indicating the type of communication with the slave
 612:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 613:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function sets the address that the I2C master places on the bus
 614:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! when initiating a transaction. When the \e bReceive parameter is set
 615:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! to \b true, the address indicates that the I2C master is initiating a
 616:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! read from the slave; otherwise, the address indicates that the I2C
 617:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! master is initiating a write to the slave.
 618:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 619:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 620:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 621:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 622:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 623:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterSlaveAddrSet(uint8_t ui8SlaveAddr, bool bReceive)
 624:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 903              		.loc 1 624 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 8
 906              		@ frame_needed = 1, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908 02f0 80B4     		push	{r7}
 909              		.cfi_def_cfa_offset 4
 910              		.cfi_offset 7, -4
 911 02f2 83B0     		sub	sp, sp, #12
 912              		.cfi_def_cfa_offset 16
 913 02f4 00AF     		add	r7, sp, #0
 914              		.cfi_def_cfa_register 7
 915 02f6 0346     		mov	r3, r0
 916 02f8 0A46     		mov	r2, r1
 917 02fa FB71     		strb	r3, [r7, #7]
 918 02fc 1346     		mov	r3, r2
 919 02fe BB71     		strb	r3, [r7, #6]
 625:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 626:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Check the arguments.
 627:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 628:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     ASSERT(!(ui8SlaveAddr & 0x80));
 629:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 630:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 631:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Set the address of the slave with which the master will communicate.
 632:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 633:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_SA) = (ui8SlaveAddr << 1) | bReceive;
 920              		.loc 1 633 0
 921 0300 0549     		ldr	r1, .L66
 922 0302 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 923 0304 5A00     		lsls	r2, r3, #1
 924 0306 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 925 0308 1343     		orrs	r3, r3, r2
 926 030a 0B60     		str	r3, [r1]
 634:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 927              		.loc 1 634 0
 928 030c 0C37     		adds	r7, r7, #12
 929              		.cfi_def_cfa_offset 4
 930 030e BD46     		mov	sp, r7
 931              		.cfi_def_cfa_register 13
 932              		@ sp needed
 933 0310 5DF8047B 		ldr	r7, [sp], #4
 934              		.cfi_restore 7
 935              		.cfi_def_cfa_offset 0
 936 0314 7047     		bx	lr
 937              	.L67:
 938 0316 00BF     		.align	2
 939              	.L66:
 940 0318 00000240 		.word	1073872896
 941              		.cfi_endproc
 942              	.LFE20:
 944              		.align	2
 945              		.global	I2CMasterBusy
 946              		.thumb
 947              		.thumb_func
 949              	I2CMasterBusy:
 950              	.LFB21:
 635:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 636:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 637:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 638:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Indicates whether or not the I2C master is busy
 639:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 640:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function returns an indication of whether or not the I2C master is
 641:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! busy transmitting or receiving data.
 642:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 643:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns \b true if the I2C master is busy; otherwise, returns
 644:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \b false
 645:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 646:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 647:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** bool
 648:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterBusy(void)
 649:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 951              		.loc 1 649 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956 031c 80B4     		push	{r7}
 957              		.cfi_def_cfa_offset 4
 958              		.cfi_offset 7, -4
 959 031e 00AF     		add	r7, sp, #0
 960              		.cfi_def_cfa_register 7
 650:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 651:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Return the busy status.
 652:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 653:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     if(HWREG(I2CM_STAT) & I2CM_STAT_BUSY)
 961              		.loc 1 653 0
 962 0320 064B     		ldr	r3, .L71
 963 0322 1B68     		ldr	r3, [r3]
 964 0324 03F00103 		and	r3, r3, #1
 965 0328 002B     		cmp	r3, #0
 966 032a 01D0     		beq	.L69
 654:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 655:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(true);
 967              		.loc 1 655 0
 968 032c 0123     		movs	r3, #1
 969 032e 00E0     		b	.L70
 970              	.L69:
 656:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 657:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     else
 658:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 659:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(false);
 971              		.loc 1 659 0
 972 0330 0023     		movs	r3, #0
 973              	.L70:
 660:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 661:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 974              		.loc 1 661 0
 975 0332 1846     		mov	r0, r3
 976 0334 BD46     		mov	sp, r7
 977              		.cfi_def_cfa_register 13
 978              		@ sp needed
 979 0336 5DF8047B 		ldr	r7, [sp], #4
 980              		.cfi_restore 7
 981              		.cfi_def_cfa_offset 0
 982 033a 7047     		bx	lr
 983              	.L72:
 984              		.align	2
 985              	.L71:
 986 033c 04000240 		.word	1073872900
 987              		.cfi_endproc
 988              	.LFE21:
 990              		.align	2
 991              		.global	I2CMasterBusBusy
 992              		.thumb
 993              		.thumb_func
 995              	I2CMasterBusBusy:
 996              	.LFB22:
 662:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 663:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 664:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 665:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Indicates whether or not the I2C bus is busy
 666:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 667:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function returns an indication of whether or not the I2C bus is busy.
 668:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function can be used in a multimaster environment to determine if
 669:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! another master is currently using the bus.
 670:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 671:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns \b true if the I2C bus is busy; otherwise, returns
 672:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \b false
 673:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 674:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 675:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** bool
 676:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterBusBusy(void)
 677:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 997              		.loc 1 677 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 0
 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 1002 0340 80B4     		push	{r7}
 1003              		.cfi_def_cfa_offset 4
 1004              		.cfi_offset 7, -4
 1005 0342 00AF     		add	r7, sp, #0
 1006              		.cfi_def_cfa_register 7
 678:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 679:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Return the bus busy status.
 680:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 681:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     if(HWREG(I2CM_STAT) & I2CM_STAT_BUSBSY)
 1007              		.loc 1 681 0
 1008 0344 064B     		ldr	r3, .L76
 1009 0346 1B68     		ldr	r3, [r3]
 1010 0348 03F04003 		and	r3, r3, #64
 1011 034c 002B     		cmp	r3, #0
 1012 034e 01D0     		beq	.L74
 682:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 683:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(true);
 1013              		.loc 1 683 0
 1014 0350 0123     		movs	r3, #1
 1015 0352 00E0     		b	.L75
 1016              	.L74:
 684:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 685:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     else
 686:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 687:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(false);
 1017              		.loc 1 687 0
 1018 0354 0023     		movs	r3, #0
 1019              	.L75:
 688:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 689:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 1020              		.loc 1 689 0
 1021 0356 1846     		mov	r0, r3
 1022 0358 BD46     		mov	sp, r7
 1023              		.cfi_def_cfa_register 13
 1024              		@ sp needed
 1025 035a 5DF8047B 		ldr	r7, [sp], #4
 1026              		.cfi_restore 7
 1027              		.cfi_def_cfa_offset 0
 1028 035e 7047     		bx	lr
 1029              	.L77:
 1030              		.align	2
 1031              	.L76:
 1032 0360 04000240 		.word	1073872900
 1033              		.cfi_endproc
 1034              	.LFE22:
 1036              		.align	2
 1037              		.global	I2CMasterControl
 1038              		.thumb
 1039              		.thumb_func
 1041              	I2CMasterControl:
 1042              	.LFB23:
 690:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 691:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 692:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 693:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Controls the state of the I2C master module
 694:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 695:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui32Cmd command to be issued to the I2C master module
 696:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 697:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function is used to control the state of the master module send and
 698:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! receive operations.  The \e ui32Cmd parameter can be one of the following
 699:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! values:
 700:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 701:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_SINGLE_SEND
 702:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_SINGLE_RECEIVE
 703:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_BURST_SEND_START
 704:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_BURST_SEND_CONT
 705:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_BURST_SEND_FINISH
 706:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_BURST_SEND_ERROR_STOP
 707:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_BURST_RECEIVE_START
 708:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_BURST_RECEIVE_CONT
 709:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_BURST_RECEIVE_FINISH
 710:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_CMD_BURST_RECEIVE_ERROR_STOP
 711:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 712:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 713:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 714:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 715:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 716:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterControl(uint32_t ui32Cmd)
 717:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 1043              		.loc 1 717 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 8
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047              		@ link register save eliminated.
 1048 0364 80B4     		push	{r7}
 1049              		.cfi_def_cfa_offset 4
 1050              		.cfi_offset 7, -4
 1051 0366 83B0     		sub	sp, sp, #12
 1052              		.cfi_def_cfa_offset 16
 1053 0368 00AF     		add	r7, sp, #0
 1054              		.cfi_def_cfa_register 7
 1055 036a 7860     		str	r0, [r7, #4]
 718:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 719:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Check the arguments.
 720:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 721:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     ASSERT((ui32Cmd == I2C_MASTER_CMD_SINGLE_SEND) ||
 722:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_SINGLE_RECEIVE) ||
 723:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_BURST_SEND_START) ||
 724:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_BURST_SEND_CONT) ||
 725:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_BURST_SEND_FINISH) ||
 726:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_BURST_SEND_ERROR_STOP) ||
 727:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_BURST_RECEIVE_START) ||
 728:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_BURST_RECEIVE_CONT) ||
 729:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_BURST_RECEIVE_FINISH) ||
 730:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****            (ui32Cmd == I2C_MASTER_CMD_BURST_RECEIVE_ERROR_STOP));
 731:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 732:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 733:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Send the command.
 734:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 735:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_CTRL) = ui32Cmd;
 1056              		.loc 1 735 0
 1057 036c 034A     		ldr	r2, .L79
 1058 036e 7B68     		ldr	r3, [r7, #4]
 1059 0370 1360     		str	r3, [r2]
 736:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 1060              		.loc 1 736 0
 1061 0372 0C37     		adds	r7, r7, #12
 1062              		.cfi_def_cfa_offset 4
 1063 0374 BD46     		mov	sp, r7
 1064              		.cfi_def_cfa_register 13
 1065              		@ sp needed
 1066 0376 5DF8047B 		ldr	r7, [sp], #4
 1067              		.cfi_restore 7
 1068              		.cfi_def_cfa_offset 0
 1069 037a 7047     		bx	lr
 1070              	.L80:
 1071              		.align	2
 1072              	.L79:
 1073 037c 04000240 		.word	1073872900
 1074              		.cfi_endproc
 1075              	.LFE23:
 1077              		.align	2
 1078              		.global	I2CMasterErr
 1079              		.thumb
 1080              		.thumb_func
 1082              	I2CMasterErr:
 1083              	.LFB24:
 737:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 738:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 739:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 740:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Gets the error status of the I2C master module
 741:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 742:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function is obtains the error status of the master module send
 743:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! and receive operations.
 744:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 745:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns the error status as one of the following values:
 746:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 747:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_ERR_NONE
 748:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_ERR_ADDR_ACK
 749:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_ERR_DATA_ACK
 750:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_MASTER_ERR_ARB_LOST
 751:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 752:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 753:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** uint32_t
 754:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterErr(void)
 755:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 1084              		.loc 1 755 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 8
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089 0380 80B4     		push	{r7}
 1090              		.cfi_def_cfa_offset 4
 1091              		.cfi_offset 7, -4
 1092 0382 83B0     		sub	sp, sp, #12
 1093              		.cfi_def_cfa_offset 16
 1094 0384 00AF     		add	r7, sp, #0
 1095              		.cfi_def_cfa_register 7
 756:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     uint32_t ui32Err;
 757:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 758:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 759:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Get the raw error state
 760:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 761:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     ui32Err = HWREG(I2CM_STAT);
 1096              		.loc 1 761 0
 1097 0386 0D4B     		ldr	r3, .L85
 1098 0388 1B68     		ldr	r3, [r3]
 1099 038a 7B60     		str	r3, [r7, #4]
 762:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 763:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 764:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // If the I2C master is busy, then all the other bit are invalid, and
 765:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // don't have an error to report.
 766:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 767:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     if(ui32Err & I2CM_STAT_BUSY)
 1100              		.loc 1 767 0
 1101 038c 7B68     		ldr	r3, [r7, #4]
 1102 038e 03F00103 		and	r3, r3, #1
 1103 0392 002B     		cmp	r3, #0
 1104 0394 01D0     		beq	.L82
 768:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 769:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(I2C_MASTER_ERR_NONE);
 1105              		.loc 1 769 0
 1106 0396 0023     		movs	r3, #0
 1107 0398 09E0     		b	.L83
 1108              	.L82:
 770:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 771:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 772:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 773:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Check for errors.
 774:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 775:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     if(ui32Err & (I2CM_STAT_ERROR | I2CM_STAT_ARBLST))
 1109              		.loc 1 775 0
 1110 039a 7B68     		ldr	r3, [r7, #4]
 1111 039c 03F01203 		and	r3, r3, #18
 1112 03a0 002B     		cmp	r3, #0
 1113 03a2 03D0     		beq	.L84
 776:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 777:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(ui32Err &
 1114              		.loc 1 777 0
 1115 03a4 7B68     		ldr	r3, [r7, #4]
 1116 03a6 03F01C03 		and	r3, r3, #28
 1117 03aa 00E0     		b	.L83
 1118              	.L84:
 778:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****                (I2CM_STAT_ARBLST | I2CM_STAT_DATACK | I2CM_STAT_ADRACK));
 779:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 780:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     else
 781:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     {
 782:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****         return(I2C_MASTER_ERR_NONE);
 1119              		.loc 1 782 0
 1120 03ac 0023     		movs	r3, #0
 1121              	.L83:
 783:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     }
 784:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 1122              		.loc 1 784 0
 1123 03ae 1846     		mov	r0, r3
 1124 03b0 0C37     		adds	r7, r7, #12
 1125              		.cfi_def_cfa_offset 4
 1126 03b2 BD46     		mov	sp, r7
 1127              		.cfi_def_cfa_register 13
 1128              		@ sp needed
 1129 03b4 5DF8047B 		ldr	r7, [sp], #4
 1130              		.cfi_restore 7
 1131              		.cfi_def_cfa_offset 0
 1132 03b8 7047     		bx	lr
 1133              	.L86:
 1134 03ba 00BF     		.align	2
 1135              	.L85:
 1136 03bc 04000240 		.word	1073872900
 1137              		.cfi_endproc
 1138              	.LFE24:
 1140              		.align	2
 1141              		.global	I2CMasterDataPut
 1142              		.thumb
 1143              		.thumb_func
 1145              	I2CMasterDataPut:
 1146              	.LFB25:
 785:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 786:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 787:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 788:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Transmits a byte from the I2C master
 789:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 790:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui8Data data to be transmitted from the I2C master
 791:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 792:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function places the supplied data into I2C master data register.
 793:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 794:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 795:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 796:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 797:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 798:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterDataPut(uint8_t ui8Data)
 799:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 1147              		.loc 1 799 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 8
 1150              		@ frame_needed = 1, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 1152 03c0 80B4     		push	{r7}
 1153              		.cfi_def_cfa_offset 4
 1154              		.cfi_offset 7, -4
 1155 03c2 83B0     		sub	sp, sp, #12
 1156              		.cfi_def_cfa_offset 16
 1157 03c4 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
 1159 03c6 0346     		mov	r3, r0
 1160 03c8 FB71     		strb	r3, [r7, #7]
 800:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 801:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Write the byte.
 802:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 803:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CM_DR) = ui8Data;
 1161              		.loc 1 803 0
 1162 03ca 044A     		ldr	r2, .L88
 1163 03cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1164 03ce 1360     		str	r3, [r2]
 804:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 1165              		.loc 1 804 0
 1166 03d0 0C37     		adds	r7, r7, #12
 1167              		.cfi_def_cfa_offset 4
 1168 03d2 BD46     		mov	sp, r7
 1169              		.cfi_def_cfa_register 13
 1170              		@ sp needed
 1171 03d4 5DF8047B 		ldr	r7, [sp], #4
 1172              		.cfi_restore 7
 1173              		.cfi_def_cfa_offset 0
 1174 03d8 7047     		bx	lr
 1175              	.L89:
 1176 03da 00BF     		.align	2
 1177              	.L88:
 1178 03dc 08000240 		.word	1073872904
 1179              		.cfi_endproc
 1180              	.LFE25:
 1182              		.align	2
 1183              		.global	I2CMasterDataGet
 1184              		.thumb
 1185              		.thumb_func
 1187              	I2CMasterDataGet:
 1188              	.LFB26:
 805:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 806:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 807:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 808:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Receives a byte that has been sent to the I2C master
 809:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 810:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function reads a byte of data from the I2C master data register.
 811:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 812:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns the byte received from by the I2C master, cast as an
 813:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! uint32_t
 814:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 815:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 816:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** uint32_t
 817:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CMasterDataGet(void)
 818:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 1189              		.loc 1 818 0
 1190              		.cfi_startproc
 1191              		@ args = 0, pretend = 0, frame = 0
 1192              		@ frame_needed = 1, uses_anonymous_args = 0
 1193              		@ link register save eliminated.
 1194 03e0 80B4     		push	{r7}
 1195              		.cfi_def_cfa_offset 4
 1196              		.cfi_offset 7, -4
 1197 03e2 00AF     		add	r7, sp, #0
 1198              		.cfi_def_cfa_register 7
 819:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 820:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Read a byte.
 821:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 822:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     return(HWREG(I2CM_DR));
 1199              		.loc 1 822 0
 1200 03e4 034B     		ldr	r3, .L92
 1201 03e6 1B68     		ldr	r3, [r3]
 823:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 1202              		.loc 1 823 0
 1203 03e8 1846     		mov	r0, r3
 1204 03ea BD46     		mov	sp, r7
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 03ec 5DF8047B 		ldr	r7, [sp], #4
 1208              		.cfi_restore 7
 1209              		.cfi_def_cfa_offset 0
 1210 03f0 7047     		bx	lr
 1211              	.L93:
 1212 03f2 00BF     		.align	2
 1213              	.L92:
 1214 03f4 08000240 		.word	1073872904
 1215              		.cfi_endproc
 1216              	.LFE26:
 1218              		.align	2
 1219              		.global	I2CSlaveStatus
 1220              		.thumb
 1221              		.thumb_func
 1223              	I2CSlaveStatus:
 1224              	.LFB27:
 824:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 825:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 826:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 827:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Gets the I2C slave module status
 828:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 829:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function returns the action requested from a master, if any.
 830:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Possible values are:
 831:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 832:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_SLAVE_ACT_NONE
 833:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_SLAVE_ACT_RREQ
 834:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_SLAVE_ACT_TREQ
 835:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! - \b I2C_SLAVE_ACT_RREQ_FBR
 836:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 837:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns \b I2C_SLAVE_ACT_NONE to indicate that no action has been
 838:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! requested of the I2C slave module, \b I2C_SLAVE_ACT_RREQ to indicate that
 839:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! an I2C master has sent data to the I2C slave module, \b I2C_SLAVE_ACT_TREQ
 840:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! to indicate that an I2C master has requested that the I2C slave module send
 841:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! data, and \b I2C_SLAVE_ACT_RREQ_FBR to indicate that an I2C master has sent
 842:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! data to the I2C slave and the first byte following the address of the slave
 843:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! has been received.
 844:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 845:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 846:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** uint32_t
 847:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveStatus(void)
 848:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 1225              		.loc 1 848 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 1, uses_anonymous_args = 0
 1229              		@ link register save eliminated.
 1230 03f8 80B4     		push	{r7}
 1231              		.cfi_def_cfa_offset 4
 1232              		.cfi_offset 7, -4
 1233 03fa 00AF     		add	r7, sp, #0
 1234              		.cfi_def_cfa_register 7
 849:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 850:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Return the slave status.
 851:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 852:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     return(HWREG(I2CS_STAT));
 1235              		.loc 1 852 0
 1236 03fc 034B     		ldr	r3, .L96
 1237 03fe 1B68     		ldr	r3, [r3]
 853:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 1238              		.loc 1 853 0
 1239 0400 1846     		mov	r0, r3
 1240 0402 BD46     		mov	sp, r7
 1241              		.cfi_def_cfa_register 13
 1242              		@ sp needed
 1243 0404 5DF8047B 		ldr	r7, [sp], #4
 1244              		.cfi_restore 7
 1245              		.cfi_def_cfa_offset 0
 1246 0408 7047     		bx	lr
 1247              	.L97:
 1248 040a 00BF     		.align	2
 1249              	.L96:
 1250 040c 04080240 		.word	1073874948
 1251              		.cfi_endproc
 1252              	.LFE27:
 1254              		.align	2
 1255              		.global	I2CSlaveDataPut
 1256              		.thumb
 1257              		.thumb_func
 1259              	I2CSlaveDataPut:
 1260              	.LFB28:
 854:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 855:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 856:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 857:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Transmits a byte from the I2C slave
 858:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 859:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \param ui8Data data to be transmitted from the I2C slave
 860:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 861:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function places the supplied data into I2C slave data register.
 862:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 863:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return None
 864:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 865:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 866:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** void
 867:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveDataPut(uint8_t ui8Data)
 868:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 1261              		.loc 1 868 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 8
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265              		@ link register save eliminated.
 1266 0410 80B4     		push	{r7}
 1267              		.cfi_def_cfa_offset 4
 1268              		.cfi_offset 7, -4
 1269 0412 83B0     		sub	sp, sp, #12
 1270              		.cfi_def_cfa_offset 16
 1271 0414 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 1273 0416 0346     		mov	r3, r0
 1274 0418 FB71     		strb	r3, [r7, #7]
 869:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 870:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Write the byte.
 871:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 872:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     HWREG(I2CS_DR) = ui8Data;
 1275              		.loc 1 872 0
 1276 041a 044A     		ldr	r2, .L99
 1277 041c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1278 041e 1360     		str	r3, [r2]
 873:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 1279              		.loc 1 873 0
 1280 0420 0C37     		adds	r7, r7, #12
 1281              		.cfi_def_cfa_offset 4
 1282 0422 BD46     		mov	sp, r7
 1283              		.cfi_def_cfa_register 13
 1284              		@ sp needed
 1285 0424 5DF8047B 		ldr	r7, [sp], #4
 1286              		.cfi_restore 7
 1287              		.cfi_def_cfa_offset 0
 1288 0428 7047     		bx	lr
 1289              	.L100:
 1290 042a 00BF     		.align	2
 1291              	.L99:
 1292 042c 08080240 		.word	1073874952
 1293              		.cfi_endproc
 1294              	.LFE28:
 1296              		.align	2
 1297              		.global	I2CSlaveDataGet
 1298              		.thumb
 1299              		.thumb_func
 1301              	I2CSlaveDataGet:
 1302              	.LFB29:
 874:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** 
 875:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 876:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 877:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! Receives a byte that has been sent to the I2C slave
 878:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 879:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! This function reads a byte of data from the I2C slave data register.
 880:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //!
 881:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! \return Returns the byte received from by the I2C slave, cast as an
 882:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //! uint32_t.
 883:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //
 884:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** //*****************************************************************************
 885:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** uint32_t
 886:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** I2CSlaveDataGet(void)
 887:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** {
 1303              		.loc 1 887 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 1, uses_anonymous_args = 0
 1307              		@ link register save eliminated.
 1308 0430 80B4     		push	{r7}
 1309              		.cfi_def_cfa_offset 4
 1310              		.cfi_offset 7, -4
 1311 0432 00AF     		add	r7, sp, #0
 1312              		.cfi_def_cfa_register 7
 888:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 889:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     // Read a byte.
 890:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     //
 891:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c ****     return(HWREG(I2CS_DR));
 1313              		.loc 1 891 0
 1314 0434 034B     		ldr	r3, .L103
 1315 0436 1B68     		ldr	r3, [r3]
 892:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/i2c_lib.c **** }
 1316              		.loc 1 892 0
 1317 0438 1846     		mov	r0, r3
 1318 043a BD46     		mov	sp, r7
 1319              		.cfi_def_cfa_register 13
 1320              		@ sp needed
 1321 043c 5DF8047B 		ldr	r7, [sp], #4
 1322              		.cfi_restore 7
 1323              		.cfi_def_cfa_offset 0
 1324 0440 7047     		bx	lr
 1325              	.L104:
 1326 0442 00BF     		.align	2
 1327              	.L103:
 1328 0444 08080240 		.word	1073874952
 1329              		.cfi_endproc
 1330              	.LFE29:
 1332              	.Letext0:
 1333              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1334              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 i2c_lib.c
     /tmp/ccKqkA2X.s:18     .text:0000000000000000 $t
     /tmp/ccKqkA2X.s:23     .text:0000000000000000 I2CMasterInitExpClk
     /tmp/ccKqkA2X.s:140    .text:000000000000007c I2CMasterEnable
     /tmp/ccKqkA2X.s:88     .text:0000000000000050 $d
     /tmp/ccKqkA2X.s:94     .text:000000000000005c $t
     /tmp/ccKqkA2X.s:99     .text:000000000000005c I2CSlaveInit
     /tmp/ccKqkA2X.s:178    .text:0000000000000098 I2CSlaveEnable
     /tmp/ccKqkA2X.s:131    .text:0000000000000078 $d
     /tmp/ccKqkA2X.s:135    .text:000000000000007c $t
     /tmp/ccKqkA2X.s:169    .text:0000000000000094 $d
     /tmp/ccKqkA2X.s:173    .text:0000000000000098 $t
     /tmp/ccKqkA2X.s:211    .text:00000000000000b8 $d
     /tmp/ccKqkA2X.s:216    .text:00000000000000c0 $t
     /tmp/ccKqkA2X.s:221    .text:00000000000000c0 I2CMasterDisable
     /tmp/ccKqkA2X.s:250    .text:00000000000000d8 $d
     /tmp/ccKqkA2X.s:254    .text:00000000000000dc $t
     /tmp/ccKqkA2X.s:259    .text:00000000000000dc I2CSlaveDisable
     /tmp/ccKqkA2X.s:292    .text:00000000000000fc $d
     /tmp/ccKqkA2X.s:297    .text:0000000000000104 $t
     /tmp/ccKqkA2X.s:302    .text:0000000000000104 I2CIntRegister
     /tmp/ccKqkA2X.s:339    .text:0000000000000120 I2CIntUnregister
     /tmp/ccKqkA2X.s:367    .text:0000000000000134 I2CMasterIntEnable
     /tmp/ccKqkA2X.s:394    .text:0000000000000148 $d
     /tmp/ccKqkA2X.s:398    .text:000000000000014c $t
     /tmp/ccKqkA2X.s:403    .text:000000000000014c I2CSlaveIntEnable
     /tmp/ccKqkA2X.s:432    .text:0000000000000164 $d
     /tmp/ccKqkA2X.s:436    .text:0000000000000168 $t
     /tmp/ccKqkA2X.s:441    .text:0000000000000168 I2CSlaveIntEnableEx
     /tmp/ccKqkA2X.s:476    .text:0000000000000188 $d
     /tmp/ccKqkA2X.s:480    .text:000000000000018c $t
     /tmp/ccKqkA2X.s:485    .text:000000000000018c I2CMasterIntDisable
     /tmp/ccKqkA2X.s:512    .text:00000000000001a0 $d
     /tmp/ccKqkA2X.s:516    .text:00000000000001a4 $t
     /tmp/ccKqkA2X.s:521    .text:00000000000001a4 I2CSlaveIntDisable
     /tmp/ccKqkA2X.s:550    .text:00000000000001bc $d
     /tmp/ccKqkA2X.s:554    .text:00000000000001c0 $t
     /tmp/ccKqkA2X.s:559    .text:00000000000001c0 I2CSlaveIntDisableEx
     /tmp/ccKqkA2X.s:595    .text:00000000000001e0 $d
     /tmp/ccKqkA2X.s:599    .text:00000000000001e4 $t
     /tmp/ccKqkA2X.s:604    .text:00000000000001e4 I2CMasterIntStatus
     /tmp/ccKqkA2X.s:657    .text:0000000000000220 $d
     /tmp/ccKqkA2X.s:662    .text:0000000000000228 $t
     /tmp/ccKqkA2X.s:667    .text:0000000000000228 I2CSlaveIntStatus
     /tmp/ccKqkA2X.s:720    .text:0000000000000264 $d
     /tmp/ccKqkA2X.s:725    .text:000000000000026c $t
     /tmp/ccKqkA2X.s:730    .text:000000000000026c I2CSlaveIntStatusEx
     /tmp/ccKqkA2X.s:773    .text:0000000000000294 $d
     /tmp/ccKqkA2X.s:778    .text:000000000000029c $t
     /tmp/ccKqkA2X.s:783    .text:000000000000029c I2CMasterIntClear
     /tmp/ccKqkA2X.s:814    .text:00000000000002b4 $d
     /tmp/ccKqkA2X.s:819    .text:00000000000002bc $t
     /tmp/ccKqkA2X.s:824    .text:00000000000002bc I2CSlaveIntClear
     /tmp/ccKqkA2X.s:851    .text:00000000000002d0 $d
     /tmp/ccKqkA2X.s:855    .text:00000000000002d4 $t
     /tmp/ccKqkA2X.s:860    .text:00000000000002d4 I2CSlaveIntClearEx
     /tmp/ccKqkA2X.s:892    .text:00000000000002ec $d
     /tmp/ccKqkA2X.s:896    .text:00000000000002f0 $t
     /tmp/ccKqkA2X.s:901    .text:00000000000002f0 I2CMasterSlaveAddrSet
     /tmp/ccKqkA2X.s:940    .text:0000000000000318 $d
     /tmp/ccKqkA2X.s:944    .text:000000000000031c $t
     /tmp/ccKqkA2X.s:949    .text:000000000000031c I2CMasterBusy
     /tmp/ccKqkA2X.s:986    .text:000000000000033c $d
     /tmp/ccKqkA2X.s:990    .text:0000000000000340 $t
     /tmp/ccKqkA2X.s:995    .text:0000000000000340 I2CMasterBusBusy
     /tmp/ccKqkA2X.s:1032   .text:0000000000000360 $d
     /tmp/ccKqkA2X.s:1036   .text:0000000000000364 $t
     /tmp/ccKqkA2X.s:1041   .text:0000000000000364 I2CMasterControl
     /tmp/ccKqkA2X.s:1073   .text:000000000000037c $d
     /tmp/ccKqkA2X.s:1077   .text:0000000000000380 $t
     /tmp/ccKqkA2X.s:1082   .text:0000000000000380 I2CMasterErr
     /tmp/ccKqkA2X.s:1136   .text:00000000000003bc $d
     /tmp/ccKqkA2X.s:1140   .text:00000000000003c0 $t
     /tmp/ccKqkA2X.s:1145   .text:00000000000003c0 I2CMasterDataPut
     /tmp/ccKqkA2X.s:1178   .text:00000000000003dc $d
     /tmp/ccKqkA2X.s:1182   .text:00000000000003e0 $t
     /tmp/ccKqkA2X.s:1187   .text:00000000000003e0 I2CMasterDataGet
     /tmp/ccKqkA2X.s:1214   .text:00000000000003f4 $d
     /tmp/ccKqkA2X.s:1218   .text:00000000000003f8 $t
     /tmp/ccKqkA2X.s:1223   .text:00000000000003f8 I2CSlaveStatus
     /tmp/ccKqkA2X.s:1250   .text:000000000000040c $d
     /tmp/ccKqkA2X.s:1254   .text:0000000000000410 $t
     /tmp/ccKqkA2X.s:1259   .text:0000000000000410 I2CSlaveDataPut
     /tmp/ccKqkA2X.s:1292   .text:000000000000042c $d
     /tmp/ccKqkA2X.s:1296   .text:0000000000000430 $t
     /tmp/ccKqkA2X.s:1301   .text:0000000000000430 I2CSlaveDataGet
     /tmp/ccKqkA2X.s:1328   .text:0000000000000444 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.59116071098782a37a9183a8102fe91b
                           .group:0000000000000000 wm4.hw_i2cm.h.39.4b5af155c75f23d9eeb001d8feb957ac
                           .group:0000000000000000 wm4.hw_i2cs.h.39.fe21a6cafb99607c016515660cf4ceb2
                           .group:0000000000000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:0000000000000000 wm4.hw_memmap.h.39.19283c377d449c9bca5fdd8ccb62628c
                           .group:0000000000000000 wm4.hw_sys_ctrl.h.39.50b4d7775c38e82076d0eb3bdc2daf82
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.i2c_lib.h.42.5fd828f6712e1f3a1c5cb3c7bbae1df4
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf

UNDEFINED SYMBOLS
IntRegister
IntEnable
IntDisable
IntUnregister
