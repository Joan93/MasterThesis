   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"aes_ctr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44              		.text
  45              		.align	2
  46              		.thumb
  47              		.thumb_func
  49              	inc_counter:
  50              	.LFB0:
  51              		.file 1 "build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c"
   1:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** /**
   2:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** \brief AES CTR implementation
   3:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****   
   4:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** \author Marcelo Barros de Almeida <marcelobarrosalmeida@gmail.com>, March 2015.
   5:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** */
   6:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** #include <string.h>
   7:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** #include <stdint.h>
   8:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** #include "opendefs.h"
   9:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** #include "aes_ctr.h"
  10:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** #include "crypto_engine.h"
  11:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  12:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** static void inc_counter(uint8_t* counter) {
  52              		.loc 1 12 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 16
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57 0000 80B4     		push	{r7}
  58              		.cfi_def_cfa_offset 4
  59              		.cfi_offset 7, -4
  60 0002 85B0     		sub	sp, sp, #20
  61              		.cfi_def_cfa_offset 24
  62 0004 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  64 0006 7860     		str	r0, [r7, #4]
  13:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    // from openssl
  14:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint32_t n = 16;
  65              		.loc 1 14 0
  66 0008 1023     		movs	r3, #16
  67 000a FB60     		str	r3, [r7, #12]
  68              	.L4:
  15:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t  c;
  16:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    do {
  17:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       --n;
  69              		.loc 1 17 0
  70 000c FB68     		ldr	r3, [r7, #12]
  71 000e 013B     		subs	r3, r3, #1
  72 0010 FB60     		str	r3, [r7, #12]
  18:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       c = counter[n];
  73              		.loc 1 18 0
  74 0012 7A68     		ldr	r2, [r7, #4]
  75 0014 FB68     		ldr	r3, [r7, #12]
  76 0016 1344     		add	r3, r3, r2
  77 0018 1B78     		ldrb	r3, [r3]
  78 001a FB72     		strb	r3, [r7, #11]
  19:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       ++c;
  79              		.loc 1 19 0
  80 001c FB7A     		ldrb	r3, [r7, #11]
  81 001e 0133     		adds	r3, r3, #1
  82 0020 FB72     		strb	r3, [r7, #11]
  20:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       counter[n] = c;
  83              		.loc 1 20 0
  84 0022 7A68     		ldr	r2, [r7, #4]
  85 0024 FB68     		ldr	r3, [r7, #12]
  86 0026 1344     		add	r3, r3, r2
  87 0028 FA7A     		ldrb	r2, [r7, #11]
  88 002a 1A70     		strb	r2, [r3]
  21:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       if (c) return;
  89              		.loc 1 21 0
  90 002c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
  91 002e 002B     		cmp	r3, #0
  92 0030 00D0     		beq	.L2
  93 0032 02E0     		b	.L1
  94              	.L2:
  22:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    } while (n);
  95              		.loc 1 22 0
  96 0034 FB68     		ldr	r3, [r7, #12]
  97 0036 002B     		cmp	r3, #0
  98 0038 E8D1     		bne	.L4
  99              	.L1:
  23:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** }
 100              		.loc 1 23 0
 101 003a 1437     		adds	r7, r7, #20
 102              		.cfi_def_cfa_offset 4
 103 003c BD46     		mov	sp, r7
 104              		.cfi_def_cfa_register 13
 105              		@ sp needed
 106 003e 5DF8047B 		ldr	r7, [sp], #4
 107              		.cfi_restore 7
 108              		.cfi_def_cfa_offset 0
 109 0042 7047     		bx	lr
 110              		.cfi_endproc
 111              	.LFE0:
 113              		.align	2
 114              		.global	aes_ctr_enc_raw
 115              		.thumb
 116              		.thumb_func
 118              	aes_ctr_enc_raw:
 119              	.LFB1:
  24:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  25:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** /**
  26:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** \brief Raw AES-CTR encryption.
  27:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** \param[in,out] buffer Message to be encrypted. Will be overwritten by ciphertext.
  28:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** \param[in] len Message length. Must be multiple of 16 octets.
  29:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** \param[in] key Buffer containing the secret key (16 octets).
  30:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** \param[in] iv Buffer containing the Initialization Vector (16 octets).
  31:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  32:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** \returns E_SUCCESS when the encryption was successful. 
  33:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** */
  34:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** owerror_t aes_ctr_enc_raw(uint8_t* buffer, uint8_t len, uint8_t key[16], uint8_t iv[16]) {
 120              		.loc 1 34 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 40
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0044 90B5     		push	{r4, r7, lr}
 125              		.cfi_def_cfa_offset 12
 126              		.cfi_offset 4, -12
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0046 8BB0     		sub	sp, sp, #44
 130              		.cfi_def_cfa_offset 56
 131 0048 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 133 004a F860     		str	r0, [r7, #12]
 134 004c 7A60     		str	r2, [r7, #4]
 135 004e 3B60     		str	r3, [r7]
 136 0050 0B46     		mov	r3, r1
 137 0052 FB72     		strb	r3, [r7, #11]
  35:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t n;
  36:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t k;
  37:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t nb;
  38:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t* pbuf;
  39:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    uint8_t eiv[16];
  40:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  41:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    nb = len >> 4;
 138              		.loc 1 41 0
 139 0054 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 140 0056 1B09     		lsrs	r3, r3, #4
 141 0058 87F82530 		strb	r3, [r7, #37]
  42:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    for (n = 0; n < nb; n++) {
 142              		.loc 1 42 0
 143 005c 0023     		movs	r3, #0
 144 005e 87F82730 		strb	r3, [r7, #39]
 145 0062 3DE0     		b	.L6
 146              	.L9:
  43:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       pbuf = &buffer[16 * n];
 147              		.loc 1 43 0
 148 0064 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 149 0068 1B01     		lsls	r3, r3, #4
 150 006a 1A46     		mov	r2, r3
 151 006c FB68     		ldr	r3, [r7, #12]
 152 006e 1344     		add	r3, r3, r2
 153 0070 3B62     		str	r3, [r7, #32]
  44:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       memcpy(eiv, iv, 16);
 154              		.loc 1 44 0
 155 0072 3B68     		ldr	r3, [r7]
 156 0074 07F11004 		add	r4, r7, #16
 157 0078 1868     		ldr	r0, [r3]	@ unaligned
 158 007a 5968     		ldr	r1, [r3, #4]	@ unaligned
 159 007c 9A68     		ldr	r2, [r3, #8]	@ unaligned
 160 007e DB68     		ldr	r3, [r3, #12]	@ unaligned
 161 0080 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  45:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       CRYPTO_ENGINE.aes_ecb_enc(eiv, key); 
 162              		.loc 1 45 0
 163 0082 1D4B     		ldr	r3, .L11
 164 0084 1B69     		ldr	r3, [r3, #16]
 165 0086 07F11002 		add	r2, r7, #16
 166 008a 1046     		mov	r0, r2
 167 008c 7968     		ldr	r1, [r7, #4]
 168 008e 9847     		blx	r3
  46:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       // may be faster if vector are aligned to 4 bytes (use long instead char in xor)
  47:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       for (k = 0; k < 16; k++) {
 169              		.loc 1 47 0
 170 0090 0023     		movs	r3, #0
 171 0092 87F82630 		strb	r3, [r7, #38]
 172 0096 17E0     		b	.L7
 173              	.L8:
  48:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****          pbuf[k] ^= eiv[k];
 174              		.loc 1 48 0 discriminator 3
 175 0098 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 176 009c 3A6A     		ldr	r2, [r7, #32]
 177 009e 1344     		add	r3, r3, r2
 178 00a0 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
 179 00a4 396A     		ldr	r1, [r7, #32]
 180 00a6 0A44     		add	r2, r2, r1
 181 00a8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 182 00aa 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
 183 00ae 07F12800 		add	r0, r7, #40
 184 00b2 0244     		add	r2, r2, r0
 185 00b4 12F8182C 		ldrb	r2, [r2, #-24]	@ zero_extendqisi2
 186 00b8 4A40     		eors	r2, r2, r1
 187 00ba D2B2     		uxtb	r2, r2
 188 00bc 1A70     		strb	r2, [r3]
  47:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****          pbuf[k] ^= eiv[k];
 189              		.loc 1 47 0 discriminator 3
 190 00be 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 191 00c2 0133     		adds	r3, r3, #1
 192 00c4 87F82630 		strb	r3, [r7, #38]
 193              	.L7:
  47:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****          pbuf[k] ^= eiv[k];
 194              		.loc 1 47 0 is_stmt 0 discriminator 1
 195 00c8 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 196 00cc 0F2B     		cmp	r3, #15
 197 00ce E3D9     		bls	.L8
  49:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       }
  50:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       inc_counter(iv);
 198              		.loc 1 50 0 is_stmt 1 discriminator 2
 199 00d0 3868     		ldr	r0, [r7]
 200 00d2 FFF795FF 		bl	inc_counter
  42:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       pbuf = &buffer[16 * n];
 201              		.loc 1 42 0 discriminator 2
 202 00d6 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 203 00da 0133     		adds	r3, r3, #1
 204 00dc 87F82730 		strb	r3, [r7, #39]
 205              	.L6:
  42:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****       pbuf = &buffer[16 * n];
 206              		.loc 1 42 0 is_stmt 0 discriminator 1
 207 00e0 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 208 00e4 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 209 00e8 9A42     		cmp	r2, r3
 210 00ea BBD3     		bcc	.L9
  51:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    }
  52:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** 
  53:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c ****    return E_SUCCESS;
 211              		.loc 1 53 0 is_stmt 1
 212 00ec 0023     		movs	r3, #0
  54:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ctr.c **** }
 213              		.loc 1 54 0
 214 00ee 1846     		mov	r0, r3
 215 00f0 2C37     		adds	r7, r7, #44
 216              		.cfi_def_cfa_offset 12
 217 00f2 BD46     		mov	sp, r7
 218              		.cfi_def_cfa_register 13
 219              		@ sp needed
 220 00f4 90BD     		pop	{r4, r7, pc}
 221              	.L12:
 222 00f6 00BF     		.align	2
 223              	.L11:
 224 00f8 00000000 		.word	board_crypto_engine
 225              		.cfi_endproc
 226              	.LFE1:
 228              	.Letext0:
 229              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 230              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 231              		.file 4 "inc/opendefs.h"
 232              		.file 5 "bsp/boards/crypto_engine.h"
 233              		.file 6 "bsp/boards/OpenMote-CC2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes_ctr.c
     /tmp/ccqBNXqv.s:19     .rodata:0000000000000000 $d
     /tmp/ccqBNXqv.s:22     .rodata:0000000000000000 rreg_uriquery
     /tmp/ccqBNXqv.s:27     .rodata:0000000000000008 infoBoardname
     /tmp/ccqBNXqv.s:32     .rodata:0000000000000010 infouCName
     /tmp/ccqBNXqv.s:37     .rodata:0000000000000018 infoRadioName
     /tmp/ccqBNXqv.s:42     .rodata:0000000000000024 infoStackName
     /tmp/ccqBNXqv.s:45     .text:0000000000000000 $t
     /tmp/ccqBNXqv.s:49     .text:0000000000000000 inc_counter
     /tmp/ccqBNXqv.s:118    .text:0000000000000044 aes_ctr_enc_raw
     /tmp/ccqBNXqv.s:224    .text:00000000000000f8 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.59116071098782a37a9183a8102fe91b
                           .group:0000000000000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:0000000000000000 wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51
                           .group:0000000000000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:0000000000000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:0000000000000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:0000000000000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:0000000000000000 wm4.cdefs.h.47.e6563c1c3863188ba4ac4eaa2c85b6f1
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.toolchain_defs.h.2.e4ebbe6e0a48032a9b79077dc42e1ffd
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.board_info.h.22.aeb00002354a4949fff54190040e37af
                           .group:0000000000000000 wm4.opendefs.h.23.bdaf9c024be66ead04de21e3ce3dfaf2
                           .group:0000000000000000 wm4.crypto_engine.h.8.a3dd976cbcb92c44f852cc7aa252f659

UNDEFINED SYMBOLS
board_crypto_engine
