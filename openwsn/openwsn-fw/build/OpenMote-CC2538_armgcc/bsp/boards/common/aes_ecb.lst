   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"aes_ecb.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44              		.global	sbox
  45 002d 000000   		.align	2
  48              	sbox:
  49 0030 63       		.byte	99
  50 0031 7C       		.byte	124
  51 0032 77       		.byte	119
  52 0033 7B       		.byte	123
  53 0034 F2       		.byte	-14
  54 0035 6B       		.byte	107
  55 0036 6F       		.byte	111
  56 0037 C5       		.byte	-59
  57 0038 30       		.byte	48
  58 0039 01       		.byte	1
  59 003a 67       		.byte	103
  60 003b 2B       		.byte	43
  61 003c FE       		.byte	-2
  62 003d D7       		.byte	-41
  63 003e AB       		.byte	-85
  64 003f 76       		.byte	118
  65 0040 CA       		.byte	-54
  66 0041 82       		.byte	-126
  67 0042 C9       		.byte	-55
  68 0043 7D       		.byte	125
  69 0044 FA       		.byte	-6
  70 0045 59       		.byte	89
  71 0046 47       		.byte	71
  72 0047 F0       		.byte	-16
  73 0048 AD       		.byte	-83
  74 0049 D4       		.byte	-44
  75 004a A2       		.byte	-94
  76 004b AF       		.byte	-81
  77 004c 9C       		.byte	-100
  78 004d A4       		.byte	-92
  79 004e 72       		.byte	114
  80 004f C0       		.byte	-64
  81 0050 B7       		.byte	-73
  82 0051 FD       		.byte	-3
  83 0052 93       		.byte	-109
  84 0053 26       		.byte	38
  85 0054 36       		.byte	54
  86 0055 3F       		.byte	63
  87 0056 F7       		.byte	-9
  88 0057 CC       		.byte	-52
  89 0058 34       		.byte	52
  90 0059 A5       		.byte	-91
  91 005a E5       		.byte	-27
  92 005b F1       		.byte	-15
  93 005c 71       		.byte	113
  94 005d D8       		.byte	-40
  95 005e 31       		.byte	49
  96 005f 15       		.byte	21
  97 0060 04       		.byte	4
  98 0061 C7       		.byte	-57
  99 0062 23       		.byte	35
 100 0063 C3       		.byte	-61
 101 0064 18       		.byte	24
 102 0065 96       		.byte	-106
 103 0066 05       		.byte	5
 104 0067 9A       		.byte	-102
 105 0068 07       		.byte	7
 106 0069 12       		.byte	18
 107 006a 80       		.byte	-128
 108 006b E2       		.byte	-30
 109 006c EB       		.byte	-21
 110 006d 27       		.byte	39
 111 006e B2       		.byte	-78
 112 006f 75       		.byte	117
 113 0070 09       		.byte	9
 114 0071 83       		.byte	-125
 115 0072 2C       		.byte	44
 116 0073 1A       		.byte	26
 117 0074 1B       		.byte	27
 118 0075 6E       		.byte	110
 119 0076 5A       		.byte	90
 120 0077 A0       		.byte	-96
 121 0078 52       		.byte	82
 122 0079 3B       		.byte	59
 123 007a D6       		.byte	-42
 124 007b B3       		.byte	-77
 125 007c 29       		.byte	41
 126 007d E3       		.byte	-29
 127 007e 2F       		.byte	47
 128 007f 84       		.byte	-124
 129 0080 53       		.byte	83
 130 0081 D1       		.byte	-47
 131 0082 00       		.byte	0
 132 0083 ED       		.byte	-19
 133 0084 20       		.byte	32
 134 0085 FC       		.byte	-4
 135 0086 B1       		.byte	-79
 136 0087 5B       		.byte	91
 137 0088 6A       		.byte	106
 138 0089 CB       		.byte	-53
 139 008a BE       		.byte	-66
 140 008b 39       		.byte	57
 141 008c 4A       		.byte	74
 142 008d 4C       		.byte	76
 143 008e 58       		.byte	88
 144 008f CF       		.byte	-49
 145 0090 D0       		.byte	-48
 146 0091 EF       		.byte	-17
 147 0092 AA       		.byte	-86
 148 0093 FB       		.byte	-5
 149 0094 43       		.byte	67
 150 0095 4D       		.byte	77
 151 0096 33       		.byte	51
 152 0097 85       		.byte	-123
 153 0098 45       		.byte	69
 154 0099 F9       		.byte	-7
 155 009a 02       		.byte	2
 156 009b 7F       		.byte	127
 157 009c 50       		.byte	80
 158 009d 3C       		.byte	60
 159 009e 9F       		.byte	-97
 160 009f A8       		.byte	-88
 161 00a0 51       		.byte	81
 162 00a1 A3       		.byte	-93
 163 00a2 40       		.byte	64
 164 00a3 8F       		.byte	-113
 165 00a4 92       		.byte	-110
 166 00a5 9D       		.byte	-99
 167 00a6 38       		.byte	56
 168 00a7 F5       		.byte	-11
 169 00a8 BC       		.byte	-68
 170 00a9 B6       		.byte	-74
 171 00aa DA       		.byte	-38
 172 00ab 21       		.byte	33
 173 00ac 10       		.byte	16
 174 00ad FF       		.byte	-1
 175 00ae F3       		.byte	-13
 176 00af D2       		.byte	-46
 177 00b0 CD       		.byte	-51
 178 00b1 0C       		.byte	12
 179 00b2 13       		.byte	19
 180 00b3 EC       		.byte	-20
 181 00b4 5F       		.byte	95
 182 00b5 97       		.byte	-105
 183 00b6 44       		.byte	68
 184 00b7 17       		.byte	23
 185 00b8 C4       		.byte	-60
 186 00b9 A7       		.byte	-89
 187 00ba 7E       		.byte	126
 188 00bb 3D       		.byte	61
 189 00bc 64       		.byte	100
 190 00bd 5D       		.byte	93
 191 00be 19       		.byte	25
 192 00bf 73       		.byte	115
 193 00c0 60       		.byte	96
 194 00c1 81       		.byte	-127
 195 00c2 4F       		.byte	79
 196 00c3 DC       		.byte	-36
 197 00c4 22       		.byte	34
 198 00c5 2A       		.byte	42
 199 00c6 90       		.byte	-112
 200 00c7 88       		.byte	-120
 201 00c8 46       		.byte	70
 202 00c9 EE       		.byte	-18
 203 00ca B8       		.byte	-72
 204 00cb 14       		.byte	20
 205 00cc DE       		.byte	-34
 206 00cd 5E       		.byte	94
 207 00ce 0B       		.byte	11
 208 00cf DB       		.byte	-37
 209 00d0 E0       		.byte	-32
 210 00d1 32       		.byte	50
 211 00d2 3A       		.byte	58
 212 00d3 0A       		.byte	10
 213 00d4 49       		.byte	73
 214 00d5 06       		.byte	6
 215 00d6 24       		.byte	36
 216 00d7 5C       		.byte	92
 217 00d8 C2       		.byte	-62
 218 00d9 D3       		.byte	-45
 219 00da AC       		.byte	-84
 220 00db 62       		.byte	98
 221 00dc 91       		.byte	-111
 222 00dd 95       		.byte	-107
 223 00de E4       		.byte	-28
 224 00df 79       		.byte	121
 225 00e0 E7       		.byte	-25
 226 00e1 C8       		.byte	-56
 227 00e2 37       		.byte	55
 228 00e3 6D       		.byte	109
 229 00e4 8D       		.byte	-115
 230 00e5 D5       		.byte	-43
 231 00e6 4E       		.byte	78
 232 00e7 A9       		.byte	-87
 233 00e8 6C       		.byte	108
 234 00e9 56       		.byte	86
 235 00ea F4       		.byte	-12
 236 00eb EA       		.byte	-22
 237 00ec 65       		.byte	101
 238 00ed 7A       		.byte	122
 239 00ee AE       		.byte	-82
 240 00ef 08       		.byte	8
 241 00f0 BA       		.byte	-70
 242 00f1 78       		.byte	120
 243 00f2 25       		.byte	37
 244 00f3 2E       		.byte	46
 245 00f4 1C       		.byte	28
 246 00f5 A6       		.byte	-90
 247 00f6 B4       		.byte	-76
 248 00f7 C6       		.byte	-58
 249 00f8 E8       		.byte	-24
 250 00f9 DD       		.byte	-35
 251 00fa 74       		.byte	116
 252 00fb 1F       		.byte	31
 253 00fc 4B       		.byte	75
 254 00fd BD       		.byte	-67
 255 00fe 8B       		.byte	-117
 256 00ff 8A       		.byte	-118
 257 0100 70       		.byte	112
 258 0101 3E       		.byte	62
 259 0102 B5       		.byte	-75
 260 0103 66       		.byte	102
 261 0104 48       		.byte	72
 262 0105 03       		.byte	3
 263 0106 F6       		.byte	-10
 264 0107 0E       		.byte	14
 265 0108 61       		.byte	97
 266 0109 35       		.byte	53
 267 010a 57       		.byte	87
 268 010b B9       		.byte	-71
 269 010c 86       		.byte	-122
 270 010d C1       		.byte	-63
 271 010e 1D       		.byte	29
 272 010f 9E       		.byte	-98
 273 0110 E1       		.byte	-31
 274 0111 F8       		.byte	-8
 275 0112 98       		.byte	-104
 276 0113 11       		.byte	17
 277 0114 69       		.byte	105
 278 0115 D9       		.byte	-39
 279 0116 8E       		.byte	-114
 280 0117 94       		.byte	-108
 281 0118 9B       		.byte	-101
 282 0119 1E       		.byte	30
 283 011a 87       		.byte	-121
 284 011b E9       		.byte	-23
 285 011c CE       		.byte	-50
 286 011d 55       		.byte	85
 287 011e 28       		.byte	40
 288 011f DF       		.byte	-33
 289 0120 8C       		.byte	-116
 290 0121 A1       		.byte	-95
 291 0122 89       		.byte	-119
 292 0123 0D       		.byte	13
 293 0124 BF       		.byte	-65
 294 0125 E6       		.byte	-26
 295 0126 42       		.byte	66
 296 0127 68       		.byte	104
 297 0128 41       		.byte	65
 298 0129 99       		.byte	-103
 299 012a 2D       		.byte	45
 300 012b 0F       		.byte	15
 301 012c B0       		.byte	-80
 302 012d 54       		.byte	84
 303 012e BB       		.byte	-69
 304 012f 16       		.byte	22
 305              		.global	rsbox
 306              		.align	2
 309              	rsbox:
 310 0130 52       		.byte	82
 311 0131 09       		.byte	9
 312 0132 6A       		.byte	106
 313 0133 D5       		.byte	-43
 314 0134 30       		.byte	48
 315 0135 36       		.byte	54
 316 0136 A5       		.byte	-91
 317 0137 38       		.byte	56
 318 0138 BF       		.byte	-65
 319 0139 40       		.byte	64
 320 013a A3       		.byte	-93
 321 013b 9E       		.byte	-98
 322 013c 81       		.byte	-127
 323 013d F3       		.byte	-13
 324 013e D7       		.byte	-41
 325 013f FB       		.byte	-5
 326 0140 7C       		.byte	124
 327 0141 E3       		.byte	-29
 328 0142 39       		.byte	57
 329 0143 82       		.byte	-126
 330 0144 9B       		.byte	-101
 331 0145 2F       		.byte	47
 332 0146 FF       		.byte	-1
 333 0147 87       		.byte	-121
 334 0148 34       		.byte	52
 335 0149 8E       		.byte	-114
 336 014a 43       		.byte	67
 337 014b 44       		.byte	68
 338 014c C4       		.byte	-60
 339 014d DE       		.byte	-34
 340 014e E9       		.byte	-23
 341 014f CB       		.byte	-53
 342 0150 54       		.byte	84
 343 0151 7B       		.byte	123
 344 0152 94       		.byte	-108
 345 0153 32       		.byte	50
 346 0154 A6       		.byte	-90
 347 0155 C2       		.byte	-62
 348 0156 23       		.byte	35
 349 0157 3D       		.byte	61
 350 0158 EE       		.byte	-18
 351 0159 4C       		.byte	76
 352 015a 95       		.byte	-107
 353 015b 0B       		.byte	11
 354 015c 42       		.byte	66
 355 015d FA       		.byte	-6
 356 015e C3       		.byte	-61
 357 015f 4E       		.byte	78
 358 0160 08       		.byte	8
 359 0161 2E       		.byte	46
 360 0162 A1       		.byte	-95
 361 0163 66       		.byte	102
 362 0164 28       		.byte	40
 363 0165 D9       		.byte	-39
 364 0166 24       		.byte	36
 365 0167 B2       		.byte	-78
 366 0168 76       		.byte	118
 367 0169 5B       		.byte	91
 368 016a A2       		.byte	-94
 369 016b 49       		.byte	73
 370 016c 6D       		.byte	109
 371 016d 8B       		.byte	-117
 372 016e D1       		.byte	-47
 373 016f 25       		.byte	37
 374 0170 72       		.byte	114
 375 0171 F8       		.byte	-8
 376 0172 F6       		.byte	-10
 377 0173 64       		.byte	100
 378 0174 86       		.byte	-122
 379 0175 68       		.byte	104
 380 0176 98       		.byte	-104
 381 0177 16       		.byte	22
 382 0178 D4       		.byte	-44
 383 0179 A4       		.byte	-92
 384 017a 5C       		.byte	92
 385 017b CC       		.byte	-52
 386 017c 5D       		.byte	93
 387 017d 65       		.byte	101
 388 017e B6       		.byte	-74
 389 017f 92       		.byte	-110
 390 0180 6C       		.byte	108
 391 0181 70       		.byte	112
 392 0182 48       		.byte	72
 393 0183 50       		.byte	80
 394 0184 FD       		.byte	-3
 395 0185 ED       		.byte	-19
 396 0186 B9       		.byte	-71
 397 0187 DA       		.byte	-38
 398 0188 5E       		.byte	94
 399 0189 15       		.byte	21
 400 018a 46       		.byte	70
 401 018b 57       		.byte	87
 402 018c A7       		.byte	-89
 403 018d 8D       		.byte	-115
 404 018e 9D       		.byte	-99
 405 018f 84       		.byte	-124
 406 0190 90       		.byte	-112
 407 0191 D8       		.byte	-40
 408 0192 AB       		.byte	-85
 409 0193 00       		.byte	0
 410 0194 8C       		.byte	-116
 411 0195 BC       		.byte	-68
 412 0196 D3       		.byte	-45
 413 0197 0A       		.byte	10
 414 0198 F7       		.byte	-9
 415 0199 E4       		.byte	-28
 416 019a 58       		.byte	88
 417 019b 05       		.byte	5
 418 019c B8       		.byte	-72
 419 019d B3       		.byte	-77
 420 019e 45       		.byte	69
 421 019f 06       		.byte	6
 422 01a0 D0       		.byte	-48
 423 01a1 2C       		.byte	44
 424 01a2 1E       		.byte	30
 425 01a3 8F       		.byte	-113
 426 01a4 CA       		.byte	-54
 427 01a5 3F       		.byte	63
 428 01a6 0F       		.byte	15
 429 01a7 02       		.byte	2
 430 01a8 C1       		.byte	-63
 431 01a9 AF       		.byte	-81
 432 01aa BD       		.byte	-67
 433 01ab 03       		.byte	3
 434 01ac 01       		.byte	1
 435 01ad 13       		.byte	19
 436 01ae 8A       		.byte	-118
 437 01af 6B       		.byte	107
 438 01b0 3A       		.byte	58
 439 01b1 91       		.byte	-111
 440 01b2 11       		.byte	17
 441 01b3 41       		.byte	65
 442 01b4 4F       		.byte	79
 443 01b5 67       		.byte	103
 444 01b6 DC       		.byte	-36
 445 01b7 EA       		.byte	-22
 446 01b8 97       		.byte	-105
 447 01b9 F2       		.byte	-14
 448 01ba CF       		.byte	-49
 449 01bb CE       		.byte	-50
 450 01bc F0       		.byte	-16
 451 01bd B4       		.byte	-76
 452 01be E6       		.byte	-26
 453 01bf 73       		.byte	115
 454 01c0 96       		.byte	-106
 455 01c1 AC       		.byte	-84
 456 01c2 74       		.byte	116
 457 01c3 22       		.byte	34
 458 01c4 E7       		.byte	-25
 459 01c5 AD       		.byte	-83
 460 01c6 35       		.byte	53
 461 01c7 85       		.byte	-123
 462 01c8 E2       		.byte	-30
 463 01c9 F9       		.byte	-7
 464 01ca 37       		.byte	55
 465 01cb E8       		.byte	-24
 466 01cc 1C       		.byte	28
 467 01cd 75       		.byte	117
 468 01ce DF       		.byte	-33
 469 01cf 6E       		.byte	110
 470 01d0 47       		.byte	71
 471 01d1 F1       		.byte	-15
 472 01d2 1A       		.byte	26
 473 01d3 71       		.byte	113
 474 01d4 1D       		.byte	29
 475 01d5 29       		.byte	41
 476 01d6 C5       		.byte	-59
 477 01d7 89       		.byte	-119
 478 01d8 6F       		.byte	111
 479 01d9 B7       		.byte	-73
 480 01da 62       		.byte	98
 481 01db 0E       		.byte	14
 482 01dc AA       		.byte	-86
 483 01dd 18       		.byte	24
 484 01de BE       		.byte	-66
 485 01df 1B       		.byte	27
 486 01e0 FC       		.byte	-4
 487 01e1 56       		.byte	86
 488 01e2 3E       		.byte	62
 489 01e3 4B       		.byte	75
 490 01e4 C6       		.byte	-58
 491 01e5 D2       		.byte	-46
 492 01e6 79       		.byte	121
 493 01e7 20       		.byte	32
 494 01e8 9A       		.byte	-102
 495 01e9 DB       		.byte	-37
 496 01ea C0       		.byte	-64
 497 01eb FE       		.byte	-2
 498 01ec 78       		.byte	120
 499 01ed CD       		.byte	-51
 500 01ee 5A       		.byte	90
 501 01ef F4       		.byte	-12
 502 01f0 1F       		.byte	31
 503 01f1 DD       		.byte	-35
 504 01f2 A8       		.byte	-88
 505 01f3 33       		.byte	51
 506 01f4 88       		.byte	-120
 507 01f5 07       		.byte	7
 508 01f6 C7       		.byte	-57
 509 01f7 31       		.byte	49
 510 01f8 B1       		.byte	-79
 511 01f9 12       		.byte	18
 512 01fa 10       		.byte	16
 513 01fb 59       		.byte	89
 514 01fc 27       		.byte	39
 515 01fd 80       		.byte	-128
 516 01fe EC       		.byte	-20
 517 01ff 5F       		.byte	95
 518 0200 60       		.byte	96
 519 0201 51       		.byte	81
 520 0202 7F       		.byte	127
 521 0203 A9       		.byte	-87
 522 0204 19       		.byte	25
 523 0205 B5       		.byte	-75
 524 0206 4A       		.byte	74
 525 0207 0D       		.byte	13
 526 0208 2D       		.byte	45
 527 0209 E5       		.byte	-27
 528 020a 7A       		.byte	122
 529 020b 9F       		.byte	-97
 530 020c 93       		.byte	-109
 531 020d C9       		.byte	-55
 532 020e 9C       		.byte	-100
 533 020f EF       		.byte	-17
 534 0210 A0       		.byte	-96
 535 0211 E0       		.byte	-32
 536 0212 3B       		.byte	59
 537 0213 4D       		.byte	77
 538 0214 AE       		.byte	-82
 539 0215 2A       		.byte	42
 540 0216 F5       		.byte	-11
 541 0217 B0       		.byte	-80
 542 0218 C8       		.byte	-56
 543 0219 EB       		.byte	-21
 544 021a BB       		.byte	-69
 545 021b 3C       		.byte	60
 546 021c 83       		.byte	-125
 547 021d 53       		.byte	83
 548 021e 99       		.byte	-103
 549 021f 61       		.byte	97
 550 0220 17       		.byte	23
 551 0221 2B       		.byte	43
 552 0222 04       		.byte	4
 553 0223 7E       		.byte	126
 554 0224 BA       		.byte	-70
 555 0225 77       		.byte	119
 556 0226 D6       		.byte	-42
 557 0227 26       		.byte	38
 558 0228 E1       		.byte	-31
 559 0229 69       		.byte	105
 560 022a 14       		.byte	20
 561 022b 63       		.byte	99
 562 022c 55       		.byte	85
 563 022d 21       		.byte	33
 564 022e 0C       		.byte	12
 565 022f 7D       		.byte	125
 566              		.global	Rcon
 567              		.align	2
 570              	Rcon:
 571 0230 8D       		.byte	-115
 572 0231 01       		.byte	1
 573 0232 02       		.byte	2
 574 0233 04       		.byte	4
 575 0234 08       		.byte	8
 576 0235 10       		.byte	16
 577 0236 20       		.byte	32
 578 0237 40       		.byte	64
 579 0238 80       		.byte	-128
 580 0239 1B       		.byte	27
 581 023a 36       		.byte	54
 582              		.text
 583              		.align	2
 584              		.global	expandKey
 585              		.thumb
 586              		.thumb_func
 588              	expandKey:
 589              	.LFB0:
 590              		.file 1 "build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c"
   1:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** /**************************************************************
   2:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** AES128
   3:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** Author:   Uli Kretzschmar
   4:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** MSP430 Systems
   5:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** Freising
   6:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** AES software support for encryption and decryption
   7:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** ECCN 5D002 TSU - Technology / Software Unrestricted
   8:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** Source: http://is.gd/o9RSPq
   9:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** **************************************************************/
  10:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** #include <stdint.h>
  11:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** #include "opendefs.h"
  12:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** #include "aes_ecb.h"
  13:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
  14:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** // foreward sbox
  15:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** const unsigned char sbox[256] = {
  16:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     //0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
  17:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
  18:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
  19:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
  20:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
  21:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
  22:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
  23:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
  24:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
  25:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
  26:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
  27:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
  28:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
  29:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
  30:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
  31:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
  32:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 
  33:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** // inverse sbox
  34:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** const unsigned char rsbox[256] =
  35:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** { 0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb
  36:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb
  37:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e
  38:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25
  39:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92
  40:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84
  41:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06
  42:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b
  43:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73
  44:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e
  45:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b
  46:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4
  47:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f
  48:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef
  49:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61
  50:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** , 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d };
  51:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** // round constant
  52:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** const unsigned char Rcon[11] = {
  53:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36 };
  54:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
  55:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
  56:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** // expand the key
  57:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** void expandKey(unsigned char *expandedKey,
  58:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     unsigned char *key)
  59:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** {
 591              		.loc 1 59 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 16
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 80B4     		push	{r7}
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 85B0     		sub	sp, sp, #20
 600              		.cfi_def_cfa_offset 24
 601 0004 00AF     		add	r7, sp, #0
 602              		.cfi_def_cfa_register 7
 603 0006 7860     		str	r0, [r7, #4]
 604 0008 3960     		str	r1, [r7]
  60:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     unsigned short ii, buf1;
  61:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     for (ii = 0; ii<16; ii++)
 605              		.loc 1 61 0
 606 000a 0023     		movs	r3, #0
 607 000c FB81     		strh	r3, [r7, #14]	@ movhi
 608 000e 0AE0     		b	.L2
 609              	.L3:
  62:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii] = key[ii];
 610              		.loc 1 62 0 discriminator 3
 611 0010 FB89     		ldrh	r3, [r7, #14]
 612 0012 7A68     		ldr	r2, [r7, #4]
 613 0014 1344     		add	r3, r3, r2
 614 0016 FA89     		ldrh	r2, [r7, #14]
 615 0018 3968     		ldr	r1, [r7]
 616 001a 0A44     		add	r2, r2, r1
 617 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 618 001e 1A70     		strb	r2, [r3]
  61:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii] = key[ii];
 619              		.loc 1 61 0 discriminator 3
 620 0020 FB89     		ldrh	r3, [r7, #14]
 621 0022 0133     		adds	r3, r3, #1
 622 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 623              	.L2:
  61:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii] = key[ii];
 624              		.loc 1 61 0 is_stmt 0 discriminator 1
 625 0026 FB89     		ldrh	r3, [r7, #14]
 626 0028 0F2B     		cmp	r3, #15
 627 002a F1D9     		bls	.L3
  63:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     for (ii = 1; ii<11; ii++){
 628              		.loc 1 63 0 is_stmt 1
 629 002c 0123     		movs	r3, #1
 630 002e FB81     		strh	r3, [r7, #14]	@ movhi
 631 0030 64E1     		b	.L4
 632              	.L5:
  64:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = expandedKey[ii * 16 - 4];
 633              		.loc 1 64 0 discriminator 3
 634 0032 FB89     		ldrh	r3, [r7, #14]
 635 0034 1B01     		lsls	r3, r3, #4
 636 0036 043B     		subs	r3, r3, #4
 637 0038 7A68     		ldr	r2, [r7, #4]
 638 003a 1344     		add	r3, r3, r2
 639 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640 003e BB81     		strh	r3, [r7, #12]	@ movhi
  65:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 0] = sbox[expandedKey[ii * 16 - 3]] ^ expandedKey[(ii - 1) * 16 + 0] 
 641              		.loc 1 65 0 discriminator 3
 642 0040 FB89     		ldrh	r3, [r7, #14]
 643 0042 1B01     		lsls	r3, r3, #4
 644 0044 1A46     		mov	r2, r3
 645 0046 7B68     		ldr	r3, [r7, #4]
 646 0048 1344     		add	r3, r3, r2
 647 004a FA89     		ldrh	r2, [r7, #14]
 648 004c 1201     		lsls	r2, r2, #4
 649 004e 033A     		subs	r2, r2, #3
 650 0050 7968     		ldr	r1, [r7, #4]
 651 0052 0A44     		add	r2, r2, r1
 652 0054 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 653 0056 1146     		mov	r1, r2
 654 0058 AD4A     		ldr	r2, .L6
 655 005a 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 656 005c FA89     		ldrh	r2, [r7, #14]
 657 005e 013A     		subs	r2, r2, #1
 658 0060 1201     		lsls	r2, r2, #4
 659 0062 1046     		mov	r0, r2
 660 0064 7A68     		ldr	r2, [r7, #4]
 661 0066 0244     		add	r2, r2, r0
 662 0068 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 663 006a 4A40     		eors	r2, r2, r1
 664 006c D1B2     		uxtb	r1, r2
 665 006e FA89     		ldrh	r2, [r7, #14]
 666 0070 A848     		ldr	r0, .L6+4
 667 0072 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 668 0074 4A40     		eors	r2, r2, r1
 669 0076 D2B2     		uxtb	r2, r2
 670 0078 1A70     		strb	r2, [r3]
  66:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 1] = sbox[expandedKey[ii * 16 - 2]] ^ expandedKey[(ii - 1) * 16 + 1];
 671              		.loc 1 66 0 discriminator 3
 672 007a FB89     		ldrh	r3, [r7, #14]
 673 007c 1B01     		lsls	r3, r3, #4
 674 007e 0133     		adds	r3, r3, #1
 675 0080 7A68     		ldr	r2, [r7, #4]
 676 0082 1344     		add	r3, r3, r2
 677 0084 FA89     		ldrh	r2, [r7, #14]
 678 0086 1201     		lsls	r2, r2, #4
 679 0088 023A     		subs	r2, r2, #2
 680 008a 7968     		ldr	r1, [r7, #4]
 681 008c 0A44     		add	r2, r2, r1
 682 008e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 683 0090 1146     		mov	r1, r2
 684 0092 9F4A     		ldr	r2, .L6
 685 0094 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 686 0096 FA89     		ldrh	r2, [r7, #14]
 687 0098 013A     		subs	r2, r2, #1
 688 009a 1201     		lsls	r2, r2, #4
 689 009c 0132     		adds	r2, r2, #1
 690 009e 7868     		ldr	r0, [r7, #4]
 691 00a0 0244     		add	r2, r2, r0
 692 00a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 693 00a4 4A40     		eors	r2, r2, r1
 694 00a6 D2B2     		uxtb	r2, r2
 695 00a8 1A70     		strb	r2, [r3]
  67:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 2] = sbox[expandedKey[ii * 16 - 1]] ^ expandedKey[(ii - 1) * 16 + 2];
 696              		.loc 1 67 0 discriminator 3
 697 00aa FB89     		ldrh	r3, [r7, #14]
 698 00ac 1B01     		lsls	r3, r3, #4
 699 00ae 0233     		adds	r3, r3, #2
 700 00b0 7A68     		ldr	r2, [r7, #4]
 701 00b2 1344     		add	r3, r3, r2
 702 00b4 FA89     		ldrh	r2, [r7, #14]
 703 00b6 1201     		lsls	r2, r2, #4
 704 00b8 013A     		subs	r2, r2, #1
 705 00ba 7968     		ldr	r1, [r7, #4]
 706 00bc 0A44     		add	r2, r2, r1
 707 00be 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 708 00c0 1146     		mov	r1, r2
 709 00c2 934A     		ldr	r2, .L6
 710 00c4 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 711 00c6 FA89     		ldrh	r2, [r7, #14]
 712 00c8 013A     		subs	r2, r2, #1
 713 00ca 1201     		lsls	r2, r2, #4
 714 00cc 0232     		adds	r2, r2, #2
 715 00ce 7868     		ldr	r0, [r7, #4]
 716 00d0 0244     		add	r2, r2, r0
 717 00d2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 718 00d4 4A40     		eors	r2, r2, r1
 719 00d6 D2B2     		uxtb	r2, r2
 720 00d8 1A70     		strb	r2, [r3]
  68:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 3] = sbox[buf1] ^ expandedKey[(ii - 1) * 16 + 3];
 721              		.loc 1 68 0 discriminator 3
 722 00da FB89     		ldrh	r3, [r7, #14]
 723 00dc 1B01     		lsls	r3, r3, #4
 724 00de 0333     		adds	r3, r3, #3
 725 00e0 7A68     		ldr	r2, [r7, #4]
 726 00e2 1344     		add	r3, r3, r2
 727 00e4 BA89     		ldrh	r2, [r7, #12]
 728 00e6 8A49     		ldr	r1, .L6
 729 00e8 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 730 00ea FA89     		ldrh	r2, [r7, #14]
 731 00ec 013A     		subs	r2, r2, #1
 732 00ee 1201     		lsls	r2, r2, #4
 733 00f0 0332     		adds	r2, r2, #3
 734 00f2 7868     		ldr	r0, [r7, #4]
 735 00f4 0244     		add	r2, r2, r0
 736 00f6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 737 00f8 4A40     		eors	r2, r2, r1
 738 00fa D2B2     		uxtb	r2, r2
 739 00fc 1A70     		strb	r2, [r3]
  69:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 4] = expandedKey[(ii - 1) * 16 + 4] ^ expandedKey[ii * 16 + 0];
 740              		.loc 1 69 0 discriminator 3
 741 00fe FB89     		ldrh	r3, [r7, #14]
 742 0100 1B01     		lsls	r3, r3, #4
 743 0102 0433     		adds	r3, r3, #4
 744 0104 7A68     		ldr	r2, [r7, #4]
 745 0106 1344     		add	r3, r3, r2
 746 0108 FA89     		ldrh	r2, [r7, #14]
 747 010a 013A     		subs	r2, r2, #1
 748 010c 1201     		lsls	r2, r2, #4
 749 010e 0432     		adds	r2, r2, #4
 750 0110 7968     		ldr	r1, [r7, #4]
 751 0112 0A44     		add	r2, r2, r1
 752 0114 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 753 0116 FA89     		ldrh	r2, [r7, #14]
 754 0118 1201     		lsls	r2, r2, #4
 755 011a 1046     		mov	r0, r2
 756 011c 7A68     		ldr	r2, [r7, #4]
 757 011e 0244     		add	r2, r2, r0
 758 0120 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 759 0122 4A40     		eors	r2, r2, r1
 760 0124 D2B2     		uxtb	r2, r2
 761 0126 1A70     		strb	r2, [r3]
  70:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 5] = expandedKey[(ii - 1) * 16 + 5] ^ expandedKey[ii * 16 + 1];
 762              		.loc 1 70 0 discriminator 3
 763 0128 FB89     		ldrh	r3, [r7, #14]
 764 012a 1B01     		lsls	r3, r3, #4
 765 012c 0533     		adds	r3, r3, #5
 766 012e 7A68     		ldr	r2, [r7, #4]
 767 0130 1344     		add	r3, r3, r2
 768 0132 FA89     		ldrh	r2, [r7, #14]
 769 0134 013A     		subs	r2, r2, #1
 770 0136 1201     		lsls	r2, r2, #4
 771 0138 0532     		adds	r2, r2, #5
 772 013a 7968     		ldr	r1, [r7, #4]
 773 013c 0A44     		add	r2, r2, r1
 774 013e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 775 0140 FA89     		ldrh	r2, [r7, #14]
 776 0142 1201     		lsls	r2, r2, #4
 777 0144 0132     		adds	r2, r2, #1
 778 0146 7868     		ldr	r0, [r7, #4]
 779 0148 0244     		add	r2, r2, r0
 780 014a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 781 014c 4A40     		eors	r2, r2, r1
 782 014e D2B2     		uxtb	r2, r2
 783 0150 1A70     		strb	r2, [r3]
  71:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 6] = expandedKey[(ii - 1) * 16 + 6] ^ expandedKey[ii * 16 + 2];
 784              		.loc 1 71 0 discriminator 3
 785 0152 FB89     		ldrh	r3, [r7, #14]
 786 0154 1B01     		lsls	r3, r3, #4
 787 0156 0633     		adds	r3, r3, #6
 788 0158 7A68     		ldr	r2, [r7, #4]
 789 015a 1344     		add	r3, r3, r2
 790 015c FA89     		ldrh	r2, [r7, #14]
 791 015e 013A     		subs	r2, r2, #1
 792 0160 1201     		lsls	r2, r2, #4
 793 0162 0632     		adds	r2, r2, #6
 794 0164 7968     		ldr	r1, [r7, #4]
 795 0166 0A44     		add	r2, r2, r1
 796 0168 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 797 016a FA89     		ldrh	r2, [r7, #14]
 798 016c 1201     		lsls	r2, r2, #4
 799 016e 0232     		adds	r2, r2, #2
 800 0170 7868     		ldr	r0, [r7, #4]
 801 0172 0244     		add	r2, r2, r0
 802 0174 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 803 0176 4A40     		eors	r2, r2, r1
 804 0178 D2B2     		uxtb	r2, r2
 805 017a 1A70     		strb	r2, [r3]
  72:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 7] = expandedKey[(ii - 1) * 16 + 7] ^ expandedKey[ii * 16 + 3];
 806              		.loc 1 72 0 discriminator 3
 807 017c FB89     		ldrh	r3, [r7, #14]
 808 017e 1B01     		lsls	r3, r3, #4
 809 0180 0733     		adds	r3, r3, #7
 810 0182 7A68     		ldr	r2, [r7, #4]
 811 0184 1344     		add	r3, r3, r2
 812 0186 FA89     		ldrh	r2, [r7, #14]
 813 0188 013A     		subs	r2, r2, #1
 814 018a 1201     		lsls	r2, r2, #4
 815 018c 0732     		adds	r2, r2, #7
 816 018e 7968     		ldr	r1, [r7, #4]
 817 0190 0A44     		add	r2, r2, r1
 818 0192 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 819 0194 FA89     		ldrh	r2, [r7, #14]
 820 0196 1201     		lsls	r2, r2, #4
 821 0198 0332     		adds	r2, r2, #3
 822 019a 7868     		ldr	r0, [r7, #4]
 823 019c 0244     		add	r2, r2, r0
 824 019e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 825 01a0 4A40     		eors	r2, r2, r1
 826 01a2 D2B2     		uxtb	r2, r2
 827 01a4 1A70     		strb	r2, [r3]
  73:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 8] = expandedKey[(ii - 1) * 16 + 8] ^ expandedKey[ii * 16 + 4];
 828              		.loc 1 73 0 discriminator 3
 829 01a6 FB89     		ldrh	r3, [r7, #14]
 830 01a8 1B01     		lsls	r3, r3, #4
 831 01aa 0833     		adds	r3, r3, #8
 832 01ac 7A68     		ldr	r2, [r7, #4]
 833 01ae 1344     		add	r3, r3, r2
 834 01b0 FA89     		ldrh	r2, [r7, #14]
 835 01b2 013A     		subs	r2, r2, #1
 836 01b4 1201     		lsls	r2, r2, #4
 837 01b6 0832     		adds	r2, r2, #8
 838 01b8 7968     		ldr	r1, [r7, #4]
 839 01ba 0A44     		add	r2, r2, r1
 840 01bc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 841 01be FA89     		ldrh	r2, [r7, #14]
 842 01c0 1201     		lsls	r2, r2, #4
 843 01c2 0432     		adds	r2, r2, #4
 844 01c4 7868     		ldr	r0, [r7, #4]
 845 01c6 0244     		add	r2, r2, r0
 846 01c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 847 01ca 4A40     		eors	r2, r2, r1
 848 01cc D2B2     		uxtb	r2, r2
 849 01ce 1A70     		strb	r2, [r3]
  74:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 9] = expandedKey[(ii - 1) * 16 + 9] ^ expandedKey[ii * 16 + 5];
 850              		.loc 1 74 0 discriminator 3
 851 01d0 FB89     		ldrh	r3, [r7, #14]
 852 01d2 1B01     		lsls	r3, r3, #4
 853 01d4 0933     		adds	r3, r3, #9
 854 01d6 7A68     		ldr	r2, [r7, #4]
 855 01d8 1344     		add	r3, r3, r2
 856 01da FA89     		ldrh	r2, [r7, #14]
 857 01dc 013A     		subs	r2, r2, #1
 858 01de 1201     		lsls	r2, r2, #4
 859 01e0 0932     		adds	r2, r2, #9
 860 01e2 7968     		ldr	r1, [r7, #4]
 861 01e4 0A44     		add	r2, r2, r1
 862 01e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 863 01e8 FA89     		ldrh	r2, [r7, #14]
 864 01ea 1201     		lsls	r2, r2, #4
 865 01ec 0532     		adds	r2, r2, #5
 866 01ee 7868     		ldr	r0, [r7, #4]
 867 01f0 0244     		add	r2, r2, r0
 868 01f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 869 01f4 4A40     		eors	r2, r2, r1
 870 01f6 D2B2     		uxtb	r2, r2
 871 01f8 1A70     		strb	r2, [r3]
  75:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 10] = expandedKey[(ii - 1) * 16 + 10] ^ expandedKey[ii * 16 + 6];
 872              		.loc 1 75 0 discriminator 3
 873 01fa FB89     		ldrh	r3, [r7, #14]
 874 01fc 1B01     		lsls	r3, r3, #4
 875 01fe 0A33     		adds	r3, r3, #10
 876 0200 7A68     		ldr	r2, [r7, #4]
 877 0202 1344     		add	r3, r3, r2
 878 0204 FA89     		ldrh	r2, [r7, #14]
 879 0206 013A     		subs	r2, r2, #1
 880 0208 1201     		lsls	r2, r2, #4
 881 020a 0A32     		adds	r2, r2, #10
 882 020c 7968     		ldr	r1, [r7, #4]
 883 020e 0A44     		add	r2, r2, r1
 884 0210 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 885 0212 FA89     		ldrh	r2, [r7, #14]
 886 0214 1201     		lsls	r2, r2, #4
 887 0216 0632     		adds	r2, r2, #6
 888 0218 7868     		ldr	r0, [r7, #4]
 889 021a 0244     		add	r2, r2, r0
 890 021c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 891 021e 4A40     		eors	r2, r2, r1
 892 0220 D2B2     		uxtb	r2, r2
 893 0222 1A70     		strb	r2, [r3]
  76:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 11] = expandedKey[(ii - 1) * 16 + 11] ^ expandedKey[ii * 16 + 7];
 894              		.loc 1 76 0 discriminator 3
 895 0224 FB89     		ldrh	r3, [r7, #14]
 896 0226 1B01     		lsls	r3, r3, #4
 897 0228 0B33     		adds	r3, r3, #11
 898 022a 7A68     		ldr	r2, [r7, #4]
 899 022c 1344     		add	r3, r3, r2
 900 022e FA89     		ldrh	r2, [r7, #14]
 901 0230 013A     		subs	r2, r2, #1
 902 0232 1201     		lsls	r2, r2, #4
 903 0234 0B32     		adds	r2, r2, #11
 904 0236 7968     		ldr	r1, [r7, #4]
 905 0238 0A44     		add	r2, r2, r1
 906 023a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 907 023c FA89     		ldrh	r2, [r7, #14]
 908 023e 1201     		lsls	r2, r2, #4
 909 0240 0732     		adds	r2, r2, #7
 910 0242 7868     		ldr	r0, [r7, #4]
 911 0244 0244     		add	r2, r2, r0
 912 0246 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 913 0248 4A40     		eors	r2, r2, r1
 914 024a D2B2     		uxtb	r2, r2
 915 024c 1A70     		strb	r2, [r3]
  77:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 12] = expandedKey[(ii - 1) * 16 + 12] ^ expandedKey[ii * 16 + 8];
 916              		.loc 1 77 0 discriminator 3
 917 024e FB89     		ldrh	r3, [r7, #14]
 918 0250 1B01     		lsls	r3, r3, #4
 919 0252 0C33     		adds	r3, r3, #12
 920 0254 7A68     		ldr	r2, [r7, #4]
 921 0256 1344     		add	r3, r3, r2
 922 0258 FA89     		ldrh	r2, [r7, #14]
 923 025a 013A     		subs	r2, r2, #1
 924 025c 1201     		lsls	r2, r2, #4
 925 025e 0C32     		adds	r2, r2, #12
 926 0260 7968     		ldr	r1, [r7, #4]
 927 0262 0A44     		add	r2, r2, r1
 928 0264 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 929 0266 FA89     		ldrh	r2, [r7, #14]
 930 0268 1201     		lsls	r2, r2, #4
 931 026a 0832     		adds	r2, r2, #8
 932 026c 7868     		ldr	r0, [r7, #4]
 933 026e 0244     		add	r2, r2, r0
 934 0270 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 935 0272 4A40     		eors	r2, r2, r1
 936 0274 D2B2     		uxtb	r2, r2
 937 0276 1A70     		strb	r2, [r3]
  78:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 13] = expandedKey[(ii - 1) * 16 + 13] ^ expandedKey[ii * 16 + 9];
 938              		.loc 1 78 0 discriminator 3
 939 0278 FB89     		ldrh	r3, [r7, #14]
 940 027a 1B01     		lsls	r3, r3, #4
 941 027c 0D33     		adds	r3, r3, #13
 942 027e 7A68     		ldr	r2, [r7, #4]
 943 0280 1344     		add	r3, r3, r2
 944 0282 FA89     		ldrh	r2, [r7, #14]
 945 0284 013A     		subs	r2, r2, #1
 946 0286 1201     		lsls	r2, r2, #4
 947 0288 0D32     		adds	r2, r2, #13
 948 028a 7968     		ldr	r1, [r7, #4]
 949 028c 0A44     		add	r2, r2, r1
 950 028e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 951 0290 FA89     		ldrh	r2, [r7, #14]
 952 0292 1201     		lsls	r2, r2, #4
 953 0294 0932     		adds	r2, r2, #9
 954 0296 7868     		ldr	r0, [r7, #4]
 955 0298 0244     		add	r2, r2, r0
 956 029a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 957 029c 4A40     		eors	r2, r2, r1
 958 029e D2B2     		uxtb	r2, r2
 959 02a0 1A70     		strb	r2, [r3]
  79:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 14] = expandedKey[(ii - 1) * 16 + 14] ^ expandedKey[ii * 16 + 10];
 960              		.loc 1 79 0 discriminator 3
 961 02a2 FB89     		ldrh	r3, [r7, #14]
 962 02a4 1B01     		lsls	r3, r3, #4
 963 02a6 0E33     		adds	r3, r3, #14
 964 02a8 7A68     		ldr	r2, [r7, #4]
 965 02aa 1344     		add	r3, r3, r2
 966 02ac FA89     		ldrh	r2, [r7, #14]
 967 02ae 013A     		subs	r2, r2, #1
 968 02b0 1201     		lsls	r2, r2, #4
 969 02b2 0E32     		adds	r2, r2, #14
 970 02b4 7968     		ldr	r1, [r7, #4]
 971 02b6 0A44     		add	r2, r2, r1
 972 02b8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 973 02ba FA89     		ldrh	r2, [r7, #14]
 974 02bc 1201     		lsls	r2, r2, #4
 975 02be 0A32     		adds	r2, r2, #10
 976 02c0 7868     		ldr	r0, [r7, #4]
 977 02c2 0244     		add	r2, r2, r0
 978 02c4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 979 02c6 4A40     		eors	r2, r2, r1
 980 02c8 D2B2     		uxtb	r2, r2
 981 02ca 1A70     		strb	r2, [r3]
  80:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         expandedKey[ii * 16 + 15] = expandedKey[(ii - 1) * 16 + 15] ^ expandedKey[ii * 16 + 11];
 982              		.loc 1 80 0 discriminator 3
 983 02cc FB89     		ldrh	r3, [r7, #14]
 984 02ce 1B01     		lsls	r3, r3, #4
 985 02d0 0F33     		adds	r3, r3, #15
 986 02d2 7A68     		ldr	r2, [r7, #4]
 987 02d4 1344     		add	r3, r3, r2
 988 02d6 FA89     		ldrh	r2, [r7, #14]
 989 02d8 013A     		subs	r2, r2, #1
 990 02da 1201     		lsls	r2, r2, #4
 991 02dc 0F32     		adds	r2, r2, #15
 992 02de 7968     		ldr	r1, [r7, #4]
 993 02e0 0A44     		add	r2, r2, r1
 994 02e2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 995 02e4 FA89     		ldrh	r2, [r7, #14]
 996 02e6 1201     		lsls	r2, r2, #4
 997 02e8 0B32     		adds	r2, r2, #11
 998 02ea 7868     		ldr	r0, [r7, #4]
 999 02ec 0244     		add	r2, r2, r0
 1000 02ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1001 02f0 4A40     		eors	r2, r2, r1
 1002 02f2 D2B2     		uxtb	r2, r2
 1003 02f4 1A70     		strb	r2, [r3]
  63:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = expandedKey[ii * 16 - 4];
 1004              		.loc 1 63 0 discriminator 3
 1005 02f6 FB89     		ldrh	r3, [r7, #14]
 1006 02f8 0133     		adds	r3, r3, #1
 1007 02fa FB81     		strh	r3, [r7, #14]	@ movhi
 1008              	.L4:
  63:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = expandedKey[ii * 16 - 4];
 1009              		.loc 1 63 0 is_stmt 0 discriminator 1
 1010 02fc FB89     		ldrh	r3, [r7, #14]
 1011 02fe 0A2B     		cmp	r3, #10
 1012 0300 7FF697AE 		bls	.L5
  81:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     }
  82:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
  83:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
  84:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** }
 1013              		.loc 1 84 0 is_stmt 1
 1014 0304 1437     		adds	r7, r7, #20
 1015              		.cfi_def_cfa_offset 4
 1016 0306 BD46     		mov	sp, r7
 1017              		.cfi_def_cfa_register 13
 1018              		@ sp needed
 1019 0308 5DF8047B 		ldr	r7, [sp], #4
 1020              		.cfi_restore 7
 1021              		.cfi_def_cfa_offset 0
 1022 030c 7047     		bx	lr
 1023              	.L7:
 1024 030e 00BF     		.align	2
 1025              	.L6:
 1026 0310 00000000 		.word	sbox
 1027 0314 00000000 		.word	Rcon
 1028              		.cfi_endproc
 1029              	.LFE0:
 1031              		.align	2
 1032              		.global	galois_mul2
 1033              		.thumb
 1034              		.thumb_func
 1036              	galois_mul2:
 1037              	.LFB1:
  85:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
  86:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** // multiply by 2 in the galois field
  87:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** unsigned char galois_mul2(unsigned char value)
  88:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** {
 1038              		.loc 1 88 0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 8
 1041              		@ frame_needed = 1, uses_anonymous_args = 0
 1042              		@ link register save eliminated.
 1043 0318 80B4     		push	{r7}
 1044              		.cfi_def_cfa_offset 4
 1045              		.cfi_offset 7, -4
 1046 031a 83B0     		sub	sp, sp, #12
 1047              		.cfi_def_cfa_offset 16
 1048 031c 00AF     		add	r7, sp, #0
 1049              		.cfi_def_cfa_register 7
 1050 031e 0346     		mov	r3, r0
 1051 0320 FB71     		strb	r3, [r7, #7]
  89:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     if (value >> 7)
 1052              		.loc 1 89 0
 1053 0322 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1054 0324 5BB2     		sxtb	r3, r3
 1055 0326 002B     		cmp	r3, #0
 1056 0328 07DA     		bge	.L9
  90:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     {
  91:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         value = value << 1;
 1057              		.loc 1 91 0
 1058 032a FB79     		ldrb	r3, [r7, #7]
 1059 032c 5B00     		lsls	r3, r3, #1
 1060 032e FB71     		strb	r3, [r7, #7]
  92:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         return (value ^ 0x1b);
 1061              		.loc 1 92 0
 1062 0330 FB79     		ldrb	r3, [r7, #7]
 1063 0332 83F01B03 		eor	r3, r3, #27
 1064 0336 DBB2     		uxtb	r3, r3
 1065 0338 02E0     		b	.L10
 1066              	.L9:
  93:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     }
  94:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     else
  95:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         return value << 1;
 1067              		.loc 1 95 0
 1068 033a FB79     		ldrb	r3, [r7, #7]
 1069 033c 5B00     		lsls	r3, r3, #1
 1070 033e DBB2     		uxtb	r3, r3
 1071              	.L10:
  96:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** }
 1072              		.loc 1 96 0
 1073 0340 1846     		mov	r0, r3
 1074 0342 0C37     		adds	r7, r7, #12
 1075              		.cfi_def_cfa_offset 4
 1076 0344 BD46     		mov	sp, r7
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 0346 5DF8047B 		ldr	r7, [sp], #4
 1080              		.cfi_restore 7
 1081              		.cfi_def_cfa_offset 0
 1082 034a 7047     		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE1:
 1086              		.align	2
 1087              		.global	aes_encr
 1088              		.thumb
 1089              		.thumb_func
 1091              	aes_encr:
 1092              	.LFB2:
  97:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
  98:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** // straight foreward aes encryption implementation
  99:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   first the group of operations
 100:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //     - addroundkey
 101:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //     - subbytes
 102:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //     - shiftrows
 103:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //     - mixcolums
 104:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   is executed 9 times, after this addroundkey to finish the 9th round, 
 105:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   after that the 10th round without mixcolums
 106:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   no further subfunctions to save cycles for function calls
 107:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   no structuring with "for (....)" to save cycles
 108:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** void aes_encr(unsigned char *state, unsigned char *expandedKey)
 109:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** {
 1093              		.loc 1 109 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 16
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097 034c 80B5     		push	{r7, lr}
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 7, -8
 1100              		.cfi_offset 14, -4
 1101 034e 84B0     		sub	sp, sp, #16
 1102              		.cfi_def_cfa_offset 24
 1103 0350 00AF     		add	r7, sp, #0
 1104              		.cfi_def_cfa_register 7
 1105 0352 7860     		str	r0, [r7, #4]
 1106 0354 3960     		str	r1, [r7]
 110:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     unsigned char buf1, buf2, buf3, round;
 111:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 112:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 113:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     for (round = 0; round < 9; round++){
 1107              		.loc 1 113 0
 1108 0356 0023     		movs	r3, #0
 1109 0358 FB73     		strb	r3, [r7, #15]
 1110 035a FCE2     		b	.L12
 1111              	.L13:
 114:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // addroundkey, sbox and shiftrows
 115:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // row 0
 116:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[0] = sbox[(state[0] ^ expandedKey[(round * 16)])];
 1112              		.loc 1 116 0 discriminator 3
 1113 035c 7B68     		ldr	r3, [r7, #4]
 1114 035e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1115 0360 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1116 0362 1B01     		lsls	r3, r3, #4
 1117 0364 1946     		mov	r1, r3
 1118 0366 3B68     		ldr	r3, [r7]
 1119 0368 0B44     		add	r3, r3, r1
 1120 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1121 036c 5340     		eors	r3, r3, r2
 1122 036e DBB2     		uxtb	r3, r3
 1123 0370 1A46     		mov	r2, r3
 1124 0372 A84B     		ldr	r3, .L14
 1125 0374 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1126 0376 7B68     		ldr	r3, [r7, #4]
 1127 0378 1A70     		strb	r2, [r3]
 117:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[4] = sbox[(state[4] ^ expandedKey[(round * 16) + 4])];
 1128              		.loc 1 117 0 discriminator 3
 1129 037a 7B68     		ldr	r3, [r7, #4]
 1130 037c 0433     		adds	r3, r3, #4
 1131 037e 7A68     		ldr	r2, [r7, #4]
 1132 0380 0432     		adds	r2, r2, #4
 1133 0382 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1134 0384 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1135 0386 1201     		lsls	r2, r2, #4
 1136 0388 0432     		adds	r2, r2, #4
 1137 038a 3868     		ldr	r0, [r7]
 1138 038c 0244     		add	r2, r2, r0
 1139 038e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1140 0390 4A40     		eors	r2, r2, r1
 1141 0392 D2B2     		uxtb	r2, r2
 1142 0394 1146     		mov	r1, r2
 1143 0396 9F4A     		ldr	r2, .L14
 1144 0398 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1145 039a 1A70     		strb	r2, [r3]
 118:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[8] = sbox[(state[8] ^ expandedKey[(round * 16) + 8])];
 1146              		.loc 1 118 0 discriminator 3
 1147 039c 7B68     		ldr	r3, [r7, #4]
 1148 039e 0833     		adds	r3, r3, #8
 1149 03a0 7A68     		ldr	r2, [r7, #4]
 1150 03a2 0832     		adds	r2, r2, #8
 1151 03a4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1152 03a6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1153 03a8 1201     		lsls	r2, r2, #4
 1154 03aa 0832     		adds	r2, r2, #8
 1155 03ac 3868     		ldr	r0, [r7]
 1156 03ae 0244     		add	r2, r2, r0
 1157 03b0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1158 03b2 4A40     		eors	r2, r2, r1
 1159 03b4 D2B2     		uxtb	r2, r2
 1160 03b6 1146     		mov	r1, r2
 1161 03b8 964A     		ldr	r2, .L14
 1162 03ba 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1163 03bc 1A70     		strb	r2, [r3]
 119:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[12] = sbox[(state[12] ^ expandedKey[(round * 16) + 12])];
 1164              		.loc 1 119 0 discriminator 3
 1165 03be 7B68     		ldr	r3, [r7, #4]
 1166 03c0 0C33     		adds	r3, r3, #12
 1167 03c2 7A68     		ldr	r2, [r7, #4]
 1168 03c4 0C32     		adds	r2, r2, #12
 1169 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1170 03c8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1171 03ca 1201     		lsls	r2, r2, #4
 1172 03cc 0C32     		adds	r2, r2, #12
 1173 03ce 3868     		ldr	r0, [r7]
 1174 03d0 0244     		add	r2, r2, r0
 1175 03d2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1176 03d4 4A40     		eors	r2, r2, r1
 1177 03d6 D2B2     		uxtb	r2, r2
 1178 03d8 1146     		mov	r1, r2
 1179 03da 8E4A     		ldr	r2, .L14
 1180 03dc 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1181 03de 1A70     		strb	r2, [r3]
 120:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // row 1
 121:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[1] ^ expandedKey[(round * 16) + 1];
 1182              		.loc 1 121 0 discriminator 3
 1183 03e0 7B68     		ldr	r3, [r7, #4]
 1184 03e2 0133     		adds	r3, r3, #1
 1185 03e4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1186 03e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1187 03e8 1B01     		lsls	r3, r3, #4
 1188 03ea 0133     		adds	r3, r3, #1
 1189 03ec 3968     		ldr	r1, [r7]
 1190 03ee 0B44     		add	r3, r3, r1
 1191 03f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1192 03f2 5340     		eors	r3, r3, r2
 1193 03f4 BB73     		strb	r3, [r7, #14]
 122:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[1] = sbox[(state[5] ^ expandedKey[(round * 16) + 5])];
 1194              		.loc 1 122 0 discriminator 3
 1195 03f6 7B68     		ldr	r3, [r7, #4]
 1196 03f8 0133     		adds	r3, r3, #1
 1197 03fa 7A68     		ldr	r2, [r7, #4]
 1198 03fc 0532     		adds	r2, r2, #5
 1199 03fe 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1200 0400 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1201 0402 1201     		lsls	r2, r2, #4
 1202 0404 0532     		adds	r2, r2, #5
 1203 0406 3868     		ldr	r0, [r7]
 1204 0408 0244     		add	r2, r2, r0
 1205 040a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1206 040c 4A40     		eors	r2, r2, r1
 1207 040e D2B2     		uxtb	r2, r2
 1208 0410 1146     		mov	r1, r2
 1209 0412 804A     		ldr	r2, .L14
 1210 0414 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1211 0416 1A70     		strb	r2, [r3]
 123:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[5] = sbox[(state[9] ^ expandedKey[(round * 16) + 9])];
 1212              		.loc 1 123 0 discriminator 3
 1213 0418 7B68     		ldr	r3, [r7, #4]
 1214 041a 0533     		adds	r3, r3, #5
 1215 041c 7A68     		ldr	r2, [r7, #4]
 1216 041e 0932     		adds	r2, r2, #9
 1217 0420 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1218 0422 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1219 0424 1201     		lsls	r2, r2, #4
 1220 0426 0932     		adds	r2, r2, #9
 1221 0428 3868     		ldr	r0, [r7]
 1222 042a 0244     		add	r2, r2, r0
 1223 042c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1224 042e 4A40     		eors	r2, r2, r1
 1225 0430 D2B2     		uxtb	r2, r2
 1226 0432 1146     		mov	r1, r2
 1227 0434 774A     		ldr	r2, .L14
 1228 0436 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1229 0438 1A70     		strb	r2, [r3]
 124:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[9] = sbox[(state[13] ^ expandedKey[(round * 16) + 13])];
 1230              		.loc 1 124 0 discriminator 3
 1231 043a 7B68     		ldr	r3, [r7, #4]
 1232 043c 0933     		adds	r3, r3, #9
 1233 043e 7A68     		ldr	r2, [r7, #4]
 1234 0440 0D32     		adds	r2, r2, #13
 1235 0442 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1236 0444 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1237 0446 1201     		lsls	r2, r2, #4
 1238 0448 0D32     		adds	r2, r2, #13
 1239 044a 3868     		ldr	r0, [r7]
 1240 044c 0244     		add	r2, r2, r0
 1241 044e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1242 0450 4A40     		eors	r2, r2, r1
 1243 0452 D2B2     		uxtb	r2, r2
 1244 0454 1146     		mov	r1, r2
 1245 0456 6F4A     		ldr	r2, .L14
 1246 0458 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1247 045a 1A70     		strb	r2, [r3]
 125:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[13] = sbox[buf1];
 1248              		.loc 1 125 0 discriminator 3
 1249 045c 7B68     		ldr	r3, [r7, #4]
 1250 045e 0D33     		adds	r3, r3, #13
 1251 0460 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1252 0462 6C49     		ldr	r1, .L14
 1253 0464 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1254 0466 1A70     		strb	r2, [r3]
 126:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // row 2
 127:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[2] ^ expandedKey[(round * 16) + 2];
 1255              		.loc 1 127 0 discriminator 3
 1256 0468 7B68     		ldr	r3, [r7, #4]
 1257 046a 0233     		adds	r3, r3, #2
 1258 046c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1259 046e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1260 0470 1B01     		lsls	r3, r3, #4
 1261 0472 0233     		adds	r3, r3, #2
 1262 0474 3968     		ldr	r1, [r7]
 1263 0476 0B44     		add	r3, r3, r1
 1264 0478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 047a 5340     		eors	r3, r3, r2
 1266 047c BB73     		strb	r3, [r7, #14]
 128:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[6] ^ expandedKey[(round * 16) + 6];
 1267              		.loc 1 128 0 discriminator 3
 1268 047e 7B68     		ldr	r3, [r7, #4]
 1269 0480 0633     		adds	r3, r3, #6
 1270 0482 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1271 0484 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1272 0486 1B01     		lsls	r3, r3, #4
 1273 0488 0633     		adds	r3, r3, #6
 1274 048a 3968     		ldr	r1, [r7]
 1275 048c 0B44     		add	r3, r3, r1
 1276 048e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1277 0490 5340     		eors	r3, r3, r2
 1278 0492 7B73     		strb	r3, [r7, #13]
 129:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[2] = sbox[(state[10] ^ expandedKey[(round * 16) + 10])];
 1279              		.loc 1 129 0 discriminator 3
 1280 0494 7B68     		ldr	r3, [r7, #4]
 1281 0496 0233     		adds	r3, r3, #2
 1282 0498 7A68     		ldr	r2, [r7, #4]
 1283 049a 0A32     		adds	r2, r2, #10
 1284 049c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1285 049e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1286 04a0 1201     		lsls	r2, r2, #4
 1287 04a2 0A32     		adds	r2, r2, #10
 1288 04a4 3868     		ldr	r0, [r7]
 1289 04a6 0244     		add	r2, r2, r0
 1290 04a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1291 04aa 4A40     		eors	r2, r2, r1
 1292 04ac D2B2     		uxtb	r2, r2
 1293 04ae 1146     		mov	r1, r2
 1294 04b0 584A     		ldr	r2, .L14
 1295 04b2 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1296 04b4 1A70     		strb	r2, [r3]
 130:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[6] = sbox[(state[14] ^ expandedKey[(round * 16) + 14])];
 1297              		.loc 1 130 0 discriminator 3
 1298 04b6 7B68     		ldr	r3, [r7, #4]
 1299 04b8 0633     		adds	r3, r3, #6
 1300 04ba 7A68     		ldr	r2, [r7, #4]
 1301 04bc 0E32     		adds	r2, r2, #14
 1302 04be 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1303 04c0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1304 04c2 1201     		lsls	r2, r2, #4
 1305 04c4 0E32     		adds	r2, r2, #14
 1306 04c6 3868     		ldr	r0, [r7]
 1307 04c8 0244     		add	r2, r2, r0
 1308 04ca 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1309 04cc 4A40     		eors	r2, r2, r1
 1310 04ce D2B2     		uxtb	r2, r2
 1311 04d0 1146     		mov	r1, r2
 1312 04d2 504A     		ldr	r2, .L14
 1313 04d4 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1314 04d6 1A70     		strb	r2, [r3]
 131:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[10] = sbox[buf1];
 1315              		.loc 1 131 0 discriminator 3
 1316 04d8 7B68     		ldr	r3, [r7, #4]
 1317 04da 0A33     		adds	r3, r3, #10
 1318 04dc BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1319 04de 4D49     		ldr	r1, .L14
 1320 04e0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1321 04e2 1A70     		strb	r2, [r3]
 132:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[14] = sbox[buf2];
 1322              		.loc 1 132 0 discriminator 3
 1323 04e4 7B68     		ldr	r3, [r7, #4]
 1324 04e6 0E33     		adds	r3, r3, #14
 1325 04e8 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1326 04ea 4A49     		ldr	r1, .L14
 1327 04ec 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1328 04ee 1A70     		strb	r2, [r3]
 133:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // row 3
 134:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[15] ^ expandedKey[(round * 16) + 15];
 1329              		.loc 1 134 0 discriminator 3
 1330 04f0 7B68     		ldr	r3, [r7, #4]
 1331 04f2 0F33     		adds	r3, r3, #15
 1332 04f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1333 04f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1334 04f8 1B01     		lsls	r3, r3, #4
 1335 04fa 0F33     		adds	r3, r3, #15
 1336 04fc 3968     		ldr	r1, [r7]
 1337 04fe 0B44     		add	r3, r3, r1
 1338 0500 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1339 0502 5340     		eors	r3, r3, r2
 1340 0504 BB73     		strb	r3, [r7, #14]
 135:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[15] = sbox[(state[11] ^ expandedKey[(round * 16) + 11])];
 1341              		.loc 1 135 0 discriminator 3
 1342 0506 7B68     		ldr	r3, [r7, #4]
 1343 0508 0F33     		adds	r3, r3, #15
 1344 050a 7A68     		ldr	r2, [r7, #4]
 1345 050c 0B32     		adds	r2, r2, #11
 1346 050e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1347 0510 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1348 0512 1201     		lsls	r2, r2, #4
 1349 0514 0B32     		adds	r2, r2, #11
 1350 0516 3868     		ldr	r0, [r7]
 1351 0518 0244     		add	r2, r2, r0
 1352 051a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1353 051c 4A40     		eors	r2, r2, r1
 1354 051e D2B2     		uxtb	r2, r2
 1355 0520 1146     		mov	r1, r2
 1356 0522 3C4A     		ldr	r2, .L14
 1357 0524 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1358 0526 1A70     		strb	r2, [r3]
 136:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[11] = sbox[(state[7] ^ expandedKey[(round * 16) + 7])];
 1359              		.loc 1 136 0 discriminator 3
 1360 0528 7B68     		ldr	r3, [r7, #4]
 1361 052a 0B33     		adds	r3, r3, #11
 1362 052c 7A68     		ldr	r2, [r7, #4]
 1363 052e 0732     		adds	r2, r2, #7
 1364 0530 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1365 0532 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1366 0534 1201     		lsls	r2, r2, #4
 1367 0536 0732     		adds	r2, r2, #7
 1368 0538 3868     		ldr	r0, [r7]
 1369 053a 0244     		add	r2, r2, r0
 1370 053c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1371 053e 4A40     		eors	r2, r2, r1
 1372 0540 D2B2     		uxtb	r2, r2
 1373 0542 1146     		mov	r1, r2
 1374 0544 334A     		ldr	r2, .L14
 1375 0546 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1376 0548 1A70     		strb	r2, [r3]
 137:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[7] = sbox[(state[3] ^ expandedKey[(round * 16) + 3])];
 1377              		.loc 1 137 0 discriminator 3
 1378 054a 7B68     		ldr	r3, [r7, #4]
 1379 054c 0733     		adds	r3, r3, #7
 1380 054e 7A68     		ldr	r2, [r7, #4]
 1381 0550 0332     		adds	r2, r2, #3
 1382 0552 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1383 0554 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1384 0556 1201     		lsls	r2, r2, #4
 1385 0558 0332     		adds	r2, r2, #3
 1386 055a 3868     		ldr	r0, [r7]
 1387 055c 0244     		add	r2, r2, r0
 1388 055e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1389 0560 4A40     		eors	r2, r2, r1
 1390 0562 D2B2     		uxtb	r2, r2
 1391 0564 1146     		mov	r1, r2
 1392 0566 2B4A     		ldr	r2, .L14
 1393 0568 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1394 056a 1A70     		strb	r2, [r3]
 138:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[3] = sbox[buf1];
 1395              		.loc 1 138 0 discriminator 3
 1396 056c 7B68     		ldr	r3, [r7, #4]
 1397 056e 0333     		adds	r3, r3, #3
 1398 0570 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1399 0572 2849     		ldr	r1, .L14
 1400 0574 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1401 0576 1A70     		strb	r2, [r3]
 139:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 140:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // mixcolums //////////
 141:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // col1
 142:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[0] ^ state[1] ^ state[2] ^ state[3];
 1402              		.loc 1 142 0 discriminator 3
 1403 0578 7B68     		ldr	r3, [r7, #4]
 1404 057a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1405 057c 7B68     		ldr	r3, [r7, #4]
 1406 057e 0133     		adds	r3, r3, #1
 1407 0580 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1408 0582 5340     		eors	r3, r3, r2
 1409 0584 DAB2     		uxtb	r2, r3
 1410 0586 7B68     		ldr	r3, [r7, #4]
 1411 0588 0233     		adds	r3, r3, #2
 1412 058a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1413 058c 5340     		eors	r3, r3, r2
 1414 058e DAB2     		uxtb	r2, r3
 1415 0590 7B68     		ldr	r3, [r7, #4]
 1416 0592 0333     		adds	r3, r3, #3
 1417 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 0596 5340     		eors	r3, r3, r2
 1419 0598 BB73     		strb	r3, [r7, #14]
 143:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[0];
 1420              		.loc 1 143 0 discriminator 3
 1421 059a 7B68     		ldr	r3, [r7, #4]
 1422 059c 1B78     		ldrb	r3, [r3]
 1423 059e 7B73     		strb	r3, [r7, #13]
 144:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[0] ^ state[1]; buf3 = galois_mul2(buf3); state[0] = state[0] ^ buf3 ^ buf1;
 1424              		.loc 1 144 0 discriminator 3
 1425 05a0 7B68     		ldr	r3, [r7, #4]
 1426 05a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1427 05a4 7B68     		ldr	r3, [r7, #4]
 1428 05a6 0133     		adds	r3, r3, #1
 1429 05a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1430 05aa 5340     		eors	r3, r3, r2
 1431 05ac 3B73     		strb	r3, [r7, #12]
 1432 05ae 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1433 05b0 1846     		mov	r0, r3
 1434 05b2 FFF7FEFF 		bl	galois_mul2
 1435 05b6 0346     		mov	r3, r0
 1436 05b8 3B73     		strb	r3, [r7, #12]
 1437 05ba 7B68     		ldr	r3, [r7, #4]
 1438 05bc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1439 05be 3B7B     		ldrb	r3, [r7, #12]
 1440 05c0 5340     		eors	r3, r3, r2
 1441 05c2 DAB2     		uxtb	r2, r3
 1442 05c4 BB7B     		ldrb	r3, [r7, #14]
 1443 05c6 5340     		eors	r3, r3, r2
 1444 05c8 DAB2     		uxtb	r2, r3
 1445 05ca 7B68     		ldr	r3, [r7, #4]
 1446 05cc 1A70     		strb	r2, [r3]
 145:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[1] ^ state[2]; buf3 = galois_mul2(buf3); state[1] = state[1] ^ buf3 ^ buf1;
 1447              		.loc 1 145 0 discriminator 3
 1448 05ce 7B68     		ldr	r3, [r7, #4]
 1449 05d0 0133     		adds	r3, r3, #1
 1450 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1451 05d4 7B68     		ldr	r3, [r7, #4]
 1452 05d6 0233     		adds	r3, r3, #2
 1453 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 05da 5340     		eors	r3, r3, r2
 1455 05dc 3B73     		strb	r3, [r7, #12]
 1456 05de 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1457 05e0 1846     		mov	r0, r3
 1458 05e2 FFF7FEFF 		bl	galois_mul2
 1459 05e6 0346     		mov	r3, r0
 1460 05e8 3B73     		strb	r3, [r7, #12]
 1461 05ea 7B68     		ldr	r3, [r7, #4]
 1462 05ec 0133     		adds	r3, r3, #1
 1463 05ee 7A68     		ldr	r2, [r7, #4]
 1464 05f0 0132     		adds	r2, r2, #1
 1465 05f2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1466 05f4 3A7B     		ldrb	r2, [r7, #12]
 1467 05f6 4A40     		eors	r2, r2, r1
 1468 05f8 D1B2     		uxtb	r1, r2
 1469 05fa BA7B     		ldrb	r2, [r7, #14]
 1470 05fc 4A40     		eors	r2, r2, r1
 1471 05fe D2B2     		uxtb	r2, r2
 1472 0600 1A70     		strb	r2, [r3]
 146:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[2] ^ state[3]; buf3 = galois_mul2(buf3); state[2] = state[2] ^ buf3 ^ buf1;
 1473              		.loc 1 146 0 discriminator 3
 1474 0602 7B68     		ldr	r3, [r7, #4]
 1475 0604 0233     		adds	r3, r3, #2
 1476 0606 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1477 0608 7B68     		ldr	r3, [r7, #4]
 1478 060a 0333     		adds	r3, r3, #3
 1479 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1480 060e 5340     		eors	r3, r3, r2
 1481 0610 02E0     		b	.L15
 1482              	.L16:
 1483 0612 00BF     		.align	2
 1484              	.L14:
 1485 0614 00000000 		.word	sbox
 1486              	.L15:
 1487 0618 3B73     		strb	r3, [r7, #12]
 1488 061a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1489 061c 1846     		mov	r0, r3
 1490 061e FFF7FEFF 		bl	galois_mul2
 1491 0622 0346     		mov	r3, r0
 1492 0624 3B73     		strb	r3, [r7, #12]
 1493 0626 7B68     		ldr	r3, [r7, #4]
 1494 0628 0233     		adds	r3, r3, #2
 1495 062a 7A68     		ldr	r2, [r7, #4]
 1496 062c 0232     		adds	r2, r2, #2
 1497 062e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1498 0630 3A7B     		ldrb	r2, [r7, #12]
 1499 0632 4A40     		eors	r2, r2, r1
 1500 0634 D1B2     		uxtb	r1, r2
 1501 0636 BA7B     		ldrb	r2, [r7, #14]
 1502 0638 4A40     		eors	r2, r2, r1
 1503 063a D2B2     		uxtb	r2, r2
 1504 063c 1A70     		strb	r2, [r3]
 147:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[3] ^ buf2;     buf3 = galois_mul2(buf3); state[3] = state[3] ^ buf3 ^ buf1;
 1505              		.loc 1 147 0 discriminator 3
 1506 063e 7B68     		ldr	r3, [r7, #4]
 1507 0640 0333     		adds	r3, r3, #3
 1508 0642 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1509 0644 7B7B     		ldrb	r3, [r7, #13]
 1510 0646 5340     		eors	r3, r3, r2
 1511 0648 3B73     		strb	r3, [r7, #12]
 1512 064a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1513 064c 1846     		mov	r0, r3
 1514 064e FFF7FEFF 		bl	galois_mul2
 1515 0652 0346     		mov	r3, r0
 1516 0654 3B73     		strb	r3, [r7, #12]
 1517 0656 7B68     		ldr	r3, [r7, #4]
 1518 0658 0333     		adds	r3, r3, #3
 1519 065a 7A68     		ldr	r2, [r7, #4]
 1520 065c 0332     		adds	r2, r2, #3
 1521 065e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1522 0660 3A7B     		ldrb	r2, [r7, #12]
 1523 0662 4A40     		eors	r2, r2, r1
 1524 0664 D1B2     		uxtb	r1, r2
 1525 0666 BA7B     		ldrb	r2, [r7, #14]
 1526 0668 4A40     		eors	r2, r2, r1
 1527 066a D2B2     		uxtb	r2, r2
 1528 066c 1A70     		strb	r2, [r3]
 148:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // col2
 149:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[4] ^ state[5] ^ state[6] ^ state[7];
 1529              		.loc 1 149 0 discriminator 3
 1530 066e 7B68     		ldr	r3, [r7, #4]
 1531 0670 0433     		adds	r3, r3, #4
 1532 0672 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1533 0674 7B68     		ldr	r3, [r7, #4]
 1534 0676 0533     		adds	r3, r3, #5
 1535 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 067a 5340     		eors	r3, r3, r2
 1537 067c DAB2     		uxtb	r2, r3
 1538 067e 7B68     		ldr	r3, [r7, #4]
 1539 0680 0633     		adds	r3, r3, #6
 1540 0682 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1541 0684 5340     		eors	r3, r3, r2
 1542 0686 DAB2     		uxtb	r2, r3
 1543 0688 7B68     		ldr	r3, [r7, #4]
 1544 068a 0733     		adds	r3, r3, #7
 1545 068c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1546 068e 5340     		eors	r3, r3, r2
 1547 0690 BB73     		strb	r3, [r7, #14]
 150:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[4];
 1548              		.loc 1 150 0 discriminator 3
 1549 0692 7B68     		ldr	r3, [r7, #4]
 1550 0694 1B79     		ldrb	r3, [r3, #4]
 1551 0696 7B73     		strb	r3, [r7, #13]
 151:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[4] ^ state[5]; buf3 = galois_mul2(buf3); state[4] = state[4] ^ buf3 ^ buf1;
 1552              		.loc 1 151 0 discriminator 3
 1553 0698 7B68     		ldr	r3, [r7, #4]
 1554 069a 0433     		adds	r3, r3, #4
 1555 069c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1556 069e 7B68     		ldr	r3, [r7, #4]
 1557 06a0 0533     		adds	r3, r3, #5
 1558 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1559 06a4 5340     		eors	r3, r3, r2
 1560 06a6 3B73     		strb	r3, [r7, #12]
 1561 06a8 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1562 06aa 1846     		mov	r0, r3
 1563 06ac FFF7FEFF 		bl	galois_mul2
 1564 06b0 0346     		mov	r3, r0
 1565 06b2 3B73     		strb	r3, [r7, #12]
 1566 06b4 7B68     		ldr	r3, [r7, #4]
 1567 06b6 0433     		adds	r3, r3, #4
 1568 06b8 7A68     		ldr	r2, [r7, #4]
 1569 06ba 0432     		adds	r2, r2, #4
 1570 06bc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1571 06be 3A7B     		ldrb	r2, [r7, #12]
 1572 06c0 4A40     		eors	r2, r2, r1
 1573 06c2 D1B2     		uxtb	r1, r2
 1574 06c4 BA7B     		ldrb	r2, [r7, #14]
 1575 06c6 4A40     		eors	r2, r2, r1
 1576 06c8 D2B2     		uxtb	r2, r2
 1577 06ca 1A70     		strb	r2, [r3]
 152:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[5] ^ state[6]; buf3 = galois_mul2(buf3); state[5] = state[5] ^ buf3 ^ buf1;
 1578              		.loc 1 152 0 discriminator 3
 1579 06cc 7B68     		ldr	r3, [r7, #4]
 1580 06ce 0533     		adds	r3, r3, #5
 1581 06d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1582 06d2 7B68     		ldr	r3, [r7, #4]
 1583 06d4 0633     		adds	r3, r3, #6
 1584 06d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1585 06d8 5340     		eors	r3, r3, r2
 1586 06da 3B73     		strb	r3, [r7, #12]
 1587 06dc 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1588 06de 1846     		mov	r0, r3
 1589 06e0 FFF7FEFF 		bl	galois_mul2
 1590 06e4 0346     		mov	r3, r0
 1591 06e6 3B73     		strb	r3, [r7, #12]
 1592 06e8 7B68     		ldr	r3, [r7, #4]
 1593 06ea 0533     		adds	r3, r3, #5
 1594 06ec 7A68     		ldr	r2, [r7, #4]
 1595 06ee 0532     		adds	r2, r2, #5
 1596 06f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1597 06f2 3A7B     		ldrb	r2, [r7, #12]
 1598 06f4 4A40     		eors	r2, r2, r1
 1599 06f6 D1B2     		uxtb	r1, r2
 1600 06f8 BA7B     		ldrb	r2, [r7, #14]
 1601 06fa 4A40     		eors	r2, r2, r1
 1602 06fc D2B2     		uxtb	r2, r2
 1603 06fe 1A70     		strb	r2, [r3]
 153:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[6] ^ state[7]; buf3 = galois_mul2(buf3); state[6] = state[6] ^ buf3 ^ buf1;
 1604              		.loc 1 153 0 discriminator 3
 1605 0700 7B68     		ldr	r3, [r7, #4]
 1606 0702 0633     		adds	r3, r3, #6
 1607 0704 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1608 0706 7B68     		ldr	r3, [r7, #4]
 1609 0708 0733     		adds	r3, r3, #7
 1610 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1611 070c 5340     		eors	r3, r3, r2
 1612 070e 3B73     		strb	r3, [r7, #12]
 1613 0710 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1614 0712 1846     		mov	r0, r3
 1615 0714 FFF7FEFF 		bl	galois_mul2
 1616 0718 0346     		mov	r3, r0
 1617 071a 3B73     		strb	r3, [r7, #12]
 1618 071c 7B68     		ldr	r3, [r7, #4]
 1619 071e 0633     		adds	r3, r3, #6
 1620 0720 7A68     		ldr	r2, [r7, #4]
 1621 0722 0632     		adds	r2, r2, #6
 1622 0724 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1623 0726 3A7B     		ldrb	r2, [r7, #12]
 1624 0728 4A40     		eors	r2, r2, r1
 1625 072a D1B2     		uxtb	r1, r2
 1626 072c BA7B     		ldrb	r2, [r7, #14]
 1627 072e 4A40     		eors	r2, r2, r1
 1628 0730 D2B2     		uxtb	r2, r2
 1629 0732 1A70     		strb	r2, [r3]
 154:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[7] ^ buf2;     buf3 = galois_mul2(buf3); state[7] = state[7] ^ buf3 ^ buf1;
 1630              		.loc 1 154 0 discriminator 3
 1631 0734 7B68     		ldr	r3, [r7, #4]
 1632 0736 0733     		adds	r3, r3, #7
 1633 0738 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1634 073a 7B7B     		ldrb	r3, [r7, #13]
 1635 073c 5340     		eors	r3, r3, r2
 1636 073e 3B73     		strb	r3, [r7, #12]
 1637 0740 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1638 0742 1846     		mov	r0, r3
 1639 0744 FFF7FEFF 		bl	galois_mul2
 1640 0748 0346     		mov	r3, r0
 1641 074a 3B73     		strb	r3, [r7, #12]
 1642 074c 7B68     		ldr	r3, [r7, #4]
 1643 074e 0733     		adds	r3, r3, #7
 1644 0750 7A68     		ldr	r2, [r7, #4]
 1645 0752 0732     		adds	r2, r2, #7
 1646 0754 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1647 0756 3A7B     		ldrb	r2, [r7, #12]
 1648 0758 4A40     		eors	r2, r2, r1
 1649 075a D1B2     		uxtb	r1, r2
 1650 075c BA7B     		ldrb	r2, [r7, #14]
 1651 075e 4A40     		eors	r2, r2, r1
 1652 0760 D2B2     		uxtb	r2, r2
 1653 0762 1A70     		strb	r2, [r3]
 155:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // col3
 156:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[8] ^ state[9] ^ state[10] ^ state[11];
 1654              		.loc 1 156 0 discriminator 3
 1655 0764 7B68     		ldr	r3, [r7, #4]
 1656 0766 0833     		adds	r3, r3, #8
 1657 0768 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1658 076a 7B68     		ldr	r3, [r7, #4]
 1659 076c 0933     		adds	r3, r3, #9
 1660 076e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1661 0770 5340     		eors	r3, r3, r2
 1662 0772 DAB2     		uxtb	r2, r3
 1663 0774 7B68     		ldr	r3, [r7, #4]
 1664 0776 0A33     		adds	r3, r3, #10
 1665 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1666 077a 5340     		eors	r3, r3, r2
 1667 077c DAB2     		uxtb	r2, r3
 1668 077e 7B68     		ldr	r3, [r7, #4]
 1669 0780 0B33     		adds	r3, r3, #11
 1670 0782 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1671 0784 5340     		eors	r3, r3, r2
 1672 0786 BB73     		strb	r3, [r7, #14]
 157:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[8];
 1673              		.loc 1 157 0 discriminator 3
 1674 0788 7B68     		ldr	r3, [r7, #4]
 1675 078a 1B7A     		ldrb	r3, [r3, #8]
 1676 078c 7B73     		strb	r3, [r7, #13]
 158:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[8] ^ state[9];   buf3 = galois_mul2(buf3); state[8] = state[8] ^ buf3 ^ buf1;
 1677              		.loc 1 158 0 discriminator 3
 1678 078e 7B68     		ldr	r3, [r7, #4]
 1679 0790 0833     		adds	r3, r3, #8
 1680 0792 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1681 0794 7B68     		ldr	r3, [r7, #4]
 1682 0796 0933     		adds	r3, r3, #9
 1683 0798 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1684 079a 5340     		eors	r3, r3, r2
 1685 079c 3B73     		strb	r3, [r7, #12]
 1686 079e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1687 07a0 1846     		mov	r0, r3
 1688 07a2 FFF7FEFF 		bl	galois_mul2
 1689 07a6 0346     		mov	r3, r0
 1690 07a8 3B73     		strb	r3, [r7, #12]
 1691 07aa 7B68     		ldr	r3, [r7, #4]
 1692 07ac 0833     		adds	r3, r3, #8
 1693 07ae 7A68     		ldr	r2, [r7, #4]
 1694 07b0 0832     		adds	r2, r2, #8
 1695 07b2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1696 07b4 3A7B     		ldrb	r2, [r7, #12]
 1697 07b6 4A40     		eors	r2, r2, r1
 1698 07b8 D1B2     		uxtb	r1, r2
 1699 07ba BA7B     		ldrb	r2, [r7, #14]
 1700 07bc 4A40     		eors	r2, r2, r1
 1701 07be D2B2     		uxtb	r2, r2
 1702 07c0 1A70     		strb	r2, [r3]
 159:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[9] ^ state[10];  buf3 = galois_mul2(buf3); state[9] = state[9] ^ buf3 ^ buf1;
 1703              		.loc 1 159 0 discriminator 3
 1704 07c2 7B68     		ldr	r3, [r7, #4]
 1705 07c4 0933     		adds	r3, r3, #9
 1706 07c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1707 07c8 7B68     		ldr	r3, [r7, #4]
 1708 07ca 0A33     		adds	r3, r3, #10
 1709 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1710 07ce 5340     		eors	r3, r3, r2
 1711 07d0 3B73     		strb	r3, [r7, #12]
 1712 07d2 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1713 07d4 1846     		mov	r0, r3
 1714 07d6 FFF7FEFF 		bl	galois_mul2
 1715 07da 0346     		mov	r3, r0
 1716 07dc 3B73     		strb	r3, [r7, #12]
 1717 07de 7B68     		ldr	r3, [r7, #4]
 1718 07e0 0933     		adds	r3, r3, #9
 1719 07e2 7A68     		ldr	r2, [r7, #4]
 1720 07e4 0932     		adds	r2, r2, #9
 1721 07e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1722 07e8 3A7B     		ldrb	r2, [r7, #12]
 1723 07ea 4A40     		eors	r2, r2, r1
 1724 07ec D1B2     		uxtb	r1, r2
 1725 07ee BA7B     		ldrb	r2, [r7, #14]
 1726 07f0 4A40     		eors	r2, r2, r1
 1727 07f2 D2B2     		uxtb	r2, r2
 1728 07f4 1A70     		strb	r2, [r3]
 160:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[10] ^ state[11]; buf3 = galois_mul2(buf3); state[10] = state[10] ^ buf3 ^ buf1
 1729              		.loc 1 160 0 discriminator 3
 1730 07f6 7B68     		ldr	r3, [r7, #4]
 1731 07f8 0A33     		adds	r3, r3, #10
 1732 07fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1733 07fc 7B68     		ldr	r3, [r7, #4]
 1734 07fe 0B33     		adds	r3, r3, #11
 1735 0800 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1736 0802 5340     		eors	r3, r3, r2
 1737 0804 3B73     		strb	r3, [r7, #12]
 1738 0806 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1739 0808 1846     		mov	r0, r3
 1740 080a FFF7FEFF 		bl	galois_mul2
 1741 080e 0346     		mov	r3, r0
 1742 0810 3B73     		strb	r3, [r7, #12]
 1743 0812 7B68     		ldr	r3, [r7, #4]
 1744 0814 0A33     		adds	r3, r3, #10
 1745 0816 7A68     		ldr	r2, [r7, #4]
 1746 0818 0A32     		adds	r2, r2, #10
 1747 081a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1748 081c 3A7B     		ldrb	r2, [r7, #12]
 1749 081e 4A40     		eors	r2, r2, r1
 1750 0820 D1B2     		uxtb	r1, r2
 1751 0822 BA7B     		ldrb	r2, [r7, #14]
 1752 0824 4A40     		eors	r2, r2, r1
 1753 0826 D2B2     		uxtb	r2, r2
 1754 0828 1A70     		strb	r2, [r3]
 161:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[11] ^ buf2;      buf3 = galois_mul2(buf3); state[11] = state[11] ^ buf3 ^ buf1
 1755              		.loc 1 161 0 discriminator 3
 1756 082a 7B68     		ldr	r3, [r7, #4]
 1757 082c 0B33     		adds	r3, r3, #11
 1758 082e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1759 0830 7B7B     		ldrb	r3, [r7, #13]
 1760 0832 5340     		eors	r3, r3, r2
 1761 0834 3B73     		strb	r3, [r7, #12]
 1762 0836 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1763 0838 1846     		mov	r0, r3
 1764 083a FFF7FEFF 		bl	galois_mul2
 1765 083e 0346     		mov	r3, r0
 1766 0840 3B73     		strb	r3, [r7, #12]
 1767 0842 7B68     		ldr	r3, [r7, #4]
 1768 0844 0B33     		adds	r3, r3, #11
 1769 0846 7A68     		ldr	r2, [r7, #4]
 1770 0848 0B32     		adds	r2, r2, #11
 1771 084a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1772 084c 3A7B     		ldrb	r2, [r7, #12]
 1773 084e 4A40     		eors	r2, r2, r1
 1774 0850 D1B2     		uxtb	r1, r2
 1775 0852 BA7B     		ldrb	r2, [r7, #14]
 1776 0854 4A40     		eors	r2, r2, r1
 1777 0856 D2B2     		uxtb	r2, r2
 1778 0858 1A70     		strb	r2, [r3]
 162:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // col4
 163:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[12] ^ state[13] ^ state[14] ^ state[15];
 1779              		.loc 1 163 0 discriminator 3
 1780 085a 7B68     		ldr	r3, [r7, #4]
 1781 085c 0C33     		adds	r3, r3, #12
 1782 085e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1783 0860 7B68     		ldr	r3, [r7, #4]
 1784 0862 0D33     		adds	r3, r3, #13
 1785 0864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1786 0866 5340     		eors	r3, r3, r2
 1787 0868 DAB2     		uxtb	r2, r3
 1788 086a 7B68     		ldr	r3, [r7, #4]
 1789 086c 0E33     		adds	r3, r3, #14
 1790 086e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1791 0870 5340     		eors	r3, r3, r2
 1792 0872 DAB2     		uxtb	r2, r3
 1793 0874 7B68     		ldr	r3, [r7, #4]
 1794 0876 0F33     		adds	r3, r3, #15
 1795 0878 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 087a 5340     		eors	r3, r3, r2
 1797 087c BB73     		strb	r3, [r7, #14]
 164:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[12];
 1798              		.loc 1 164 0 discriminator 3
 1799 087e 7B68     		ldr	r3, [r7, #4]
 1800 0880 1B7B     		ldrb	r3, [r3, #12]
 1801 0882 7B73     		strb	r3, [r7, #13]
 165:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[12] ^ state[13]; buf3 = galois_mul2(buf3); state[12] = state[12] ^ buf3 ^ buf1
 1802              		.loc 1 165 0 discriminator 3
 1803 0884 7B68     		ldr	r3, [r7, #4]
 1804 0886 0C33     		adds	r3, r3, #12
 1805 0888 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1806 088a 7B68     		ldr	r3, [r7, #4]
 1807 088c 0D33     		adds	r3, r3, #13
 1808 088e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1809 0890 5340     		eors	r3, r3, r2
 1810 0892 3B73     		strb	r3, [r7, #12]
 1811 0894 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1812 0896 1846     		mov	r0, r3
 1813 0898 FFF7FEFF 		bl	galois_mul2
 1814 089c 0346     		mov	r3, r0
 1815 089e 3B73     		strb	r3, [r7, #12]
 1816 08a0 7B68     		ldr	r3, [r7, #4]
 1817 08a2 0C33     		adds	r3, r3, #12
 1818 08a4 7A68     		ldr	r2, [r7, #4]
 1819 08a6 0C32     		adds	r2, r2, #12
 1820 08a8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1821 08aa 3A7B     		ldrb	r2, [r7, #12]
 1822 08ac 4A40     		eors	r2, r2, r1
 1823 08ae D1B2     		uxtb	r1, r2
 1824 08b0 BA7B     		ldrb	r2, [r7, #14]
 1825 08b2 4A40     		eors	r2, r2, r1
 1826 08b4 D2B2     		uxtb	r2, r2
 1827 08b6 1A70     		strb	r2, [r3]
 166:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[13] ^ state[14]; buf3 = galois_mul2(buf3); state[13] = state[13] ^ buf3 ^ buf1
 1828              		.loc 1 166 0 discriminator 3
 1829 08b8 7B68     		ldr	r3, [r7, #4]
 1830 08ba 0D33     		adds	r3, r3, #13
 1831 08bc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1832 08be 7B68     		ldr	r3, [r7, #4]
 1833 08c0 0E33     		adds	r3, r3, #14
 1834 08c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1835 08c4 5340     		eors	r3, r3, r2
 1836 08c6 3B73     		strb	r3, [r7, #12]
 1837 08c8 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1838 08ca 1846     		mov	r0, r3
 1839 08cc FFF7FEFF 		bl	galois_mul2
 1840 08d0 0346     		mov	r3, r0
 1841 08d2 3B73     		strb	r3, [r7, #12]
 1842 08d4 7B68     		ldr	r3, [r7, #4]
 1843 08d6 0D33     		adds	r3, r3, #13
 1844 08d8 7A68     		ldr	r2, [r7, #4]
 1845 08da 0D32     		adds	r2, r2, #13
 1846 08dc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1847 08de 3A7B     		ldrb	r2, [r7, #12]
 1848 08e0 4A40     		eors	r2, r2, r1
 1849 08e2 D1B2     		uxtb	r1, r2
 1850 08e4 BA7B     		ldrb	r2, [r7, #14]
 1851 08e6 4A40     		eors	r2, r2, r1
 1852 08e8 D2B2     		uxtb	r2, r2
 1853 08ea 1A70     		strb	r2, [r3]
 167:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[14] ^ state[15]; buf3 = galois_mul2(buf3); state[14] = state[14] ^ buf3 ^ buf1
 1854              		.loc 1 167 0 discriminator 3
 1855 08ec 7B68     		ldr	r3, [r7, #4]
 1856 08ee 0E33     		adds	r3, r3, #14
 1857 08f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1858 08f2 7B68     		ldr	r3, [r7, #4]
 1859 08f4 0F33     		adds	r3, r3, #15
 1860 08f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1861 08f8 5340     		eors	r3, r3, r2
 1862 08fa 3B73     		strb	r3, [r7, #12]
 1863 08fc 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1864 08fe 1846     		mov	r0, r3
 1865 0900 FFF7FEFF 		bl	galois_mul2
 1866 0904 0346     		mov	r3, r0
 1867 0906 3B73     		strb	r3, [r7, #12]
 1868 0908 7B68     		ldr	r3, [r7, #4]
 1869 090a 0E33     		adds	r3, r3, #14
 1870 090c 7A68     		ldr	r2, [r7, #4]
 1871 090e 0E32     		adds	r2, r2, #14
 1872 0910 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1873 0912 3A7B     		ldrb	r2, [r7, #12]
 1874 0914 4A40     		eors	r2, r2, r1
 1875 0916 D1B2     		uxtb	r1, r2
 1876 0918 BA7B     		ldrb	r2, [r7, #14]
 1877 091a 4A40     		eors	r2, r2, r1
 1878 091c D2B2     		uxtb	r2, r2
 1879 091e 1A70     		strb	r2, [r3]
 168:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[15] ^ buf2;      buf3 = galois_mul2(buf3); state[15] = state[15] ^ buf3 ^ buf1
 1880              		.loc 1 168 0 discriminator 3
 1881 0920 7B68     		ldr	r3, [r7, #4]
 1882 0922 0F33     		adds	r3, r3, #15
 1883 0924 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1884 0926 7B7B     		ldrb	r3, [r7, #13]
 1885 0928 5340     		eors	r3, r3, r2
 1886 092a 3B73     		strb	r3, [r7, #12]
 1887 092c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1888 092e 1846     		mov	r0, r3
 1889 0930 FFF7FEFF 		bl	galois_mul2
 1890 0934 0346     		mov	r3, r0
 1891 0936 3B73     		strb	r3, [r7, #12]
 1892 0938 7B68     		ldr	r3, [r7, #4]
 1893 093a 0F33     		adds	r3, r3, #15
 1894 093c 7A68     		ldr	r2, [r7, #4]
 1895 093e 0F32     		adds	r2, r2, #15
 1896 0940 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1897 0942 3A7B     		ldrb	r2, [r7, #12]
 1898 0944 4A40     		eors	r2, r2, r1
 1899 0946 D1B2     		uxtb	r1, r2
 1900 0948 BA7B     		ldrb	r2, [r7, #14]
 1901 094a 4A40     		eors	r2, r2, r1
 1902 094c D2B2     		uxtb	r2, r2
 1903 094e 1A70     		strb	r2, [r3]
 113:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // addroundkey, sbox and shiftrows
 1904              		.loc 1 113 0 discriminator 3
 1905 0950 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1906 0952 0133     		adds	r3, r3, #1
 1907 0954 FB73     		strb	r3, [r7, #15]
 1908              	.L12:
 113:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // addroundkey, sbox and shiftrows
 1909              		.loc 1 113 0 is_stmt 0 discriminator 1
 1910 0956 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1911 0958 082B     		cmp	r3, #8
 1912 095a 7FF6FFAC 		bls	.L13
 169:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 170:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     }
 171:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // 10th round without mixcols
 172:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[0] = sbox[(state[0] ^ expandedKey[(round * 16)])];
 1913              		.loc 1 172 0 is_stmt 1
 1914 095e 7B68     		ldr	r3, [r7, #4]
 1915 0960 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1916 0962 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1917 0964 1B01     		lsls	r3, r3, #4
 1918 0966 1946     		mov	r1, r3
 1919 0968 3B68     		ldr	r3, [r7]
 1920 096a 0B44     		add	r3, r3, r1
 1921 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1922 096e 5340     		eors	r3, r3, r2
 1923 0970 DBB2     		uxtb	r3, r3
 1924 0972 1A46     		mov	r2, r3
 1925 0974 A54B     		ldr	r3, .L17
 1926 0976 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1927 0978 7B68     		ldr	r3, [r7, #4]
 1928 097a 1A70     		strb	r2, [r3]
 173:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[4] = sbox[(state[4] ^ expandedKey[(round * 16) + 4])];
 1929              		.loc 1 173 0
 1930 097c 7B68     		ldr	r3, [r7, #4]
 1931 097e 0433     		adds	r3, r3, #4
 1932 0980 7A68     		ldr	r2, [r7, #4]
 1933 0982 0432     		adds	r2, r2, #4
 1934 0984 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1935 0986 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1936 0988 1201     		lsls	r2, r2, #4
 1937 098a 0432     		adds	r2, r2, #4
 1938 098c 3868     		ldr	r0, [r7]
 1939 098e 0244     		add	r2, r2, r0
 1940 0990 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1941 0992 4A40     		eors	r2, r2, r1
 1942 0994 D2B2     		uxtb	r2, r2
 1943 0996 1146     		mov	r1, r2
 1944 0998 9C4A     		ldr	r2, .L17
 1945 099a 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1946 099c 1A70     		strb	r2, [r3]
 174:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[8] = sbox[(state[8] ^ expandedKey[(round * 16) + 8])];
 1947              		.loc 1 174 0
 1948 099e 7B68     		ldr	r3, [r7, #4]
 1949 09a0 0833     		adds	r3, r3, #8
 1950 09a2 7A68     		ldr	r2, [r7, #4]
 1951 09a4 0832     		adds	r2, r2, #8
 1952 09a6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1953 09a8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1954 09aa 1201     		lsls	r2, r2, #4
 1955 09ac 0832     		adds	r2, r2, #8
 1956 09ae 3868     		ldr	r0, [r7]
 1957 09b0 0244     		add	r2, r2, r0
 1958 09b2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1959 09b4 4A40     		eors	r2, r2, r1
 1960 09b6 D2B2     		uxtb	r2, r2
 1961 09b8 1146     		mov	r1, r2
 1962 09ba 944A     		ldr	r2, .L17
 1963 09bc 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1964 09be 1A70     		strb	r2, [r3]
 175:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[12] = sbox[(state[12] ^ expandedKey[(round * 16) + 12])];
 1965              		.loc 1 175 0
 1966 09c0 7B68     		ldr	r3, [r7, #4]
 1967 09c2 0C33     		adds	r3, r3, #12
 1968 09c4 7A68     		ldr	r2, [r7, #4]
 1969 09c6 0C32     		adds	r2, r2, #12
 1970 09c8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1971 09ca FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1972 09cc 1201     		lsls	r2, r2, #4
 1973 09ce 0C32     		adds	r2, r2, #12
 1974 09d0 3868     		ldr	r0, [r7]
 1975 09d2 0244     		add	r2, r2, r0
 1976 09d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1977 09d6 4A40     		eors	r2, r2, r1
 1978 09d8 D2B2     		uxtb	r2, r2
 1979 09da 1146     		mov	r1, r2
 1980 09dc 8B4A     		ldr	r2, .L17
 1981 09de 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 1982 09e0 1A70     		strb	r2, [r3]
 176:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // row 1
 177:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     buf1 = state[1] ^ expandedKey[(round * 16) + 1];
 1983              		.loc 1 177 0
 1984 09e2 7B68     		ldr	r3, [r7, #4]
 1985 09e4 0133     		adds	r3, r3, #1
 1986 09e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1987 09e8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1988 09ea 1B01     		lsls	r3, r3, #4
 1989 09ec 0133     		adds	r3, r3, #1
 1990 09ee 3968     		ldr	r1, [r7]
 1991 09f0 0B44     		add	r3, r3, r1
 1992 09f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1993 09f4 5340     		eors	r3, r3, r2
 1994 09f6 BB73     		strb	r3, [r7, #14]
 178:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[1] = sbox[(state[5] ^ expandedKey[(round * 16) + 5])];
 1995              		.loc 1 178 0
 1996 09f8 7B68     		ldr	r3, [r7, #4]
 1997 09fa 0133     		adds	r3, r3, #1
 1998 09fc 7A68     		ldr	r2, [r7, #4]
 1999 09fe 0532     		adds	r2, r2, #5
 2000 0a00 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2001 0a02 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2002 0a04 1201     		lsls	r2, r2, #4
 2003 0a06 0532     		adds	r2, r2, #5
 2004 0a08 3868     		ldr	r0, [r7]
 2005 0a0a 0244     		add	r2, r2, r0
 2006 0a0c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2007 0a0e 4A40     		eors	r2, r2, r1
 2008 0a10 D2B2     		uxtb	r2, r2
 2009 0a12 1146     		mov	r1, r2
 2010 0a14 7D4A     		ldr	r2, .L17
 2011 0a16 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 2012 0a18 1A70     		strb	r2, [r3]
 179:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[5] = sbox[(state[9] ^ expandedKey[(round * 16) + 9])];
 2013              		.loc 1 179 0
 2014 0a1a 7B68     		ldr	r3, [r7, #4]
 2015 0a1c 0533     		adds	r3, r3, #5
 2016 0a1e 7A68     		ldr	r2, [r7, #4]
 2017 0a20 0932     		adds	r2, r2, #9
 2018 0a22 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2019 0a24 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2020 0a26 1201     		lsls	r2, r2, #4
 2021 0a28 0932     		adds	r2, r2, #9
 2022 0a2a 3868     		ldr	r0, [r7]
 2023 0a2c 0244     		add	r2, r2, r0
 2024 0a2e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2025 0a30 4A40     		eors	r2, r2, r1
 2026 0a32 D2B2     		uxtb	r2, r2
 2027 0a34 1146     		mov	r1, r2
 2028 0a36 754A     		ldr	r2, .L17
 2029 0a38 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 2030 0a3a 1A70     		strb	r2, [r3]
 180:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[9] = sbox[(state[13] ^ expandedKey[(round * 16) + 13])];
 2031              		.loc 1 180 0
 2032 0a3c 7B68     		ldr	r3, [r7, #4]
 2033 0a3e 0933     		adds	r3, r3, #9
 2034 0a40 7A68     		ldr	r2, [r7, #4]
 2035 0a42 0D32     		adds	r2, r2, #13
 2036 0a44 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2037 0a46 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2038 0a48 1201     		lsls	r2, r2, #4
 2039 0a4a 0D32     		adds	r2, r2, #13
 2040 0a4c 3868     		ldr	r0, [r7]
 2041 0a4e 0244     		add	r2, r2, r0
 2042 0a50 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2043 0a52 4A40     		eors	r2, r2, r1
 2044 0a54 D2B2     		uxtb	r2, r2
 2045 0a56 1146     		mov	r1, r2
 2046 0a58 6C4A     		ldr	r2, .L17
 2047 0a5a 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 2048 0a5c 1A70     		strb	r2, [r3]
 181:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[13] = sbox[buf1];
 2049              		.loc 1 181 0
 2050 0a5e 7B68     		ldr	r3, [r7, #4]
 2051 0a60 0D33     		adds	r3, r3, #13
 2052 0a62 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2053 0a64 6949     		ldr	r1, .L17
 2054 0a66 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2055 0a68 1A70     		strb	r2, [r3]
 182:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // row 2
 183:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     buf1 = state[2] ^ expandedKey[(round * 16) + 2];
 2056              		.loc 1 183 0
 2057 0a6a 7B68     		ldr	r3, [r7, #4]
 2058 0a6c 0233     		adds	r3, r3, #2
 2059 0a6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2060 0a70 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2061 0a72 1B01     		lsls	r3, r3, #4
 2062 0a74 0233     		adds	r3, r3, #2
 2063 0a76 3968     		ldr	r1, [r7]
 2064 0a78 0B44     		add	r3, r3, r1
 2065 0a7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2066 0a7c 5340     		eors	r3, r3, r2
 2067 0a7e BB73     		strb	r3, [r7, #14]
 184:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     buf2 = state[6] ^ expandedKey[(round * 16) + 6];
 2068              		.loc 1 184 0
 2069 0a80 7B68     		ldr	r3, [r7, #4]
 2070 0a82 0633     		adds	r3, r3, #6
 2071 0a84 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2072 0a86 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2073 0a88 1B01     		lsls	r3, r3, #4
 2074 0a8a 0633     		adds	r3, r3, #6
 2075 0a8c 3968     		ldr	r1, [r7]
 2076 0a8e 0B44     		add	r3, r3, r1
 2077 0a90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2078 0a92 5340     		eors	r3, r3, r2
 2079 0a94 7B73     		strb	r3, [r7, #13]
 185:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[2] = sbox[(state[10] ^ expandedKey[(round * 16) + 10])];
 2080              		.loc 1 185 0
 2081 0a96 7B68     		ldr	r3, [r7, #4]
 2082 0a98 0233     		adds	r3, r3, #2
 2083 0a9a 7A68     		ldr	r2, [r7, #4]
 2084 0a9c 0A32     		adds	r2, r2, #10
 2085 0a9e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2086 0aa0 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2087 0aa2 1201     		lsls	r2, r2, #4
 2088 0aa4 0A32     		adds	r2, r2, #10
 2089 0aa6 3868     		ldr	r0, [r7]
 2090 0aa8 0244     		add	r2, r2, r0
 2091 0aaa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2092 0aac 4A40     		eors	r2, r2, r1
 2093 0aae D2B2     		uxtb	r2, r2
 2094 0ab0 1146     		mov	r1, r2
 2095 0ab2 564A     		ldr	r2, .L17
 2096 0ab4 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 2097 0ab6 1A70     		strb	r2, [r3]
 186:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[6] = sbox[(state[14] ^ expandedKey[(round * 16) + 14])];
 2098              		.loc 1 186 0
 2099 0ab8 7B68     		ldr	r3, [r7, #4]
 2100 0aba 0633     		adds	r3, r3, #6
 2101 0abc 7A68     		ldr	r2, [r7, #4]
 2102 0abe 0E32     		adds	r2, r2, #14
 2103 0ac0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2104 0ac2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2105 0ac4 1201     		lsls	r2, r2, #4
 2106 0ac6 0E32     		adds	r2, r2, #14
 2107 0ac8 3868     		ldr	r0, [r7]
 2108 0aca 0244     		add	r2, r2, r0
 2109 0acc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2110 0ace 4A40     		eors	r2, r2, r1
 2111 0ad0 D2B2     		uxtb	r2, r2
 2112 0ad2 1146     		mov	r1, r2
 2113 0ad4 4D4A     		ldr	r2, .L17
 2114 0ad6 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 2115 0ad8 1A70     		strb	r2, [r3]
 187:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[10] = sbox[buf1];
 2116              		.loc 1 187 0
 2117 0ada 7B68     		ldr	r3, [r7, #4]
 2118 0adc 0A33     		adds	r3, r3, #10
 2119 0ade BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2120 0ae0 4A49     		ldr	r1, .L17
 2121 0ae2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2122 0ae4 1A70     		strb	r2, [r3]
 188:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[14] = sbox[buf2];
 2123              		.loc 1 188 0
 2124 0ae6 7B68     		ldr	r3, [r7, #4]
 2125 0ae8 0E33     		adds	r3, r3, #14
 2126 0aea 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 2127 0aec 4749     		ldr	r1, .L17
 2128 0aee 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2129 0af0 1A70     		strb	r2, [r3]
 189:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // row 3
 190:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     buf1 = state[15] ^ expandedKey[(round * 16) + 15];
 2130              		.loc 1 190 0
 2131 0af2 7B68     		ldr	r3, [r7, #4]
 2132 0af4 0F33     		adds	r3, r3, #15
 2133 0af6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2134 0af8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2135 0afa 1B01     		lsls	r3, r3, #4
 2136 0afc 0F33     		adds	r3, r3, #15
 2137 0afe 3968     		ldr	r1, [r7]
 2138 0b00 0B44     		add	r3, r3, r1
 2139 0b02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2140 0b04 5340     		eors	r3, r3, r2
 2141 0b06 BB73     		strb	r3, [r7, #14]
 191:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[15] = sbox[(state[11] ^ expandedKey[(round * 16) + 11])];
 2142              		.loc 1 191 0
 2143 0b08 7B68     		ldr	r3, [r7, #4]
 2144 0b0a 0F33     		adds	r3, r3, #15
 2145 0b0c 7A68     		ldr	r2, [r7, #4]
 2146 0b0e 0B32     		adds	r2, r2, #11
 2147 0b10 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2148 0b12 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2149 0b14 1201     		lsls	r2, r2, #4
 2150 0b16 0B32     		adds	r2, r2, #11
 2151 0b18 3868     		ldr	r0, [r7]
 2152 0b1a 0244     		add	r2, r2, r0
 2153 0b1c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2154 0b1e 4A40     		eors	r2, r2, r1
 2155 0b20 D2B2     		uxtb	r2, r2
 2156 0b22 1146     		mov	r1, r2
 2157 0b24 394A     		ldr	r2, .L17
 2158 0b26 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 2159 0b28 1A70     		strb	r2, [r3]
 192:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[11] = sbox[(state[7] ^ expandedKey[(round * 16) + 7])];
 2160              		.loc 1 192 0
 2161 0b2a 7B68     		ldr	r3, [r7, #4]
 2162 0b2c 0B33     		adds	r3, r3, #11
 2163 0b2e 7A68     		ldr	r2, [r7, #4]
 2164 0b30 0732     		adds	r2, r2, #7
 2165 0b32 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2166 0b34 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2167 0b36 1201     		lsls	r2, r2, #4
 2168 0b38 0732     		adds	r2, r2, #7
 2169 0b3a 3868     		ldr	r0, [r7]
 2170 0b3c 0244     		add	r2, r2, r0
 2171 0b3e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2172 0b40 4A40     		eors	r2, r2, r1
 2173 0b42 D2B2     		uxtb	r2, r2
 2174 0b44 1146     		mov	r1, r2
 2175 0b46 314A     		ldr	r2, .L17
 2176 0b48 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 2177 0b4a 1A70     		strb	r2, [r3]
 193:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[7] = sbox[(state[3] ^ expandedKey[(round * 16) + 3])];
 2178              		.loc 1 193 0
 2179 0b4c 7B68     		ldr	r3, [r7, #4]
 2180 0b4e 0733     		adds	r3, r3, #7
 2181 0b50 7A68     		ldr	r2, [r7, #4]
 2182 0b52 0332     		adds	r2, r2, #3
 2183 0b54 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2184 0b56 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2185 0b58 1201     		lsls	r2, r2, #4
 2186 0b5a 0332     		adds	r2, r2, #3
 2187 0b5c 3868     		ldr	r0, [r7]
 2188 0b5e 0244     		add	r2, r2, r0
 2189 0b60 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2190 0b62 4A40     		eors	r2, r2, r1
 2191 0b64 D2B2     		uxtb	r2, r2
 2192 0b66 1146     		mov	r1, r2
 2193 0b68 284A     		ldr	r2, .L17
 2194 0b6a 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 2195 0b6c 1A70     		strb	r2, [r3]
 194:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[3] = sbox[buf1];
 2196              		.loc 1 194 0
 2197 0b6e 7B68     		ldr	r3, [r7, #4]
 2198 0b70 0333     		adds	r3, r3, #3
 2199 0b72 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 2200 0b74 2549     		ldr	r1, .L17
 2201 0b76 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2202 0b78 1A70     		strb	r2, [r3]
 195:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // last addroundkey
 196:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[0] ^= expandedKey[160];
 2203              		.loc 1 196 0
 2204 0b7a 7B68     		ldr	r3, [r7, #4]
 2205 0b7c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2206 0b7e 3B68     		ldr	r3, [r7]
 2207 0b80 A033     		adds	r3, r3, #160
 2208 0b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 0b84 5340     		eors	r3, r3, r2
 2210 0b86 DAB2     		uxtb	r2, r3
 2211 0b88 7B68     		ldr	r3, [r7, #4]
 2212 0b8a 1A70     		strb	r2, [r3]
 197:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[1] ^= expandedKey[161];
 2213              		.loc 1 197 0
 2214 0b8c 7B68     		ldr	r3, [r7, #4]
 2215 0b8e 0133     		adds	r3, r3, #1
 2216 0b90 7A68     		ldr	r2, [r7, #4]
 2217 0b92 0132     		adds	r2, r2, #1
 2218 0b94 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2219 0b96 3A68     		ldr	r2, [r7]
 2220 0b98 A132     		adds	r2, r2, #161
 2221 0b9a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2222 0b9c 4A40     		eors	r2, r2, r1
 2223 0b9e D2B2     		uxtb	r2, r2
 2224 0ba0 1A70     		strb	r2, [r3]
 198:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[2] ^= expandedKey[162];
 2225              		.loc 1 198 0
 2226 0ba2 7B68     		ldr	r3, [r7, #4]
 2227 0ba4 0233     		adds	r3, r3, #2
 2228 0ba6 7A68     		ldr	r2, [r7, #4]
 2229 0ba8 0232     		adds	r2, r2, #2
 2230 0baa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2231 0bac 3A68     		ldr	r2, [r7]
 2232 0bae A232     		adds	r2, r2, #162
 2233 0bb0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2234 0bb2 4A40     		eors	r2, r2, r1
 2235 0bb4 D2B2     		uxtb	r2, r2
 2236 0bb6 1A70     		strb	r2, [r3]
 199:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[3] ^= expandedKey[163];
 2237              		.loc 1 199 0
 2238 0bb8 7B68     		ldr	r3, [r7, #4]
 2239 0bba 0333     		adds	r3, r3, #3
 2240 0bbc 7A68     		ldr	r2, [r7, #4]
 2241 0bbe 0332     		adds	r2, r2, #3
 2242 0bc0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2243 0bc2 3A68     		ldr	r2, [r7]
 2244 0bc4 A332     		adds	r2, r2, #163
 2245 0bc6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2246 0bc8 4A40     		eors	r2, r2, r1
 2247 0bca D2B2     		uxtb	r2, r2
 2248 0bcc 1A70     		strb	r2, [r3]
 200:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[4] ^= expandedKey[164];
 2249              		.loc 1 200 0
 2250 0bce 7B68     		ldr	r3, [r7, #4]
 2251 0bd0 0433     		adds	r3, r3, #4
 2252 0bd2 7A68     		ldr	r2, [r7, #4]
 2253 0bd4 0432     		adds	r2, r2, #4
 2254 0bd6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2255 0bd8 3A68     		ldr	r2, [r7]
 2256 0bda A432     		adds	r2, r2, #164
 2257 0bdc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2258 0bde 4A40     		eors	r2, r2, r1
 2259 0be0 D2B2     		uxtb	r2, r2
 2260 0be2 1A70     		strb	r2, [r3]
 201:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[5] ^= expandedKey[165];
 2261              		.loc 1 201 0
 2262 0be4 7B68     		ldr	r3, [r7, #4]
 2263 0be6 0533     		adds	r3, r3, #5
 2264 0be8 7A68     		ldr	r2, [r7, #4]
 2265 0bea 0532     		adds	r2, r2, #5
 2266 0bec 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2267 0bee 3A68     		ldr	r2, [r7]
 2268 0bf0 A532     		adds	r2, r2, #165
 2269 0bf2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2270 0bf4 4A40     		eors	r2, r2, r1
 2271 0bf6 D2B2     		uxtb	r2, r2
 2272 0bf8 1A70     		strb	r2, [r3]
 202:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[6] ^= expandedKey[166];
 2273              		.loc 1 202 0
 2274 0bfa 7B68     		ldr	r3, [r7, #4]
 2275 0bfc 0633     		adds	r3, r3, #6
 2276 0bfe 7A68     		ldr	r2, [r7, #4]
 2277 0c00 0632     		adds	r2, r2, #6
 2278 0c02 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2279 0c04 3A68     		ldr	r2, [r7]
 2280 0c06 A632     		adds	r2, r2, #166
 2281 0c08 02E0     		b	.L18
 2282              	.L19:
 2283 0c0a 00BF     		.align	2
 2284              	.L17:
 2285 0c0c 00000000 		.word	sbox
 2286              	.L18:
 2287 0c10 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2288 0c12 4A40     		eors	r2, r2, r1
 2289 0c14 D2B2     		uxtb	r2, r2
 2290 0c16 1A70     		strb	r2, [r3]
 203:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[7] ^= expandedKey[167];
 2291              		.loc 1 203 0
 2292 0c18 7B68     		ldr	r3, [r7, #4]
 2293 0c1a 0733     		adds	r3, r3, #7
 2294 0c1c 7A68     		ldr	r2, [r7, #4]
 2295 0c1e 0732     		adds	r2, r2, #7
 2296 0c20 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2297 0c22 3A68     		ldr	r2, [r7]
 2298 0c24 A732     		adds	r2, r2, #167
 2299 0c26 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2300 0c28 4A40     		eors	r2, r2, r1
 2301 0c2a D2B2     		uxtb	r2, r2
 2302 0c2c 1A70     		strb	r2, [r3]
 204:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[8] ^= expandedKey[168];
 2303              		.loc 1 204 0
 2304 0c2e 7B68     		ldr	r3, [r7, #4]
 2305 0c30 0833     		adds	r3, r3, #8
 2306 0c32 7A68     		ldr	r2, [r7, #4]
 2307 0c34 0832     		adds	r2, r2, #8
 2308 0c36 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2309 0c38 3A68     		ldr	r2, [r7]
 2310 0c3a A832     		adds	r2, r2, #168
 2311 0c3c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2312 0c3e 4A40     		eors	r2, r2, r1
 2313 0c40 D2B2     		uxtb	r2, r2
 2314 0c42 1A70     		strb	r2, [r3]
 205:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[9] ^= expandedKey[169];
 2315              		.loc 1 205 0
 2316 0c44 7B68     		ldr	r3, [r7, #4]
 2317 0c46 0933     		adds	r3, r3, #9
 2318 0c48 7A68     		ldr	r2, [r7, #4]
 2319 0c4a 0932     		adds	r2, r2, #9
 2320 0c4c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2321 0c4e 3A68     		ldr	r2, [r7]
 2322 0c50 A932     		adds	r2, r2, #169
 2323 0c52 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2324 0c54 4A40     		eors	r2, r2, r1
 2325 0c56 D2B2     		uxtb	r2, r2
 2326 0c58 1A70     		strb	r2, [r3]
 206:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[10] ^= expandedKey[170];
 2327              		.loc 1 206 0
 2328 0c5a 7B68     		ldr	r3, [r7, #4]
 2329 0c5c 0A33     		adds	r3, r3, #10
 2330 0c5e 7A68     		ldr	r2, [r7, #4]
 2331 0c60 0A32     		adds	r2, r2, #10
 2332 0c62 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2333 0c64 3A68     		ldr	r2, [r7]
 2334 0c66 AA32     		adds	r2, r2, #170
 2335 0c68 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2336 0c6a 4A40     		eors	r2, r2, r1
 2337 0c6c D2B2     		uxtb	r2, r2
 2338 0c6e 1A70     		strb	r2, [r3]
 207:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[11] ^= expandedKey[171];
 2339              		.loc 1 207 0
 2340 0c70 7B68     		ldr	r3, [r7, #4]
 2341 0c72 0B33     		adds	r3, r3, #11
 2342 0c74 7A68     		ldr	r2, [r7, #4]
 2343 0c76 0B32     		adds	r2, r2, #11
 2344 0c78 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2345 0c7a 3A68     		ldr	r2, [r7]
 2346 0c7c AB32     		adds	r2, r2, #171
 2347 0c7e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2348 0c80 4A40     		eors	r2, r2, r1
 2349 0c82 D2B2     		uxtb	r2, r2
 2350 0c84 1A70     		strb	r2, [r3]
 208:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[12] ^= expandedKey[172];
 2351              		.loc 1 208 0
 2352 0c86 7B68     		ldr	r3, [r7, #4]
 2353 0c88 0C33     		adds	r3, r3, #12
 2354 0c8a 7A68     		ldr	r2, [r7, #4]
 2355 0c8c 0C32     		adds	r2, r2, #12
 2356 0c8e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2357 0c90 3A68     		ldr	r2, [r7]
 2358 0c92 AC32     		adds	r2, r2, #172
 2359 0c94 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2360 0c96 4A40     		eors	r2, r2, r1
 2361 0c98 D2B2     		uxtb	r2, r2
 2362 0c9a 1A70     		strb	r2, [r3]
 209:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[13] ^= expandedKey[173];
 2363              		.loc 1 209 0
 2364 0c9c 7B68     		ldr	r3, [r7, #4]
 2365 0c9e 0D33     		adds	r3, r3, #13
 2366 0ca0 7A68     		ldr	r2, [r7, #4]
 2367 0ca2 0D32     		adds	r2, r2, #13
 2368 0ca4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2369 0ca6 3A68     		ldr	r2, [r7]
 2370 0ca8 AD32     		adds	r2, r2, #173
 2371 0caa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2372 0cac 4A40     		eors	r2, r2, r1
 2373 0cae D2B2     		uxtb	r2, r2
 2374 0cb0 1A70     		strb	r2, [r3]
 210:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[14] ^= expandedKey[174];
 2375              		.loc 1 210 0
 2376 0cb2 7B68     		ldr	r3, [r7, #4]
 2377 0cb4 0E33     		adds	r3, r3, #14
 2378 0cb6 7A68     		ldr	r2, [r7, #4]
 2379 0cb8 0E32     		adds	r2, r2, #14
 2380 0cba 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2381 0cbc 3A68     		ldr	r2, [r7]
 2382 0cbe AE32     		adds	r2, r2, #174
 2383 0cc0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2384 0cc2 4A40     		eors	r2, r2, r1
 2385 0cc4 D2B2     		uxtb	r2, r2
 2386 0cc6 1A70     		strb	r2, [r3]
 211:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[15] ^= expandedKey[175];
 2387              		.loc 1 211 0
 2388 0cc8 7B68     		ldr	r3, [r7, #4]
 2389 0cca 0F33     		adds	r3, r3, #15
 2390 0ccc 7A68     		ldr	r2, [r7, #4]
 2391 0cce 0F32     		adds	r2, r2, #15
 2392 0cd0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2393 0cd2 3A68     		ldr	r2, [r7]
 2394 0cd4 AF32     		adds	r2, r2, #175
 2395 0cd6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2396 0cd8 4A40     		eors	r2, r2, r1
 2397 0cda D2B2     		uxtb	r2, r2
 2398 0cdc 1A70     		strb	r2, [r3]
 212:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** }
 2399              		.loc 1 212 0
 2400 0cde 1037     		adds	r7, r7, #16
 2401              		.cfi_def_cfa_offset 8
 2402 0ce0 BD46     		mov	sp, r7
 2403              		.cfi_def_cfa_register 13
 2404              		@ sp needed
 2405 0ce2 80BD     		pop	{r7, pc}
 2406              		.cfi_endproc
 2407              	.LFE2:
 2409              		.align	2
 2410              		.global	aes_decr
 2411              		.thumb
 2412              		.thumb_func
 2414              	aes_decr:
 2415              	.LFB3:
 213:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 214:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** // straight foreward aes decryption implementation
 215:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   the order of substeps is the exact reverse of decryption
 216:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   inverse functions:
 217:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //       - addRoundKey is its own inverse
 218:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //       - rsbox is inverse of sbox
 219:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //       - rightshift instead of leftshift
 220:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //       - invMixColumns = barreto + mixColumns
 221:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   no further subfunctions to save cycles for function calls
 222:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** //   no structuring with "for (....)" to save cycles
 223:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** void aes_decr(unsigned char *state, unsigned char *expandedKey)
 224:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** {
 2416              		.loc 1 224 0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 16
 2419              		@ frame_needed = 1, uses_anonymous_args = 0
 2420 0ce4 80B5     		push	{r7, lr}
 2421              		.cfi_def_cfa_offset 8
 2422              		.cfi_offset 7, -8
 2423              		.cfi_offset 14, -4
 2424 0ce6 84B0     		sub	sp, sp, #16
 2425              		.cfi_def_cfa_offset 24
 2426 0ce8 00AF     		add	r7, sp, #0
 2427              		.cfi_def_cfa_register 7
 2428 0cea 7860     		str	r0, [r7, #4]
 2429 0cec 3960     		str	r1, [r7]
 225:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     unsigned char buf1, buf2, buf3;
 226:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     signed char round;
 227:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     round = 9;
 2430              		.loc 1 227 0
 2431 0cee 0923     		movs	r3, #9
 2432 0cf0 FB73     		strb	r3, [r7, #15]
 228:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 229:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // initial addroundkey
 230:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[0] ^= expandedKey[160];
 2433              		.loc 1 230 0
 2434 0cf2 7B68     		ldr	r3, [r7, #4]
 2435 0cf4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2436 0cf6 3B68     		ldr	r3, [r7]
 2437 0cf8 A033     		adds	r3, r3, #160
 2438 0cfa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2439 0cfc 5340     		eors	r3, r3, r2
 2440 0cfe DAB2     		uxtb	r2, r3
 2441 0d00 7B68     		ldr	r3, [r7, #4]
 2442 0d02 1A70     		strb	r2, [r3]
 231:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[1] ^= expandedKey[161];
 2443              		.loc 1 231 0
 2444 0d04 7B68     		ldr	r3, [r7, #4]
 2445 0d06 0133     		adds	r3, r3, #1
 2446 0d08 7A68     		ldr	r2, [r7, #4]
 2447 0d0a 0132     		adds	r2, r2, #1
 2448 0d0c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2449 0d0e 3A68     		ldr	r2, [r7]
 2450 0d10 A132     		adds	r2, r2, #161
 2451 0d12 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2452 0d14 4A40     		eors	r2, r2, r1
 2453 0d16 D2B2     		uxtb	r2, r2
 2454 0d18 1A70     		strb	r2, [r3]
 232:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[2] ^= expandedKey[162];
 2455              		.loc 1 232 0
 2456 0d1a 7B68     		ldr	r3, [r7, #4]
 2457 0d1c 0233     		adds	r3, r3, #2
 2458 0d1e 7A68     		ldr	r2, [r7, #4]
 2459 0d20 0232     		adds	r2, r2, #2
 2460 0d22 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2461 0d24 3A68     		ldr	r2, [r7]
 2462 0d26 A232     		adds	r2, r2, #162
 2463 0d28 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2464 0d2a 4A40     		eors	r2, r2, r1
 2465 0d2c D2B2     		uxtb	r2, r2
 2466 0d2e 1A70     		strb	r2, [r3]
 233:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[3] ^= expandedKey[163];
 2467              		.loc 1 233 0
 2468 0d30 7B68     		ldr	r3, [r7, #4]
 2469 0d32 0333     		adds	r3, r3, #3
 2470 0d34 7A68     		ldr	r2, [r7, #4]
 2471 0d36 0332     		adds	r2, r2, #3
 2472 0d38 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2473 0d3a 3A68     		ldr	r2, [r7]
 2474 0d3c A332     		adds	r2, r2, #163
 2475 0d3e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2476 0d40 4A40     		eors	r2, r2, r1
 2477 0d42 D2B2     		uxtb	r2, r2
 2478 0d44 1A70     		strb	r2, [r3]
 234:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[4] ^= expandedKey[164];
 2479              		.loc 1 234 0
 2480 0d46 7B68     		ldr	r3, [r7, #4]
 2481 0d48 0433     		adds	r3, r3, #4
 2482 0d4a 7A68     		ldr	r2, [r7, #4]
 2483 0d4c 0432     		adds	r2, r2, #4
 2484 0d4e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2485 0d50 3A68     		ldr	r2, [r7]
 2486 0d52 A432     		adds	r2, r2, #164
 2487 0d54 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2488 0d56 4A40     		eors	r2, r2, r1
 2489 0d58 D2B2     		uxtb	r2, r2
 2490 0d5a 1A70     		strb	r2, [r3]
 235:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[5] ^= expandedKey[165];
 2491              		.loc 1 235 0
 2492 0d5c 7B68     		ldr	r3, [r7, #4]
 2493 0d5e 0533     		adds	r3, r3, #5
 2494 0d60 7A68     		ldr	r2, [r7, #4]
 2495 0d62 0532     		adds	r2, r2, #5
 2496 0d64 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2497 0d66 3A68     		ldr	r2, [r7]
 2498 0d68 A532     		adds	r2, r2, #165
 2499 0d6a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2500 0d6c 4A40     		eors	r2, r2, r1
 2501 0d6e D2B2     		uxtb	r2, r2
 2502 0d70 1A70     		strb	r2, [r3]
 236:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[6] ^= expandedKey[166];
 2503              		.loc 1 236 0
 2504 0d72 7B68     		ldr	r3, [r7, #4]
 2505 0d74 0633     		adds	r3, r3, #6
 2506 0d76 7A68     		ldr	r2, [r7, #4]
 2507 0d78 0632     		adds	r2, r2, #6
 2508 0d7a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2509 0d7c 3A68     		ldr	r2, [r7]
 2510 0d7e A632     		adds	r2, r2, #166
 2511 0d80 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2512 0d82 4A40     		eors	r2, r2, r1
 2513 0d84 D2B2     		uxtb	r2, r2
 2514 0d86 1A70     		strb	r2, [r3]
 237:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[7] ^= expandedKey[167];
 2515              		.loc 1 237 0
 2516 0d88 7B68     		ldr	r3, [r7, #4]
 2517 0d8a 0733     		adds	r3, r3, #7
 2518 0d8c 7A68     		ldr	r2, [r7, #4]
 2519 0d8e 0732     		adds	r2, r2, #7
 2520 0d90 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2521 0d92 3A68     		ldr	r2, [r7]
 2522 0d94 A732     		adds	r2, r2, #167
 2523 0d96 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2524 0d98 4A40     		eors	r2, r2, r1
 2525 0d9a D2B2     		uxtb	r2, r2
 2526 0d9c 1A70     		strb	r2, [r3]
 238:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[8] ^= expandedKey[168];
 2527              		.loc 1 238 0
 2528 0d9e 7B68     		ldr	r3, [r7, #4]
 2529 0da0 0833     		adds	r3, r3, #8
 2530 0da2 7A68     		ldr	r2, [r7, #4]
 2531 0da4 0832     		adds	r2, r2, #8
 2532 0da6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2533 0da8 3A68     		ldr	r2, [r7]
 2534 0daa A832     		adds	r2, r2, #168
 2535 0dac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2536 0dae 4A40     		eors	r2, r2, r1
 2537 0db0 D2B2     		uxtb	r2, r2
 2538 0db2 1A70     		strb	r2, [r3]
 239:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[9] ^= expandedKey[169];
 2539              		.loc 1 239 0
 2540 0db4 7B68     		ldr	r3, [r7, #4]
 2541 0db6 0933     		adds	r3, r3, #9
 2542 0db8 7A68     		ldr	r2, [r7, #4]
 2543 0dba 0932     		adds	r2, r2, #9
 2544 0dbc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2545 0dbe 3A68     		ldr	r2, [r7]
 2546 0dc0 A932     		adds	r2, r2, #169
 2547 0dc2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2548 0dc4 4A40     		eors	r2, r2, r1
 2549 0dc6 D2B2     		uxtb	r2, r2
 2550 0dc8 1A70     		strb	r2, [r3]
 240:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[10] ^= expandedKey[170];
 2551              		.loc 1 240 0
 2552 0dca 7B68     		ldr	r3, [r7, #4]
 2553 0dcc 0A33     		adds	r3, r3, #10
 2554 0dce 7A68     		ldr	r2, [r7, #4]
 2555 0dd0 0A32     		adds	r2, r2, #10
 2556 0dd2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2557 0dd4 3A68     		ldr	r2, [r7]
 2558 0dd6 AA32     		adds	r2, r2, #170
 2559 0dd8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2560 0dda 4A40     		eors	r2, r2, r1
 2561 0ddc D2B2     		uxtb	r2, r2
 2562 0dde 1A70     		strb	r2, [r3]
 241:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[11] ^= expandedKey[171];
 2563              		.loc 1 241 0
 2564 0de0 7B68     		ldr	r3, [r7, #4]
 2565 0de2 0B33     		adds	r3, r3, #11
 2566 0de4 7A68     		ldr	r2, [r7, #4]
 2567 0de6 0B32     		adds	r2, r2, #11
 2568 0de8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2569 0dea 3A68     		ldr	r2, [r7]
 2570 0dec AB32     		adds	r2, r2, #171
 2571 0dee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2572 0df0 4A40     		eors	r2, r2, r1
 2573 0df2 D2B2     		uxtb	r2, r2
 2574 0df4 1A70     		strb	r2, [r3]
 242:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[12] ^= expandedKey[172];
 2575              		.loc 1 242 0
 2576 0df6 7B68     		ldr	r3, [r7, #4]
 2577 0df8 0C33     		adds	r3, r3, #12
 2578 0dfa 7A68     		ldr	r2, [r7, #4]
 2579 0dfc 0C32     		adds	r2, r2, #12
 2580 0dfe 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2581 0e00 3A68     		ldr	r2, [r7]
 2582 0e02 AC32     		adds	r2, r2, #172
 2583 0e04 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2584 0e06 4A40     		eors	r2, r2, r1
 2585 0e08 D2B2     		uxtb	r2, r2
 2586 0e0a 1A70     		strb	r2, [r3]
 243:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[13] ^= expandedKey[173];
 2587              		.loc 1 243 0
 2588 0e0c 7B68     		ldr	r3, [r7, #4]
 2589 0e0e 0D33     		adds	r3, r3, #13
 2590 0e10 7A68     		ldr	r2, [r7, #4]
 2591 0e12 0D32     		adds	r2, r2, #13
 2592 0e14 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2593 0e16 3A68     		ldr	r2, [r7]
 2594 0e18 AD32     		adds	r2, r2, #173
 2595 0e1a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2596 0e1c 4A40     		eors	r2, r2, r1
 2597 0e1e D2B2     		uxtb	r2, r2
 2598 0e20 1A70     		strb	r2, [r3]
 244:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[14] ^= expandedKey[174];
 2599              		.loc 1 244 0
 2600 0e22 7B68     		ldr	r3, [r7, #4]
 2601 0e24 0E33     		adds	r3, r3, #14
 2602 0e26 7A68     		ldr	r2, [r7, #4]
 2603 0e28 0E32     		adds	r2, r2, #14
 2604 0e2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2605 0e2c 3A68     		ldr	r2, [r7]
 2606 0e2e AE32     		adds	r2, r2, #174
 2607 0e30 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2608 0e32 4A40     		eors	r2, r2, r1
 2609 0e34 D2B2     		uxtb	r2, r2
 2610 0e36 1A70     		strb	r2, [r3]
 245:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[15] ^= expandedKey[175];
 2611              		.loc 1 245 0
 2612 0e38 7B68     		ldr	r3, [r7, #4]
 2613 0e3a 0F33     		adds	r3, r3, #15
 2614 0e3c 7A68     		ldr	r2, [r7, #4]
 2615 0e3e 0F32     		adds	r2, r2, #15
 2616 0e40 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2617 0e42 3A68     		ldr	r2, [r7]
 2618 0e44 AF32     		adds	r2, r2, #175
 2619 0e46 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2620 0e48 4A40     		eors	r2, r2, r1
 2621 0e4a D2B2     		uxtb	r2, r2
 2622 0e4c 1A70     		strb	r2, [r3]
 246:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 247:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // 10th round without mixcols
 248:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[0] = rsbox[state[0]] ^ expandedKey[(round * 16)];
 2623              		.loc 1 248 0
 2624 0e4e 7B68     		ldr	r3, [r7, #4]
 2625 0e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2626 0e52 1A46     		mov	r2, r3
 2627 0e54 914B     		ldr	r3, .L23
 2628 0e56 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2629 0e58 97F90F30 		ldrsb	r3, [r7, #15]
 2630 0e5c 1B01     		lsls	r3, r3, #4
 2631 0e5e 1946     		mov	r1, r3
 2632 0e60 3B68     		ldr	r3, [r7]
 2633 0e62 0B44     		add	r3, r3, r1
 2634 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2635 0e66 5340     		eors	r3, r3, r2
 2636 0e68 DAB2     		uxtb	r2, r3
 2637 0e6a 7B68     		ldr	r3, [r7, #4]
 2638 0e6c 1A70     		strb	r2, [r3]
 249:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[4] = rsbox[state[4]] ^ expandedKey[(round * 16) + 4];
 2639              		.loc 1 249 0
 2640 0e6e 7B68     		ldr	r3, [r7, #4]
 2641 0e70 0433     		adds	r3, r3, #4
 2642 0e72 7A68     		ldr	r2, [r7, #4]
 2643 0e74 0432     		adds	r2, r2, #4
 2644 0e76 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2645 0e78 1146     		mov	r1, r2
 2646 0e7a 884A     		ldr	r2, .L23
 2647 0e7c 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2648 0e7e 97F90F20 		ldrsb	r2, [r7, #15]
 2649 0e82 1201     		lsls	r2, r2, #4
 2650 0e84 0432     		adds	r2, r2, #4
 2651 0e86 3868     		ldr	r0, [r7]
 2652 0e88 0244     		add	r2, r2, r0
 2653 0e8a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2654 0e8c 4A40     		eors	r2, r2, r1
 2655 0e8e D2B2     		uxtb	r2, r2
 2656 0e90 1A70     		strb	r2, [r3]
 250:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[8] = rsbox[state[8]] ^ expandedKey[(round * 16) + 8];
 2657              		.loc 1 250 0
 2658 0e92 7B68     		ldr	r3, [r7, #4]
 2659 0e94 0833     		adds	r3, r3, #8
 2660 0e96 7A68     		ldr	r2, [r7, #4]
 2661 0e98 0832     		adds	r2, r2, #8
 2662 0e9a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2663 0e9c 1146     		mov	r1, r2
 2664 0e9e 7F4A     		ldr	r2, .L23
 2665 0ea0 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2666 0ea2 97F90F20 		ldrsb	r2, [r7, #15]
 2667 0ea6 1201     		lsls	r2, r2, #4
 2668 0ea8 0832     		adds	r2, r2, #8
 2669 0eaa 3868     		ldr	r0, [r7]
 2670 0eac 0244     		add	r2, r2, r0
 2671 0eae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2672 0eb0 4A40     		eors	r2, r2, r1
 2673 0eb2 D2B2     		uxtb	r2, r2
 2674 0eb4 1A70     		strb	r2, [r3]
 251:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[12] = rsbox[state[12]] ^ expandedKey[(round * 16) + 12];
 2675              		.loc 1 251 0
 2676 0eb6 7B68     		ldr	r3, [r7, #4]
 2677 0eb8 0C33     		adds	r3, r3, #12
 2678 0eba 7A68     		ldr	r2, [r7, #4]
 2679 0ebc 0C32     		adds	r2, r2, #12
 2680 0ebe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2681 0ec0 1146     		mov	r1, r2
 2682 0ec2 764A     		ldr	r2, .L23
 2683 0ec4 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2684 0ec6 97F90F20 		ldrsb	r2, [r7, #15]
 2685 0eca 1201     		lsls	r2, r2, #4
 2686 0ecc 0C32     		adds	r2, r2, #12
 2687 0ece 3868     		ldr	r0, [r7]
 2688 0ed0 0244     		add	r2, r2, r0
 2689 0ed2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2690 0ed4 4A40     		eors	r2, r2, r1
 2691 0ed6 D2B2     		uxtb	r2, r2
 2692 0ed8 1A70     		strb	r2, [r3]
 252:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // row 1
 253:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     buf1 = rsbox[state[13]] ^ expandedKey[(round * 16) + 1];
 2693              		.loc 1 253 0
 2694 0eda 7B68     		ldr	r3, [r7, #4]
 2695 0edc 0D33     		adds	r3, r3, #13
 2696 0ede 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2697 0ee0 1A46     		mov	r2, r3
 2698 0ee2 6E4B     		ldr	r3, .L23
 2699 0ee4 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2700 0ee6 97F90F30 		ldrsb	r3, [r7, #15]
 2701 0eea 1B01     		lsls	r3, r3, #4
 2702 0eec 0133     		adds	r3, r3, #1
 2703 0eee 3968     		ldr	r1, [r7]
 2704 0ef0 0B44     		add	r3, r3, r1
 2705 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2706 0ef4 5340     		eors	r3, r3, r2
 2707 0ef6 BB73     		strb	r3, [r7, #14]
 254:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[13] = rsbox[state[9]] ^ expandedKey[(round * 16) + 13];
 2708              		.loc 1 254 0
 2709 0ef8 7B68     		ldr	r3, [r7, #4]
 2710 0efa 0D33     		adds	r3, r3, #13
 2711 0efc 7A68     		ldr	r2, [r7, #4]
 2712 0efe 0932     		adds	r2, r2, #9
 2713 0f00 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2714 0f02 1146     		mov	r1, r2
 2715 0f04 654A     		ldr	r2, .L23
 2716 0f06 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2717 0f08 97F90F20 		ldrsb	r2, [r7, #15]
 2718 0f0c 1201     		lsls	r2, r2, #4
 2719 0f0e 0D32     		adds	r2, r2, #13
 2720 0f10 3868     		ldr	r0, [r7]
 2721 0f12 0244     		add	r2, r2, r0
 2722 0f14 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2723 0f16 4A40     		eors	r2, r2, r1
 2724 0f18 D2B2     		uxtb	r2, r2
 2725 0f1a 1A70     		strb	r2, [r3]
 255:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[9] = rsbox[state[5]] ^ expandedKey[(round * 16) + 9];
 2726              		.loc 1 255 0
 2727 0f1c 7B68     		ldr	r3, [r7, #4]
 2728 0f1e 0933     		adds	r3, r3, #9
 2729 0f20 7A68     		ldr	r2, [r7, #4]
 2730 0f22 0532     		adds	r2, r2, #5
 2731 0f24 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2732 0f26 1146     		mov	r1, r2
 2733 0f28 5C4A     		ldr	r2, .L23
 2734 0f2a 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2735 0f2c 97F90F20 		ldrsb	r2, [r7, #15]
 2736 0f30 1201     		lsls	r2, r2, #4
 2737 0f32 0932     		adds	r2, r2, #9
 2738 0f34 3868     		ldr	r0, [r7]
 2739 0f36 0244     		add	r2, r2, r0
 2740 0f38 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2741 0f3a 4A40     		eors	r2, r2, r1
 2742 0f3c D2B2     		uxtb	r2, r2
 2743 0f3e 1A70     		strb	r2, [r3]
 256:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[5] = rsbox[state[1]] ^ expandedKey[(round * 16) + 5];
 2744              		.loc 1 256 0
 2745 0f40 7B68     		ldr	r3, [r7, #4]
 2746 0f42 0533     		adds	r3, r3, #5
 2747 0f44 7A68     		ldr	r2, [r7, #4]
 2748 0f46 0132     		adds	r2, r2, #1
 2749 0f48 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2750 0f4a 1146     		mov	r1, r2
 2751 0f4c 534A     		ldr	r2, .L23
 2752 0f4e 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2753 0f50 97F90F20 		ldrsb	r2, [r7, #15]
 2754 0f54 1201     		lsls	r2, r2, #4
 2755 0f56 0532     		adds	r2, r2, #5
 2756 0f58 3868     		ldr	r0, [r7]
 2757 0f5a 0244     		add	r2, r2, r0
 2758 0f5c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2759 0f5e 4A40     		eors	r2, r2, r1
 2760 0f60 D2B2     		uxtb	r2, r2
 2761 0f62 1A70     		strb	r2, [r3]
 257:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[1] = buf1;
 2762              		.loc 1 257 0
 2763 0f64 7B68     		ldr	r3, [r7, #4]
 2764 0f66 0133     		adds	r3, r3, #1
 2765 0f68 BA7B     		ldrb	r2, [r7, #14]
 2766 0f6a 1A70     		strb	r2, [r3]
 258:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // row 2
 259:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     buf1 = rsbox[state[2]] ^ expandedKey[(round * 16) + 10];
 2767              		.loc 1 259 0
 2768 0f6c 7B68     		ldr	r3, [r7, #4]
 2769 0f6e 0233     		adds	r3, r3, #2
 2770 0f70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2771 0f72 1A46     		mov	r2, r3
 2772 0f74 494B     		ldr	r3, .L23
 2773 0f76 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2774 0f78 97F90F30 		ldrsb	r3, [r7, #15]
 2775 0f7c 1B01     		lsls	r3, r3, #4
 2776 0f7e 0A33     		adds	r3, r3, #10
 2777 0f80 3968     		ldr	r1, [r7]
 2778 0f82 0B44     		add	r3, r3, r1
 2779 0f84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2780 0f86 5340     		eors	r3, r3, r2
 2781 0f88 BB73     		strb	r3, [r7, #14]
 260:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     buf2 = rsbox[state[6]] ^ expandedKey[(round * 16) + 14];
 2782              		.loc 1 260 0
 2783 0f8a 7B68     		ldr	r3, [r7, #4]
 2784 0f8c 0633     		adds	r3, r3, #6
 2785 0f8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2786 0f90 1A46     		mov	r2, r3
 2787 0f92 424B     		ldr	r3, .L23
 2788 0f94 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2789 0f96 97F90F30 		ldrsb	r3, [r7, #15]
 2790 0f9a 1B01     		lsls	r3, r3, #4
 2791 0f9c 0E33     		adds	r3, r3, #14
 2792 0f9e 3968     		ldr	r1, [r7]
 2793 0fa0 0B44     		add	r3, r3, r1
 2794 0fa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2795 0fa4 5340     		eors	r3, r3, r2
 2796 0fa6 7B73     		strb	r3, [r7, #13]
 261:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[2] = rsbox[state[10]] ^ expandedKey[(round * 16) + 2];
 2797              		.loc 1 261 0
 2798 0fa8 7B68     		ldr	r3, [r7, #4]
 2799 0faa 0233     		adds	r3, r3, #2
 2800 0fac 7A68     		ldr	r2, [r7, #4]
 2801 0fae 0A32     		adds	r2, r2, #10
 2802 0fb0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2803 0fb2 1146     		mov	r1, r2
 2804 0fb4 394A     		ldr	r2, .L23
 2805 0fb6 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2806 0fb8 97F90F20 		ldrsb	r2, [r7, #15]
 2807 0fbc 1201     		lsls	r2, r2, #4
 2808 0fbe 0232     		adds	r2, r2, #2
 2809 0fc0 3868     		ldr	r0, [r7]
 2810 0fc2 0244     		add	r2, r2, r0
 2811 0fc4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2812 0fc6 4A40     		eors	r2, r2, r1
 2813 0fc8 D2B2     		uxtb	r2, r2
 2814 0fca 1A70     		strb	r2, [r3]
 262:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[6] = rsbox[state[14]] ^ expandedKey[(round * 16) + 6];
 2815              		.loc 1 262 0
 2816 0fcc 7B68     		ldr	r3, [r7, #4]
 2817 0fce 0633     		adds	r3, r3, #6
 2818 0fd0 7A68     		ldr	r2, [r7, #4]
 2819 0fd2 0E32     		adds	r2, r2, #14
 2820 0fd4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2821 0fd6 1146     		mov	r1, r2
 2822 0fd8 304A     		ldr	r2, .L23
 2823 0fda 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2824 0fdc 97F90F20 		ldrsb	r2, [r7, #15]
 2825 0fe0 1201     		lsls	r2, r2, #4
 2826 0fe2 0632     		adds	r2, r2, #6
 2827 0fe4 3868     		ldr	r0, [r7]
 2828 0fe6 0244     		add	r2, r2, r0
 2829 0fe8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2830 0fea 4A40     		eors	r2, r2, r1
 2831 0fec D2B2     		uxtb	r2, r2
 2832 0fee 1A70     		strb	r2, [r3]
 263:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[10] = buf1;
 2833              		.loc 1 263 0
 2834 0ff0 7B68     		ldr	r3, [r7, #4]
 2835 0ff2 0A33     		adds	r3, r3, #10
 2836 0ff4 BA7B     		ldrb	r2, [r7, #14]
 2837 0ff6 1A70     		strb	r2, [r3]
 264:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[14] = buf2;
 2838              		.loc 1 264 0
 2839 0ff8 7B68     		ldr	r3, [r7, #4]
 2840 0ffa 0E33     		adds	r3, r3, #14
 2841 0ffc 7A7B     		ldrb	r2, [r7, #13]
 2842 0ffe 1A70     		strb	r2, [r3]
 265:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     // row 3
 266:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     buf1 = rsbox[state[3]] ^ expandedKey[(round * 16) + 15];
 2843              		.loc 1 266 0
 2844 1000 7B68     		ldr	r3, [r7, #4]
 2845 1002 0333     		adds	r3, r3, #3
 2846 1004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2847 1006 1A46     		mov	r2, r3
 2848 1008 244B     		ldr	r3, .L23
 2849 100a 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2850 100c 97F90F30 		ldrsb	r3, [r7, #15]
 2851 1010 1B01     		lsls	r3, r3, #4
 2852 1012 0F33     		adds	r3, r3, #15
 2853 1014 3968     		ldr	r1, [r7]
 2854 1016 0B44     		add	r3, r3, r1
 2855 1018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2856 101a 5340     		eors	r3, r3, r2
 2857 101c BB73     		strb	r3, [r7, #14]
 267:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[3] = rsbox[state[7]] ^ expandedKey[(round * 16) + 3];
 2858              		.loc 1 267 0
 2859 101e 7B68     		ldr	r3, [r7, #4]
 2860 1020 0333     		adds	r3, r3, #3
 2861 1022 7A68     		ldr	r2, [r7, #4]
 2862 1024 0732     		adds	r2, r2, #7
 2863 1026 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2864 1028 1146     		mov	r1, r2
 2865 102a 1C4A     		ldr	r2, .L23
 2866 102c 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2867 102e 97F90F20 		ldrsb	r2, [r7, #15]
 2868 1032 1201     		lsls	r2, r2, #4
 2869 1034 0332     		adds	r2, r2, #3
 2870 1036 3868     		ldr	r0, [r7]
 2871 1038 0244     		add	r2, r2, r0
 2872 103a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2873 103c 4A40     		eors	r2, r2, r1
 2874 103e D2B2     		uxtb	r2, r2
 2875 1040 1A70     		strb	r2, [r3]
 268:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[7] = rsbox[state[11]] ^ expandedKey[(round * 16) + 7];
 2876              		.loc 1 268 0
 2877 1042 7B68     		ldr	r3, [r7, #4]
 2878 1044 0733     		adds	r3, r3, #7
 2879 1046 7A68     		ldr	r2, [r7, #4]
 2880 1048 0B32     		adds	r2, r2, #11
 2881 104a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2882 104c 1146     		mov	r1, r2
 2883 104e 134A     		ldr	r2, .L23
 2884 1050 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2885 1052 97F90F20 		ldrsb	r2, [r7, #15]
 2886 1056 1201     		lsls	r2, r2, #4
 2887 1058 0732     		adds	r2, r2, #7
 2888 105a 3868     		ldr	r0, [r7]
 2889 105c 0244     		add	r2, r2, r0
 2890 105e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2891 1060 4A40     		eors	r2, r2, r1
 2892 1062 D2B2     		uxtb	r2, r2
 2893 1064 1A70     		strb	r2, [r3]
 269:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[11] = rsbox[state[15]] ^ expandedKey[(round * 16) + 11];
 2894              		.loc 1 269 0
 2895 1066 7B68     		ldr	r3, [r7, #4]
 2896 1068 0B33     		adds	r3, r3, #11
 2897 106a 7A68     		ldr	r2, [r7, #4]
 2898 106c 0F32     		adds	r2, r2, #15
 2899 106e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2900 1070 1146     		mov	r1, r2
 2901 1072 0A4A     		ldr	r2, .L23
 2902 1074 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 2903 1076 97F90F20 		ldrsb	r2, [r7, #15]
 2904 107a 1201     		lsls	r2, r2, #4
 2905 107c 0B32     		adds	r2, r2, #11
 2906 107e 3868     		ldr	r0, [r7]
 2907 1080 0244     		add	r2, r2, r0
 2908 1082 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2909 1084 4A40     		eors	r2, r2, r1
 2910 1086 D2B2     		uxtb	r2, r2
 2911 1088 1A70     		strb	r2, [r3]
 270:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     state[15] = buf1;
 2912              		.loc 1 270 0
 2913 108a 7B68     		ldr	r3, [r7, #4]
 2914 108c 0F33     		adds	r3, r3, #15
 2915 108e BA7B     		ldrb	r2, [r7, #14]
 2916 1090 1A70     		strb	r2, [r3]
 271:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 272:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     for (round = 8; round >= 0; round--){
 2917              		.loc 1 272 0
 2918 1092 0823     		movs	r3, #8
 2919 1094 FB73     		strb	r3, [r7, #15]
 2920 1096 00F027BC 		b	.L21
 2921              	.L24:
 2922 109a 00BF     		.align	2
 2923              	.L23:
 2924 109c 00000000 		.word	rsbox
 2925              	.L22:
 273:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // barreto
 274:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         //col1
 275:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = galois_mul2(galois_mul2(state[0] ^ state[2]));
 2926              		.loc 1 275 0 discriminator 3
 2927 10a0 7B68     		ldr	r3, [r7, #4]
 2928 10a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2929 10a4 7B68     		ldr	r3, [r7, #4]
 2930 10a6 0233     		adds	r3, r3, #2
 2931 10a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2932 10aa 5340     		eors	r3, r3, r2
 2933 10ac DBB2     		uxtb	r3, r3
 2934 10ae 1846     		mov	r0, r3
 2935 10b0 FFF7FEFF 		bl	galois_mul2
 2936 10b4 0346     		mov	r3, r0
 2937 10b6 1846     		mov	r0, r3
 2938 10b8 FFF7FEFF 		bl	galois_mul2
 2939 10bc 0346     		mov	r3, r0
 2940 10be BB73     		strb	r3, [r7, #14]
 276:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = galois_mul2(galois_mul2(state[1] ^ state[3]));
 2941              		.loc 1 276 0 discriminator 3
 2942 10c0 7B68     		ldr	r3, [r7, #4]
 2943 10c2 0133     		adds	r3, r3, #1
 2944 10c4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2945 10c6 7B68     		ldr	r3, [r7, #4]
 2946 10c8 0333     		adds	r3, r3, #3
 2947 10ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2948 10cc 5340     		eors	r3, r3, r2
 2949 10ce DBB2     		uxtb	r3, r3
 2950 10d0 1846     		mov	r0, r3
 2951 10d2 FFF7FEFF 		bl	galois_mul2
 2952 10d6 0346     		mov	r3, r0
 2953 10d8 1846     		mov	r0, r3
 2954 10da FFF7FEFF 		bl	galois_mul2
 2955 10de 0346     		mov	r3, r0
 2956 10e0 7B73     		strb	r3, [r7, #13]
 277:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[0] ^= buf1;     state[1] ^= buf2;    state[2] ^= buf1;    state[3] ^= buf2;
 2957              		.loc 1 277 0 discriminator 3
 2958 10e2 7B68     		ldr	r3, [r7, #4]
 2959 10e4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2960 10e6 BB7B     		ldrb	r3, [r7, #14]
 2961 10e8 5340     		eors	r3, r3, r2
 2962 10ea DAB2     		uxtb	r2, r3
 2963 10ec 7B68     		ldr	r3, [r7, #4]
 2964 10ee 1A70     		strb	r2, [r3]
 2965 10f0 7B68     		ldr	r3, [r7, #4]
 2966 10f2 0133     		adds	r3, r3, #1
 2967 10f4 7A68     		ldr	r2, [r7, #4]
 2968 10f6 0132     		adds	r2, r2, #1
 2969 10f8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2970 10fa 7A7B     		ldrb	r2, [r7, #13]
 2971 10fc 4A40     		eors	r2, r2, r1
 2972 10fe D2B2     		uxtb	r2, r2
 2973 1100 1A70     		strb	r2, [r3]
 2974 1102 7B68     		ldr	r3, [r7, #4]
 2975 1104 0233     		adds	r3, r3, #2
 2976 1106 7A68     		ldr	r2, [r7, #4]
 2977 1108 0232     		adds	r2, r2, #2
 2978 110a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2979 110c BA7B     		ldrb	r2, [r7, #14]
 2980 110e 4A40     		eors	r2, r2, r1
 2981 1110 D2B2     		uxtb	r2, r2
 2982 1112 1A70     		strb	r2, [r3]
 2983 1114 7B68     		ldr	r3, [r7, #4]
 2984 1116 0333     		adds	r3, r3, #3
 2985 1118 7A68     		ldr	r2, [r7, #4]
 2986 111a 0332     		adds	r2, r2, #3
 2987 111c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2988 111e 7A7B     		ldrb	r2, [r7, #13]
 2989 1120 4A40     		eors	r2, r2, r1
 2990 1122 D2B2     		uxtb	r2, r2
 2991 1124 1A70     		strb	r2, [r3]
 278:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         //col2
 279:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = galois_mul2(galois_mul2(state[4] ^ state[6]));
 2992              		.loc 1 279 0 discriminator 3
 2993 1126 7B68     		ldr	r3, [r7, #4]
 2994 1128 0433     		adds	r3, r3, #4
 2995 112a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2996 112c 7B68     		ldr	r3, [r7, #4]
 2997 112e 0633     		adds	r3, r3, #6
 2998 1130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2999 1132 5340     		eors	r3, r3, r2
 3000 1134 DBB2     		uxtb	r3, r3
 3001 1136 1846     		mov	r0, r3
 3002 1138 FFF7FEFF 		bl	galois_mul2
 3003 113c 0346     		mov	r3, r0
 3004 113e 1846     		mov	r0, r3
 3005 1140 FFF7FEFF 		bl	galois_mul2
 3006 1144 0346     		mov	r3, r0
 3007 1146 BB73     		strb	r3, [r7, #14]
 280:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = galois_mul2(galois_mul2(state[5] ^ state[7]));
 3008              		.loc 1 280 0 discriminator 3
 3009 1148 7B68     		ldr	r3, [r7, #4]
 3010 114a 0533     		adds	r3, r3, #5
 3011 114c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3012 114e 7B68     		ldr	r3, [r7, #4]
 3013 1150 0733     		adds	r3, r3, #7
 3014 1152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3015 1154 5340     		eors	r3, r3, r2
 3016 1156 DBB2     		uxtb	r3, r3
 3017 1158 1846     		mov	r0, r3
 3018 115a FFF7FEFF 		bl	galois_mul2
 3019 115e 0346     		mov	r3, r0
 3020 1160 1846     		mov	r0, r3
 3021 1162 FFF7FEFF 		bl	galois_mul2
 3022 1166 0346     		mov	r3, r0
 3023 1168 7B73     		strb	r3, [r7, #13]
 281:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[4] ^= buf1;    state[5] ^= buf2;    state[6] ^= buf1;    state[7] ^= buf2;
 3024              		.loc 1 281 0 discriminator 3
 3025 116a 7B68     		ldr	r3, [r7, #4]
 3026 116c 0433     		adds	r3, r3, #4
 3027 116e 7A68     		ldr	r2, [r7, #4]
 3028 1170 0432     		adds	r2, r2, #4
 3029 1172 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3030 1174 BA7B     		ldrb	r2, [r7, #14]
 3031 1176 4A40     		eors	r2, r2, r1
 3032 1178 D2B2     		uxtb	r2, r2
 3033 117a 1A70     		strb	r2, [r3]
 3034 117c 7B68     		ldr	r3, [r7, #4]
 3035 117e 0533     		adds	r3, r3, #5
 3036 1180 7A68     		ldr	r2, [r7, #4]
 3037 1182 0532     		adds	r2, r2, #5
 3038 1184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3039 1186 7A7B     		ldrb	r2, [r7, #13]
 3040 1188 4A40     		eors	r2, r2, r1
 3041 118a D2B2     		uxtb	r2, r2
 3042 118c 1A70     		strb	r2, [r3]
 3043 118e 7B68     		ldr	r3, [r7, #4]
 3044 1190 0633     		adds	r3, r3, #6
 3045 1192 7A68     		ldr	r2, [r7, #4]
 3046 1194 0632     		adds	r2, r2, #6
 3047 1196 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3048 1198 BA7B     		ldrb	r2, [r7, #14]
 3049 119a 4A40     		eors	r2, r2, r1
 3050 119c D2B2     		uxtb	r2, r2
 3051 119e 1A70     		strb	r2, [r3]
 3052 11a0 7B68     		ldr	r3, [r7, #4]
 3053 11a2 0733     		adds	r3, r3, #7
 3054 11a4 7A68     		ldr	r2, [r7, #4]
 3055 11a6 0732     		adds	r2, r2, #7
 3056 11a8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3057 11aa 7A7B     		ldrb	r2, [r7, #13]
 3058 11ac 4A40     		eors	r2, r2, r1
 3059 11ae D2B2     		uxtb	r2, r2
 3060 11b0 1A70     		strb	r2, [r3]
 282:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         //col3
 283:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = galois_mul2(galois_mul2(state[8] ^ state[10]));
 3061              		.loc 1 283 0 discriminator 3
 3062 11b2 7B68     		ldr	r3, [r7, #4]
 3063 11b4 0833     		adds	r3, r3, #8
 3064 11b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3065 11b8 7B68     		ldr	r3, [r7, #4]
 3066 11ba 0A33     		adds	r3, r3, #10
 3067 11bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3068 11be 5340     		eors	r3, r3, r2
 3069 11c0 DBB2     		uxtb	r3, r3
 3070 11c2 1846     		mov	r0, r3
 3071 11c4 FFF7FEFF 		bl	galois_mul2
 3072 11c8 0346     		mov	r3, r0
 3073 11ca 1846     		mov	r0, r3
 3074 11cc FFF7FEFF 		bl	galois_mul2
 3075 11d0 0346     		mov	r3, r0
 3076 11d2 BB73     		strb	r3, [r7, #14]
 284:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = galois_mul2(galois_mul2(state[9] ^ state[11]));
 3077              		.loc 1 284 0 discriminator 3
 3078 11d4 7B68     		ldr	r3, [r7, #4]
 3079 11d6 0933     		adds	r3, r3, #9
 3080 11d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3081 11da 7B68     		ldr	r3, [r7, #4]
 3082 11dc 0B33     		adds	r3, r3, #11
 3083 11de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3084 11e0 5340     		eors	r3, r3, r2
 3085 11e2 DBB2     		uxtb	r3, r3
 3086 11e4 1846     		mov	r0, r3
 3087 11e6 FFF7FEFF 		bl	galois_mul2
 3088 11ea 0346     		mov	r3, r0
 3089 11ec 1846     		mov	r0, r3
 3090 11ee FFF7FEFF 		bl	galois_mul2
 3091 11f2 0346     		mov	r3, r0
 3092 11f4 7B73     		strb	r3, [r7, #13]
 285:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[8] ^= buf1;    state[9] ^= buf2;    state[10] ^= buf1;    state[11] ^= buf2;
 3093              		.loc 1 285 0 discriminator 3
 3094 11f6 7B68     		ldr	r3, [r7, #4]
 3095 11f8 0833     		adds	r3, r3, #8
 3096 11fa 7A68     		ldr	r2, [r7, #4]
 3097 11fc 0832     		adds	r2, r2, #8
 3098 11fe 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3099 1200 BA7B     		ldrb	r2, [r7, #14]
 3100 1202 4A40     		eors	r2, r2, r1
 3101 1204 D2B2     		uxtb	r2, r2
 3102 1206 1A70     		strb	r2, [r3]
 3103 1208 7B68     		ldr	r3, [r7, #4]
 3104 120a 0933     		adds	r3, r3, #9
 3105 120c 7A68     		ldr	r2, [r7, #4]
 3106 120e 0932     		adds	r2, r2, #9
 3107 1210 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3108 1212 7A7B     		ldrb	r2, [r7, #13]
 3109 1214 4A40     		eors	r2, r2, r1
 3110 1216 D2B2     		uxtb	r2, r2
 3111 1218 1A70     		strb	r2, [r3]
 3112 121a 7B68     		ldr	r3, [r7, #4]
 3113 121c 0A33     		adds	r3, r3, #10
 3114 121e 7A68     		ldr	r2, [r7, #4]
 3115 1220 0A32     		adds	r2, r2, #10
 3116 1222 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3117 1224 BA7B     		ldrb	r2, [r7, #14]
 3118 1226 4A40     		eors	r2, r2, r1
 3119 1228 D2B2     		uxtb	r2, r2
 3120 122a 1A70     		strb	r2, [r3]
 3121 122c 7B68     		ldr	r3, [r7, #4]
 3122 122e 0B33     		adds	r3, r3, #11
 3123 1230 7A68     		ldr	r2, [r7, #4]
 3124 1232 0B32     		adds	r2, r2, #11
 3125 1234 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3126 1236 7A7B     		ldrb	r2, [r7, #13]
 3127 1238 4A40     		eors	r2, r2, r1
 3128 123a D2B2     		uxtb	r2, r2
 3129 123c 1A70     		strb	r2, [r3]
 286:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         //col4
 287:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = galois_mul2(galois_mul2(state[12] ^ state[14]));
 3130              		.loc 1 287 0 discriminator 3
 3131 123e 7B68     		ldr	r3, [r7, #4]
 3132 1240 0C33     		adds	r3, r3, #12
 3133 1242 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3134 1244 7B68     		ldr	r3, [r7, #4]
 3135 1246 0E33     		adds	r3, r3, #14
 3136 1248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3137 124a 5340     		eors	r3, r3, r2
 3138 124c DBB2     		uxtb	r3, r3
 3139 124e 1846     		mov	r0, r3
 3140 1250 FFF7FEFF 		bl	galois_mul2
 3141 1254 0346     		mov	r3, r0
 3142 1256 1846     		mov	r0, r3
 3143 1258 FFF7FEFF 		bl	galois_mul2
 3144 125c 0346     		mov	r3, r0
 3145 125e BB73     		strb	r3, [r7, #14]
 288:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = galois_mul2(galois_mul2(state[13] ^ state[15]));
 3146              		.loc 1 288 0 discriminator 3
 3147 1260 7B68     		ldr	r3, [r7, #4]
 3148 1262 0D33     		adds	r3, r3, #13
 3149 1264 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3150 1266 7B68     		ldr	r3, [r7, #4]
 3151 1268 0F33     		adds	r3, r3, #15
 3152 126a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3153 126c 5340     		eors	r3, r3, r2
 3154 126e DBB2     		uxtb	r3, r3
 3155 1270 1846     		mov	r0, r3
 3156 1272 FFF7FEFF 		bl	galois_mul2
 3157 1276 0346     		mov	r3, r0
 3158 1278 1846     		mov	r0, r3
 3159 127a FFF7FEFF 		bl	galois_mul2
 3160 127e 0346     		mov	r3, r0
 3161 1280 7B73     		strb	r3, [r7, #13]
 289:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[12] ^= buf1;    state[13] ^= buf2;    state[14] ^= buf1;    state[15] ^= buf2;
 3162              		.loc 1 289 0 discriminator 3
 3163 1282 7B68     		ldr	r3, [r7, #4]
 3164 1284 0C33     		adds	r3, r3, #12
 3165 1286 7A68     		ldr	r2, [r7, #4]
 3166 1288 0C32     		adds	r2, r2, #12
 3167 128a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3168 128c BA7B     		ldrb	r2, [r7, #14]
 3169 128e 4A40     		eors	r2, r2, r1
 3170 1290 D2B2     		uxtb	r2, r2
 3171 1292 1A70     		strb	r2, [r3]
 3172 1294 7B68     		ldr	r3, [r7, #4]
 3173 1296 0D33     		adds	r3, r3, #13
 3174 1298 7A68     		ldr	r2, [r7, #4]
 3175 129a 0D32     		adds	r2, r2, #13
 3176 129c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3177 129e 7A7B     		ldrb	r2, [r7, #13]
 3178 12a0 4A40     		eors	r2, r2, r1
 3179 12a2 D2B2     		uxtb	r2, r2
 3180 12a4 1A70     		strb	r2, [r3]
 3181 12a6 7B68     		ldr	r3, [r7, #4]
 3182 12a8 0E33     		adds	r3, r3, #14
 3183 12aa 7A68     		ldr	r2, [r7, #4]
 3184 12ac 0E32     		adds	r2, r2, #14
 3185 12ae 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3186 12b0 BA7B     		ldrb	r2, [r7, #14]
 3187 12b2 4A40     		eors	r2, r2, r1
 3188 12b4 D2B2     		uxtb	r2, r2
 3189 12b6 1A70     		strb	r2, [r3]
 3190 12b8 7B68     		ldr	r3, [r7, #4]
 3191 12ba 0F33     		adds	r3, r3, #15
 3192 12bc 7A68     		ldr	r2, [r7, #4]
 3193 12be 0F32     		adds	r2, r2, #15
 3194 12c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3195 12c2 7A7B     		ldrb	r2, [r7, #13]
 3196 12c4 4A40     		eors	r2, r2, r1
 3197 12c6 D2B2     		uxtb	r2, r2
 3198 12c8 1A70     		strb	r2, [r3]
 290:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // mixcolums //////////
 291:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // col1
 292:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[0] ^ state[1] ^ state[2] ^ state[3];
 3199              		.loc 1 292 0 discriminator 3
 3200 12ca 7B68     		ldr	r3, [r7, #4]
 3201 12cc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3202 12ce 7B68     		ldr	r3, [r7, #4]
 3203 12d0 0133     		adds	r3, r3, #1
 3204 12d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3205 12d4 5340     		eors	r3, r3, r2
 3206 12d6 DAB2     		uxtb	r2, r3
 3207 12d8 7B68     		ldr	r3, [r7, #4]
 3208 12da 0233     		adds	r3, r3, #2
 3209 12dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3210 12de 5340     		eors	r3, r3, r2
 3211 12e0 DAB2     		uxtb	r2, r3
 3212 12e2 7B68     		ldr	r3, [r7, #4]
 3213 12e4 0333     		adds	r3, r3, #3
 3214 12e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3215 12e8 5340     		eors	r3, r3, r2
 3216 12ea BB73     		strb	r3, [r7, #14]
 293:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[0];
 3217              		.loc 1 293 0 discriminator 3
 3218 12ec 7B68     		ldr	r3, [r7, #4]
 3219 12ee 1B78     		ldrb	r3, [r3]
 3220 12f0 7B73     		strb	r3, [r7, #13]
 294:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[0] ^ state[1]; buf3 = galois_mul2(buf3); state[0] = state[0] ^ buf3 ^ buf1;
 3221              		.loc 1 294 0 discriminator 3
 3222 12f2 7B68     		ldr	r3, [r7, #4]
 3223 12f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3224 12f6 7B68     		ldr	r3, [r7, #4]
 3225 12f8 0133     		adds	r3, r3, #1
 3226 12fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3227 12fc 5340     		eors	r3, r3, r2
 3228 12fe 3B73     		strb	r3, [r7, #12]
 3229 1300 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3230 1302 1846     		mov	r0, r3
 3231 1304 FFF7FEFF 		bl	galois_mul2
 3232 1308 0346     		mov	r3, r0
 3233 130a 3B73     		strb	r3, [r7, #12]
 3234 130c 7B68     		ldr	r3, [r7, #4]
 3235 130e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3236 1310 3B7B     		ldrb	r3, [r7, #12]
 3237 1312 5340     		eors	r3, r3, r2
 3238 1314 DAB2     		uxtb	r2, r3
 3239 1316 BB7B     		ldrb	r3, [r7, #14]
 3240 1318 5340     		eors	r3, r3, r2
 3241 131a DAB2     		uxtb	r2, r3
 3242 131c 7B68     		ldr	r3, [r7, #4]
 3243 131e 1A70     		strb	r2, [r3]
 295:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[1] ^ state[2]; buf3 = galois_mul2(buf3); state[1] = state[1] ^ buf3 ^ buf1;
 3244              		.loc 1 295 0 discriminator 3
 3245 1320 7B68     		ldr	r3, [r7, #4]
 3246 1322 0133     		adds	r3, r3, #1
 3247 1324 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3248 1326 7B68     		ldr	r3, [r7, #4]
 3249 1328 0233     		adds	r3, r3, #2
 3250 132a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3251 132c 5340     		eors	r3, r3, r2
 3252 132e 3B73     		strb	r3, [r7, #12]
 3253 1330 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3254 1332 1846     		mov	r0, r3
 3255 1334 FFF7FEFF 		bl	galois_mul2
 3256 1338 0346     		mov	r3, r0
 3257 133a 3B73     		strb	r3, [r7, #12]
 3258 133c 7B68     		ldr	r3, [r7, #4]
 3259 133e 0133     		adds	r3, r3, #1
 3260 1340 7A68     		ldr	r2, [r7, #4]
 3261 1342 0132     		adds	r2, r2, #1
 3262 1344 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3263 1346 3A7B     		ldrb	r2, [r7, #12]
 3264 1348 4A40     		eors	r2, r2, r1
 3265 134a D1B2     		uxtb	r1, r2
 3266 134c BA7B     		ldrb	r2, [r7, #14]
 3267 134e 4A40     		eors	r2, r2, r1
 3268 1350 D2B2     		uxtb	r2, r2
 3269 1352 1A70     		strb	r2, [r3]
 296:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[2] ^ state[3]; buf3 = galois_mul2(buf3); state[2] = state[2] ^ buf3 ^ buf1;
 3270              		.loc 1 296 0 discriminator 3
 3271 1354 7B68     		ldr	r3, [r7, #4]
 3272 1356 0233     		adds	r3, r3, #2
 3273 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3274 135a 7B68     		ldr	r3, [r7, #4]
 3275 135c 0333     		adds	r3, r3, #3
 3276 135e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3277 1360 5340     		eors	r3, r3, r2
 3278 1362 3B73     		strb	r3, [r7, #12]
 3279 1364 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3280 1366 1846     		mov	r0, r3
 3281 1368 FFF7FEFF 		bl	galois_mul2
 3282 136c 0346     		mov	r3, r0
 3283 136e 3B73     		strb	r3, [r7, #12]
 3284 1370 7B68     		ldr	r3, [r7, #4]
 3285 1372 0233     		adds	r3, r3, #2
 3286 1374 7A68     		ldr	r2, [r7, #4]
 3287 1376 0232     		adds	r2, r2, #2
 3288 1378 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3289 137a 3A7B     		ldrb	r2, [r7, #12]
 3290 137c 4A40     		eors	r2, r2, r1
 3291 137e D1B2     		uxtb	r1, r2
 3292 1380 BA7B     		ldrb	r2, [r7, #14]
 3293 1382 4A40     		eors	r2, r2, r1
 3294 1384 D2B2     		uxtb	r2, r2
 3295 1386 1A70     		strb	r2, [r3]
 297:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[3] ^ buf2;     buf3 = galois_mul2(buf3); state[3] = state[3] ^ buf3 ^ buf1;
 3296              		.loc 1 297 0 discriminator 3
 3297 1388 7B68     		ldr	r3, [r7, #4]
 3298 138a 0333     		adds	r3, r3, #3
 3299 138c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3300 138e 7B7B     		ldrb	r3, [r7, #13]
 3301 1390 5340     		eors	r3, r3, r2
 3302 1392 3B73     		strb	r3, [r7, #12]
 3303 1394 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3304 1396 1846     		mov	r0, r3
 3305 1398 FFF7FEFF 		bl	galois_mul2
 3306 139c 0346     		mov	r3, r0
 3307 139e 3B73     		strb	r3, [r7, #12]
 3308 13a0 7B68     		ldr	r3, [r7, #4]
 3309 13a2 0333     		adds	r3, r3, #3
 3310 13a4 7A68     		ldr	r2, [r7, #4]
 3311 13a6 0332     		adds	r2, r2, #3
 3312 13a8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3313 13aa 3A7B     		ldrb	r2, [r7, #12]
 3314 13ac 4A40     		eors	r2, r2, r1
 3315 13ae D1B2     		uxtb	r1, r2
 3316 13b0 BA7B     		ldrb	r2, [r7, #14]
 3317 13b2 4A40     		eors	r2, r2, r1
 3318 13b4 D2B2     		uxtb	r2, r2
 3319 13b6 1A70     		strb	r2, [r3]
 298:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // col2
 299:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[4] ^ state[5] ^ state[6] ^ state[7];
 3320              		.loc 1 299 0 discriminator 3
 3321 13b8 7B68     		ldr	r3, [r7, #4]
 3322 13ba 0433     		adds	r3, r3, #4
 3323 13bc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3324 13be 7B68     		ldr	r3, [r7, #4]
 3325 13c0 0533     		adds	r3, r3, #5
 3326 13c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3327 13c4 5340     		eors	r3, r3, r2
 3328 13c6 DAB2     		uxtb	r2, r3
 3329 13c8 7B68     		ldr	r3, [r7, #4]
 3330 13ca 0633     		adds	r3, r3, #6
 3331 13cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3332 13ce 5340     		eors	r3, r3, r2
 3333 13d0 DAB2     		uxtb	r2, r3
 3334 13d2 7B68     		ldr	r3, [r7, #4]
 3335 13d4 0733     		adds	r3, r3, #7
 3336 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3337 13d8 5340     		eors	r3, r3, r2
 3338 13da BB73     		strb	r3, [r7, #14]
 300:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[4];
 3339              		.loc 1 300 0 discriminator 3
 3340 13dc 7B68     		ldr	r3, [r7, #4]
 3341 13de 1B79     		ldrb	r3, [r3, #4]
 3342 13e0 7B73     		strb	r3, [r7, #13]
 301:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[4] ^ state[5]; buf3 = galois_mul2(buf3); state[4] = state[4] ^ buf3 ^ buf1;
 3343              		.loc 1 301 0 discriminator 3
 3344 13e2 7B68     		ldr	r3, [r7, #4]
 3345 13e4 0433     		adds	r3, r3, #4
 3346 13e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3347 13e8 7B68     		ldr	r3, [r7, #4]
 3348 13ea 0533     		adds	r3, r3, #5
 3349 13ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3350 13ee 5340     		eors	r3, r3, r2
 3351 13f0 3B73     		strb	r3, [r7, #12]
 3352 13f2 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3353 13f4 1846     		mov	r0, r3
 3354 13f6 FFF7FEFF 		bl	galois_mul2
 3355 13fa 0346     		mov	r3, r0
 3356 13fc 3B73     		strb	r3, [r7, #12]
 3357 13fe 7B68     		ldr	r3, [r7, #4]
 3358 1400 0433     		adds	r3, r3, #4
 3359 1402 7A68     		ldr	r2, [r7, #4]
 3360 1404 0432     		adds	r2, r2, #4
 3361 1406 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3362 1408 3A7B     		ldrb	r2, [r7, #12]
 3363 140a 4A40     		eors	r2, r2, r1
 3364 140c D1B2     		uxtb	r1, r2
 3365 140e BA7B     		ldrb	r2, [r7, #14]
 3366 1410 4A40     		eors	r2, r2, r1
 3367 1412 D2B2     		uxtb	r2, r2
 3368 1414 1A70     		strb	r2, [r3]
 302:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[5] ^ state[6]; buf3 = galois_mul2(buf3); state[5] = state[5] ^ buf3 ^ buf1;
 3369              		.loc 1 302 0 discriminator 3
 3370 1416 7B68     		ldr	r3, [r7, #4]
 3371 1418 0533     		adds	r3, r3, #5
 3372 141a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3373 141c 7B68     		ldr	r3, [r7, #4]
 3374 141e 0633     		adds	r3, r3, #6
 3375 1420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3376 1422 5340     		eors	r3, r3, r2
 3377 1424 3B73     		strb	r3, [r7, #12]
 3378 1426 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3379 1428 1846     		mov	r0, r3
 3380 142a FFF7FEFF 		bl	galois_mul2
 3381 142e 0346     		mov	r3, r0
 3382 1430 3B73     		strb	r3, [r7, #12]
 3383 1432 7B68     		ldr	r3, [r7, #4]
 3384 1434 0533     		adds	r3, r3, #5
 3385 1436 7A68     		ldr	r2, [r7, #4]
 3386 1438 0532     		adds	r2, r2, #5
 3387 143a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3388 143c 3A7B     		ldrb	r2, [r7, #12]
 3389 143e 4A40     		eors	r2, r2, r1
 3390 1440 D1B2     		uxtb	r1, r2
 3391 1442 BA7B     		ldrb	r2, [r7, #14]
 3392 1444 4A40     		eors	r2, r2, r1
 3393 1446 D2B2     		uxtb	r2, r2
 3394 1448 1A70     		strb	r2, [r3]
 303:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[6] ^ state[7]; buf3 = galois_mul2(buf3); state[6] = state[6] ^ buf3 ^ buf1;
 3395              		.loc 1 303 0 discriminator 3
 3396 144a 7B68     		ldr	r3, [r7, #4]
 3397 144c 0633     		adds	r3, r3, #6
 3398 144e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3399 1450 7B68     		ldr	r3, [r7, #4]
 3400 1452 0733     		adds	r3, r3, #7
 3401 1454 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3402 1456 5340     		eors	r3, r3, r2
 3403 1458 3B73     		strb	r3, [r7, #12]
 3404 145a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3405 145c 1846     		mov	r0, r3
 3406 145e FFF7FEFF 		bl	galois_mul2
 3407 1462 0346     		mov	r3, r0
 3408 1464 3B73     		strb	r3, [r7, #12]
 3409 1466 7B68     		ldr	r3, [r7, #4]
 3410 1468 0633     		adds	r3, r3, #6
 3411 146a 7A68     		ldr	r2, [r7, #4]
 3412 146c 0632     		adds	r2, r2, #6
 3413 146e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3414 1470 3A7B     		ldrb	r2, [r7, #12]
 3415 1472 4A40     		eors	r2, r2, r1
 3416 1474 D1B2     		uxtb	r1, r2
 3417 1476 BA7B     		ldrb	r2, [r7, #14]
 3418 1478 4A40     		eors	r2, r2, r1
 3419 147a D2B2     		uxtb	r2, r2
 3420 147c 1A70     		strb	r2, [r3]
 304:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[7] ^ buf2;     buf3 = galois_mul2(buf3); state[7] = state[7] ^ buf3 ^ buf1;
 3421              		.loc 1 304 0 discriminator 3
 3422 147e 7B68     		ldr	r3, [r7, #4]
 3423 1480 0733     		adds	r3, r3, #7
 3424 1482 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3425 1484 7B7B     		ldrb	r3, [r7, #13]
 3426 1486 5340     		eors	r3, r3, r2
 3427 1488 3B73     		strb	r3, [r7, #12]
 3428 148a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3429 148c 1846     		mov	r0, r3
 3430 148e FFF7FEFF 		bl	galois_mul2
 3431 1492 0346     		mov	r3, r0
 3432 1494 3B73     		strb	r3, [r7, #12]
 3433 1496 7B68     		ldr	r3, [r7, #4]
 3434 1498 0733     		adds	r3, r3, #7
 3435 149a 7A68     		ldr	r2, [r7, #4]
 3436 149c 0732     		adds	r2, r2, #7
 3437 149e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3438 14a0 3A7B     		ldrb	r2, [r7, #12]
 3439 14a2 4A40     		eors	r2, r2, r1
 3440 14a4 D1B2     		uxtb	r1, r2
 3441 14a6 BA7B     		ldrb	r2, [r7, #14]
 3442 14a8 4A40     		eors	r2, r2, r1
 3443 14aa D2B2     		uxtb	r2, r2
 3444 14ac 1A70     		strb	r2, [r3]
 305:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // col3
 306:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[8] ^ state[9] ^ state[10] ^ state[11];
 3445              		.loc 1 306 0 discriminator 3
 3446 14ae 7B68     		ldr	r3, [r7, #4]
 3447 14b0 0833     		adds	r3, r3, #8
 3448 14b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3449 14b4 7B68     		ldr	r3, [r7, #4]
 3450 14b6 0933     		adds	r3, r3, #9
 3451 14b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3452 14ba 5340     		eors	r3, r3, r2
 3453 14bc DAB2     		uxtb	r2, r3
 3454 14be 7B68     		ldr	r3, [r7, #4]
 3455 14c0 0A33     		adds	r3, r3, #10
 3456 14c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3457 14c4 5340     		eors	r3, r3, r2
 3458 14c6 DAB2     		uxtb	r2, r3
 3459 14c8 7B68     		ldr	r3, [r7, #4]
 3460 14ca 0B33     		adds	r3, r3, #11
 3461 14cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3462 14ce 5340     		eors	r3, r3, r2
 3463 14d0 BB73     		strb	r3, [r7, #14]
 307:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[8];
 3464              		.loc 1 307 0 discriminator 3
 3465 14d2 7B68     		ldr	r3, [r7, #4]
 3466 14d4 1B7A     		ldrb	r3, [r3, #8]
 3467 14d6 7B73     		strb	r3, [r7, #13]
 308:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[8] ^ state[9];   buf3 = galois_mul2(buf3); state[8] = state[8] ^ buf3 ^ buf1;
 3468              		.loc 1 308 0 discriminator 3
 3469 14d8 7B68     		ldr	r3, [r7, #4]
 3470 14da 0833     		adds	r3, r3, #8
 3471 14dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3472 14de 7B68     		ldr	r3, [r7, #4]
 3473 14e0 0933     		adds	r3, r3, #9
 3474 14e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3475 14e4 5340     		eors	r3, r3, r2
 3476 14e6 3B73     		strb	r3, [r7, #12]
 3477 14e8 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3478 14ea 1846     		mov	r0, r3
 3479 14ec FFF7FEFF 		bl	galois_mul2
 3480 14f0 0346     		mov	r3, r0
 3481 14f2 3B73     		strb	r3, [r7, #12]
 3482 14f4 7B68     		ldr	r3, [r7, #4]
 3483 14f6 0833     		adds	r3, r3, #8
 3484 14f8 7A68     		ldr	r2, [r7, #4]
 3485 14fa 0832     		adds	r2, r2, #8
 3486 14fc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3487 14fe 3A7B     		ldrb	r2, [r7, #12]
 3488 1500 4A40     		eors	r2, r2, r1
 3489 1502 D1B2     		uxtb	r1, r2
 3490 1504 BA7B     		ldrb	r2, [r7, #14]
 3491 1506 4A40     		eors	r2, r2, r1
 3492 1508 D2B2     		uxtb	r2, r2
 3493 150a 1A70     		strb	r2, [r3]
 309:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[9] ^ state[10];  buf3 = galois_mul2(buf3); state[9] = state[9] ^ buf3 ^ buf1;
 3494              		.loc 1 309 0 discriminator 3
 3495 150c 7B68     		ldr	r3, [r7, #4]
 3496 150e 0933     		adds	r3, r3, #9
 3497 1510 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3498 1512 7B68     		ldr	r3, [r7, #4]
 3499 1514 0A33     		adds	r3, r3, #10
 3500 1516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3501 1518 5340     		eors	r3, r3, r2
 3502 151a 3B73     		strb	r3, [r7, #12]
 3503 151c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3504 151e 1846     		mov	r0, r3
 3505 1520 FFF7FEFF 		bl	galois_mul2
 3506 1524 0346     		mov	r3, r0
 3507 1526 3B73     		strb	r3, [r7, #12]
 3508 1528 7B68     		ldr	r3, [r7, #4]
 3509 152a 0933     		adds	r3, r3, #9
 3510 152c 7A68     		ldr	r2, [r7, #4]
 3511 152e 0932     		adds	r2, r2, #9
 3512 1530 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3513 1532 3A7B     		ldrb	r2, [r7, #12]
 3514 1534 4A40     		eors	r2, r2, r1
 3515 1536 D1B2     		uxtb	r1, r2
 3516 1538 BA7B     		ldrb	r2, [r7, #14]
 3517 153a 4A40     		eors	r2, r2, r1
 3518 153c D2B2     		uxtb	r2, r2
 3519 153e 1A70     		strb	r2, [r3]
 310:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[10] ^ state[11]; buf3 = galois_mul2(buf3); state[10] = state[10] ^ buf3 ^ buf1
 3520              		.loc 1 310 0 discriminator 3
 3521 1540 7B68     		ldr	r3, [r7, #4]
 3522 1542 0A33     		adds	r3, r3, #10
 3523 1544 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3524 1546 7B68     		ldr	r3, [r7, #4]
 3525 1548 0B33     		adds	r3, r3, #11
 3526 154a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3527 154c 5340     		eors	r3, r3, r2
 3528 154e 3B73     		strb	r3, [r7, #12]
 3529 1550 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3530 1552 1846     		mov	r0, r3
 3531 1554 FFF7FEFF 		bl	galois_mul2
 3532 1558 0346     		mov	r3, r0
 3533 155a 3B73     		strb	r3, [r7, #12]
 3534 155c 7B68     		ldr	r3, [r7, #4]
 3535 155e 0A33     		adds	r3, r3, #10
 3536 1560 7A68     		ldr	r2, [r7, #4]
 3537 1562 0A32     		adds	r2, r2, #10
 3538 1564 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3539 1566 3A7B     		ldrb	r2, [r7, #12]
 3540 1568 4A40     		eors	r2, r2, r1
 3541 156a D1B2     		uxtb	r1, r2
 3542 156c BA7B     		ldrb	r2, [r7, #14]
 3543 156e 4A40     		eors	r2, r2, r1
 3544 1570 D2B2     		uxtb	r2, r2
 3545 1572 1A70     		strb	r2, [r3]
 311:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[11] ^ buf2;      buf3 = galois_mul2(buf3); state[11] = state[11] ^ buf3 ^ buf1
 3546              		.loc 1 311 0 discriminator 3
 3547 1574 7B68     		ldr	r3, [r7, #4]
 3548 1576 0B33     		adds	r3, r3, #11
 3549 1578 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3550 157a 7B7B     		ldrb	r3, [r7, #13]
 3551 157c 5340     		eors	r3, r3, r2
 3552 157e 3B73     		strb	r3, [r7, #12]
 3553 1580 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3554 1582 1846     		mov	r0, r3
 3555 1584 FFF7FEFF 		bl	galois_mul2
 3556 1588 0346     		mov	r3, r0
 3557 158a 3B73     		strb	r3, [r7, #12]
 3558 158c 7B68     		ldr	r3, [r7, #4]
 3559 158e 0B33     		adds	r3, r3, #11
 3560 1590 7A68     		ldr	r2, [r7, #4]
 3561 1592 0B32     		adds	r2, r2, #11
 3562 1594 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3563 1596 3A7B     		ldrb	r2, [r7, #12]
 3564 1598 4A40     		eors	r2, r2, r1
 3565 159a D1B2     		uxtb	r1, r2
 3566 159c BA7B     		ldrb	r2, [r7, #14]
 3567 159e 4A40     		eors	r2, r2, r1
 3568 15a0 D2B2     		uxtb	r2, r2
 3569 15a2 1A70     		strb	r2, [r3]
 312:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // col4
 313:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = state[12] ^ state[13] ^ state[14] ^ state[15];
 3570              		.loc 1 313 0 discriminator 3
 3571 15a4 7B68     		ldr	r3, [r7, #4]
 3572 15a6 0C33     		adds	r3, r3, #12
 3573 15a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3574 15aa 7B68     		ldr	r3, [r7, #4]
 3575 15ac 0D33     		adds	r3, r3, #13
 3576 15ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3577 15b0 5340     		eors	r3, r3, r2
 3578 15b2 DAB2     		uxtb	r2, r3
 3579 15b4 7B68     		ldr	r3, [r7, #4]
 3580 15b6 0E33     		adds	r3, r3, #14
 3581 15b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3582 15ba 5340     		eors	r3, r3, r2
 3583 15bc DAB2     		uxtb	r2, r3
 3584 15be 7B68     		ldr	r3, [r7, #4]
 3585 15c0 0F33     		adds	r3, r3, #15
 3586 15c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3587 15c4 5340     		eors	r3, r3, r2
 3588 15c6 BB73     		strb	r3, [r7, #14]
 314:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = state[12];
 3589              		.loc 1 314 0 discriminator 3
 3590 15c8 7B68     		ldr	r3, [r7, #4]
 3591 15ca 1B7B     		ldrb	r3, [r3, #12]
 3592 15cc 7B73     		strb	r3, [r7, #13]
 315:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[12] ^ state[13]; buf3 = galois_mul2(buf3); state[12] = state[12] ^ buf3 ^ buf1
 3593              		.loc 1 315 0 discriminator 3
 3594 15ce 7B68     		ldr	r3, [r7, #4]
 3595 15d0 0C33     		adds	r3, r3, #12
 3596 15d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3597 15d4 7B68     		ldr	r3, [r7, #4]
 3598 15d6 0D33     		adds	r3, r3, #13
 3599 15d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3600 15da 5340     		eors	r3, r3, r2
 3601 15dc 3B73     		strb	r3, [r7, #12]
 3602 15de 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3603 15e0 1846     		mov	r0, r3
 3604 15e2 FFF7FEFF 		bl	galois_mul2
 3605 15e6 0346     		mov	r3, r0
 3606 15e8 3B73     		strb	r3, [r7, #12]
 3607 15ea 7B68     		ldr	r3, [r7, #4]
 3608 15ec 0C33     		adds	r3, r3, #12
 3609 15ee 7A68     		ldr	r2, [r7, #4]
 3610 15f0 0C32     		adds	r2, r2, #12
 3611 15f2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3612 15f4 3A7B     		ldrb	r2, [r7, #12]
 3613 15f6 4A40     		eors	r2, r2, r1
 3614 15f8 D1B2     		uxtb	r1, r2
 3615 15fa BA7B     		ldrb	r2, [r7, #14]
 3616 15fc 4A40     		eors	r2, r2, r1
 3617 15fe D2B2     		uxtb	r2, r2
 3618 1600 1A70     		strb	r2, [r3]
 316:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[13] ^ state[14]; buf3 = galois_mul2(buf3); state[13] = state[13] ^ buf3 ^ buf1
 3619              		.loc 1 316 0 discriminator 3
 3620 1602 7B68     		ldr	r3, [r7, #4]
 3621 1604 0D33     		adds	r3, r3, #13
 3622 1606 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3623 1608 7B68     		ldr	r3, [r7, #4]
 3624 160a 0E33     		adds	r3, r3, #14
 3625 160c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3626 160e 5340     		eors	r3, r3, r2
 3627 1610 3B73     		strb	r3, [r7, #12]
 3628 1612 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3629 1614 1846     		mov	r0, r3
 3630 1616 FFF7FEFF 		bl	galois_mul2
 3631 161a 0346     		mov	r3, r0
 3632 161c 3B73     		strb	r3, [r7, #12]
 3633 161e 7B68     		ldr	r3, [r7, #4]
 3634 1620 0D33     		adds	r3, r3, #13
 3635 1622 7A68     		ldr	r2, [r7, #4]
 3636 1624 0D32     		adds	r2, r2, #13
 3637 1626 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3638 1628 3A7B     		ldrb	r2, [r7, #12]
 3639 162a 4A40     		eors	r2, r2, r1
 3640 162c D1B2     		uxtb	r1, r2
 3641 162e BA7B     		ldrb	r2, [r7, #14]
 3642 1630 4A40     		eors	r2, r2, r1
 3643 1632 D2B2     		uxtb	r2, r2
 3644 1634 1A70     		strb	r2, [r3]
 317:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[14] ^ state[15]; buf3 = galois_mul2(buf3); state[14] = state[14] ^ buf3 ^ buf1
 3645              		.loc 1 317 0 discriminator 3
 3646 1636 7B68     		ldr	r3, [r7, #4]
 3647 1638 0E33     		adds	r3, r3, #14
 3648 163a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3649 163c 7B68     		ldr	r3, [r7, #4]
 3650 163e 0F33     		adds	r3, r3, #15
 3651 1640 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3652 1642 5340     		eors	r3, r3, r2
 3653 1644 3B73     		strb	r3, [r7, #12]
 3654 1646 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3655 1648 1846     		mov	r0, r3
 3656 164a FFF7FEFF 		bl	galois_mul2
 3657 164e 0346     		mov	r3, r0
 3658 1650 3B73     		strb	r3, [r7, #12]
 3659 1652 7B68     		ldr	r3, [r7, #4]
 3660 1654 0E33     		adds	r3, r3, #14
 3661 1656 7A68     		ldr	r2, [r7, #4]
 3662 1658 0E32     		adds	r2, r2, #14
 3663 165a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3664 165c 3A7B     		ldrb	r2, [r7, #12]
 3665 165e 4A40     		eors	r2, r2, r1
 3666 1660 D1B2     		uxtb	r1, r2
 3667 1662 BA7B     		ldrb	r2, [r7, #14]
 3668 1664 4A40     		eors	r2, r2, r1
 3669 1666 D2B2     		uxtb	r2, r2
 3670 1668 1A70     		strb	r2, [r3]
 318:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf3 = state[15] ^ buf2;      buf3 = galois_mul2(buf3); state[15] = state[15] ^ buf3 ^ buf1
 3671              		.loc 1 318 0 discriminator 3
 3672 166a 7B68     		ldr	r3, [r7, #4]
 3673 166c 0F33     		adds	r3, r3, #15
 3674 166e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3675 1670 7B7B     		ldrb	r3, [r7, #13]
 3676 1672 5340     		eors	r3, r3, r2
 3677 1674 3B73     		strb	r3, [r7, #12]
 3678 1676 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3679 1678 1846     		mov	r0, r3
 3680 167a FFF7FEFF 		bl	galois_mul2
 3681 167e 0346     		mov	r3, r0
 3682 1680 3B73     		strb	r3, [r7, #12]
 3683 1682 7B68     		ldr	r3, [r7, #4]
 3684 1684 0F33     		adds	r3, r3, #15
 3685 1686 7A68     		ldr	r2, [r7, #4]
 3686 1688 0F32     		adds	r2, r2, #15
 3687 168a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3688 168c 3A7B     		ldrb	r2, [r7, #12]
 3689 168e 4A40     		eors	r2, r2, r1
 3690 1690 D1B2     		uxtb	r1, r2
 3691 1692 BA7B     		ldrb	r2, [r7, #14]
 3692 1694 4A40     		eors	r2, r2, r1
 3693 1696 D2B2     		uxtb	r2, r2
 3694 1698 1A70     		strb	r2, [r3]
 319:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 320:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // addroundkey, rsbox and shiftrows
 321:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // row 0
 322:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[0] = rsbox[state[0]] ^ expandedKey[(round * 16)];
 3695              		.loc 1 322 0 discriminator 3
 3696 169a 7B68     		ldr	r3, [r7, #4]
 3697 169c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3698 169e 1A46     		mov	r2, r3
 3699 16a0 954B     		ldr	r3, .L25
 3700 16a2 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3701 16a4 97F90F30 		ldrsb	r3, [r7, #15]
 3702 16a8 1B01     		lsls	r3, r3, #4
 3703 16aa 1946     		mov	r1, r3
 3704 16ac 3B68     		ldr	r3, [r7]
 3705 16ae 0B44     		add	r3, r3, r1
 3706 16b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3707 16b2 5340     		eors	r3, r3, r2
 3708 16b4 DAB2     		uxtb	r2, r3
 3709 16b6 7B68     		ldr	r3, [r7, #4]
 3710 16b8 1A70     		strb	r2, [r3]
 323:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[4] = rsbox[state[4]] ^ expandedKey[(round * 16) + 4];
 3711              		.loc 1 323 0 discriminator 3
 3712 16ba 7B68     		ldr	r3, [r7, #4]
 3713 16bc 0433     		adds	r3, r3, #4
 3714 16be 7A68     		ldr	r2, [r7, #4]
 3715 16c0 0432     		adds	r2, r2, #4
 3716 16c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3717 16c4 1146     		mov	r1, r2
 3718 16c6 8C4A     		ldr	r2, .L25
 3719 16c8 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3720 16ca 97F90F20 		ldrsb	r2, [r7, #15]
 3721 16ce 1201     		lsls	r2, r2, #4
 3722 16d0 0432     		adds	r2, r2, #4
 3723 16d2 3868     		ldr	r0, [r7]
 3724 16d4 0244     		add	r2, r2, r0
 3725 16d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3726 16d8 4A40     		eors	r2, r2, r1
 3727 16da D2B2     		uxtb	r2, r2
 3728 16dc 1A70     		strb	r2, [r3]
 324:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[8] = rsbox[state[8]] ^ expandedKey[(round * 16) + 8];
 3729              		.loc 1 324 0 discriminator 3
 3730 16de 7B68     		ldr	r3, [r7, #4]
 3731 16e0 0833     		adds	r3, r3, #8
 3732 16e2 7A68     		ldr	r2, [r7, #4]
 3733 16e4 0832     		adds	r2, r2, #8
 3734 16e6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3735 16e8 1146     		mov	r1, r2
 3736 16ea 834A     		ldr	r2, .L25
 3737 16ec 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3738 16ee 97F90F20 		ldrsb	r2, [r7, #15]
 3739 16f2 1201     		lsls	r2, r2, #4
 3740 16f4 0832     		adds	r2, r2, #8
 3741 16f6 3868     		ldr	r0, [r7]
 3742 16f8 0244     		add	r2, r2, r0
 3743 16fa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3744 16fc 4A40     		eors	r2, r2, r1
 3745 16fe D2B2     		uxtb	r2, r2
 3746 1700 1A70     		strb	r2, [r3]
 325:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[12] = rsbox[state[12]] ^ expandedKey[(round * 16) + 12];
 3747              		.loc 1 325 0 discriminator 3
 3748 1702 7B68     		ldr	r3, [r7, #4]
 3749 1704 0C33     		adds	r3, r3, #12
 3750 1706 7A68     		ldr	r2, [r7, #4]
 3751 1708 0C32     		adds	r2, r2, #12
 3752 170a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3753 170c 1146     		mov	r1, r2
 3754 170e 7A4A     		ldr	r2, .L25
 3755 1710 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3756 1712 97F90F20 		ldrsb	r2, [r7, #15]
 3757 1716 1201     		lsls	r2, r2, #4
 3758 1718 0C32     		adds	r2, r2, #12
 3759 171a 3868     		ldr	r0, [r7]
 3760 171c 0244     		add	r2, r2, r0
 3761 171e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3762 1720 4A40     		eors	r2, r2, r1
 3763 1722 D2B2     		uxtb	r2, r2
 3764 1724 1A70     		strb	r2, [r3]
 326:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // row 1
 327:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = rsbox[state[13]] ^ expandedKey[(round * 16) + 1];
 3765              		.loc 1 327 0 discriminator 3
 3766 1726 7B68     		ldr	r3, [r7, #4]
 3767 1728 0D33     		adds	r3, r3, #13
 3768 172a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3769 172c 1A46     		mov	r2, r3
 3770 172e 724B     		ldr	r3, .L25
 3771 1730 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3772 1732 97F90F30 		ldrsb	r3, [r7, #15]
 3773 1736 1B01     		lsls	r3, r3, #4
 3774 1738 0133     		adds	r3, r3, #1
 3775 173a 3968     		ldr	r1, [r7]
 3776 173c 0B44     		add	r3, r3, r1
 3777 173e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3778 1740 5340     		eors	r3, r3, r2
 3779 1742 BB73     		strb	r3, [r7, #14]
 328:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[13] = rsbox[state[9]] ^ expandedKey[(round * 16) + 13];
 3780              		.loc 1 328 0 discriminator 3
 3781 1744 7B68     		ldr	r3, [r7, #4]
 3782 1746 0D33     		adds	r3, r3, #13
 3783 1748 7A68     		ldr	r2, [r7, #4]
 3784 174a 0932     		adds	r2, r2, #9
 3785 174c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3786 174e 1146     		mov	r1, r2
 3787 1750 694A     		ldr	r2, .L25
 3788 1752 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3789 1754 97F90F20 		ldrsb	r2, [r7, #15]
 3790 1758 1201     		lsls	r2, r2, #4
 3791 175a 0D32     		adds	r2, r2, #13
 3792 175c 3868     		ldr	r0, [r7]
 3793 175e 0244     		add	r2, r2, r0
 3794 1760 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3795 1762 4A40     		eors	r2, r2, r1
 3796 1764 D2B2     		uxtb	r2, r2
 3797 1766 1A70     		strb	r2, [r3]
 329:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[9] = rsbox[state[5]] ^ expandedKey[(round * 16) + 9];
 3798              		.loc 1 329 0 discriminator 3
 3799 1768 7B68     		ldr	r3, [r7, #4]
 3800 176a 0933     		adds	r3, r3, #9
 3801 176c 7A68     		ldr	r2, [r7, #4]
 3802 176e 0532     		adds	r2, r2, #5
 3803 1770 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3804 1772 1146     		mov	r1, r2
 3805 1774 604A     		ldr	r2, .L25
 3806 1776 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3807 1778 97F90F20 		ldrsb	r2, [r7, #15]
 3808 177c 1201     		lsls	r2, r2, #4
 3809 177e 0932     		adds	r2, r2, #9
 3810 1780 3868     		ldr	r0, [r7]
 3811 1782 0244     		add	r2, r2, r0
 3812 1784 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3813 1786 4A40     		eors	r2, r2, r1
 3814 1788 D2B2     		uxtb	r2, r2
 3815 178a 1A70     		strb	r2, [r3]
 330:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[5] = rsbox[state[1]] ^ expandedKey[(round * 16) + 5];
 3816              		.loc 1 330 0 discriminator 3
 3817 178c 7B68     		ldr	r3, [r7, #4]
 3818 178e 0533     		adds	r3, r3, #5
 3819 1790 7A68     		ldr	r2, [r7, #4]
 3820 1792 0132     		adds	r2, r2, #1
 3821 1794 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3822 1796 1146     		mov	r1, r2
 3823 1798 574A     		ldr	r2, .L25
 3824 179a 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3825 179c 97F90F20 		ldrsb	r2, [r7, #15]
 3826 17a0 1201     		lsls	r2, r2, #4
 3827 17a2 0532     		adds	r2, r2, #5
 3828 17a4 3868     		ldr	r0, [r7]
 3829 17a6 0244     		add	r2, r2, r0
 3830 17a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3831 17aa 4A40     		eors	r2, r2, r1
 3832 17ac D2B2     		uxtb	r2, r2
 3833 17ae 1A70     		strb	r2, [r3]
 331:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[1] = buf1;
 3834              		.loc 1 331 0 discriminator 3
 3835 17b0 7B68     		ldr	r3, [r7, #4]
 3836 17b2 0133     		adds	r3, r3, #1
 3837 17b4 BA7B     		ldrb	r2, [r7, #14]
 3838 17b6 1A70     		strb	r2, [r3]
 332:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // row 2
 333:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = rsbox[state[2]] ^ expandedKey[(round * 16) + 10];
 3839              		.loc 1 333 0 discriminator 3
 3840 17b8 7B68     		ldr	r3, [r7, #4]
 3841 17ba 0233     		adds	r3, r3, #2
 3842 17bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3843 17be 1A46     		mov	r2, r3
 3844 17c0 4D4B     		ldr	r3, .L25
 3845 17c2 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3846 17c4 97F90F30 		ldrsb	r3, [r7, #15]
 3847 17c8 1B01     		lsls	r3, r3, #4
 3848 17ca 0A33     		adds	r3, r3, #10
 3849 17cc 3968     		ldr	r1, [r7]
 3850 17ce 0B44     		add	r3, r3, r1
 3851 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3852 17d2 5340     		eors	r3, r3, r2
 3853 17d4 BB73     		strb	r3, [r7, #14]
 334:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf2 = rsbox[state[6]] ^ expandedKey[(round * 16) + 14];
 3854              		.loc 1 334 0 discriminator 3
 3855 17d6 7B68     		ldr	r3, [r7, #4]
 3856 17d8 0633     		adds	r3, r3, #6
 3857 17da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3858 17dc 1A46     		mov	r2, r3
 3859 17de 464B     		ldr	r3, .L25
 3860 17e0 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3861 17e2 97F90F30 		ldrsb	r3, [r7, #15]
 3862 17e6 1B01     		lsls	r3, r3, #4
 3863 17e8 0E33     		adds	r3, r3, #14
 3864 17ea 3968     		ldr	r1, [r7]
 3865 17ec 0B44     		add	r3, r3, r1
 3866 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3867 17f0 5340     		eors	r3, r3, r2
 3868 17f2 7B73     		strb	r3, [r7, #13]
 335:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[2] = rsbox[state[10]] ^ expandedKey[(round * 16) + 2];
 3869              		.loc 1 335 0 discriminator 3
 3870 17f4 7B68     		ldr	r3, [r7, #4]
 3871 17f6 0233     		adds	r3, r3, #2
 3872 17f8 7A68     		ldr	r2, [r7, #4]
 3873 17fa 0A32     		adds	r2, r2, #10
 3874 17fc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3875 17fe 1146     		mov	r1, r2
 3876 1800 3D4A     		ldr	r2, .L25
 3877 1802 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3878 1804 97F90F20 		ldrsb	r2, [r7, #15]
 3879 1808 1201     		lsls	r2, r2, #4
 3880 180a 0232     		adds	r2, r2, #2
 3881 180c 3868     		ldr	r0, [r7]
 3882 180e 0244     		add	r2, r2, r0
 3883 1810 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3884 1812 4A40     		eors	r2, r2, r1
 3885 1814 D2B2     		uxtb	r2, r2
 3886 1816 1A70     		strb	r2, [r3]
 336:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[6] = rsbox[state[14]] ^ expandedKey[(round * 16) + 6];
 3887              		.loc 1 336 0 discriminator 3
 3888 1818 7B68     		ldr	r3, [r7, #4]
 3889 181a 0633     		adds	r3, r3, #6
 3890 181c 7A68     		ldr	r2, [r7, #4]
 3891 181e 0E32     		adds	r2, r2, #14
 3892 1820 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3893 1822 1146     		mov	r1, r2
 3894 1824 344A     		ldr	r2, .L25
 3895 1826 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3896 1828 97F90F20 		ldrsb	r2, [r7, #15]
 3897 182c 1201     		lsls	r2, r2, #4
 3898 182e 0632     		adds	r2, r2, #6
 3899 1830 3868     		ldr	r0, [r7]
 3900 1832 0244     		add	r2, r2, r0
 3901 1834 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3902 1836 4A40     		eors	r2, r2, r1
 3903 1838 D2B2     		uxtb	r2, r2
 3904 183a 1A70     		strb	r2, [r3]
 337:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[10] = buf1;
 3905              		.loc 1 337 0 discriminator 3
 3906 183c 7B68     		ldr	r3, [r7, #4]
 3907 183e 0A33     		adds	r3, r3, #10
 3908 1840 BA7B     		ldrb	r2, [r7, #14]
 3909 1842 1A70     		strb	r2, [r3]
 338:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[14] = buf2;
 3910              		.loc 1 338 0 discriminator 3
 3911 1844 7B68     		ldr	r3, [r7, #4]
 3912 1846 0E33     		adds	r3, r3, #14
 3913 1848 7A7B     		ldrb	r2, [r7, #13]
 3914 184a 1A70     		strb	r2, [r3]
 339:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // row 3
 340:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         buf1 = rsbox[state[3]] ^ expandedKey[(round * 16) + 15];
 3915              		.loc 1 340 0 discriminator 3
 3916 184c 7B68     		ldr	r3, [r7, #4]
 3917 184e 0333     		adds	r3, r3, #3
 3918 1850 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3919 1852 1A46     		mov	r2, r3
 3920 1854 284B     		ldr	r3, .L25
 3921 1856 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3922 1858 97F90F30 		ldrsb	r3, [r7, #15]
 3923 185c 1B01     		lsls	r3, r3, #4
 3924 185e 0F33     		adds	r3, r3, #15
 3925 1860 3968     		ldr	r1, [r7]
 3926 1862 0B44     		add	r3, r3, r1
 3927 1864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3928 1866 5340     		eors	r3, r3, r2
 3929 1868 BB73     		strb	r3, [r7, #14]
 341:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[3] = rsbox[state[7]] ^ expandedKey[(round * 16) + 3];
 3930              		.loc 1 341 0 discriminator 3
 3931 186a 7B68     		ldr	r3, [r7, #4]
 3932 186c 0333     		adds	r3, r3, #3
 3933 186e 7A68     		ldr	r2, [r7, #4]
 3934 1870 0732     		adds	r2, r2, #7
 3935 1872 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3936 1874 1146     		mov	r1, r2
 3937 1876 204A     		ldr	r2, .L25
 3938 1878 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3939 187a 97F90F20 		ldrsb	r2, [r7, #15]
 3940 187e 1201     		lsls	r2, r2, #4
 3941 1880 0332     		adds	r2, r2, #3
 3942 1882 3868     		ldr	r0, [r7]
 3943 1884 0244     		add	r2, r2, r0
 3944 1886 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3945 1888 4A40     		eors	r2, r2, r1
 3946 188a D2B2     		uxtb	r2, r2
 3947 188c 1A70     		strb	r2, [r3]
 342:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[7] = rsbox[state[11]] ^ expandedKey[(round * 16) + 7];
 3948              		.loc 1 342 0 discriminator 3
 3949 188e 7B68     		ldr	r3, [r7, #4]
 3950 1890 0733     		adds	r3, r3, #7
 3951 1892 7A68     		ldr	r2, [r7, #4]
 3952 1894 0B32     		adds	r2, r2, #11
 3953 1896 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3954 1898 1146     		mov	r1, r2
 3955 189a 174A     		ldr	r2, .L25
 3956 189c 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3957 189e 97F90F20 		ldrsb	r2, [r7, #15]
 3958 18a2 1201     		lsls	r2, r2, #4
 3959 18a4 0732     		adds	r2, r2, #7
 3960 18a6 3868     		ldr	r0, [r7]
 3961 18a8 0244     		add	r2, r2, r0
 3962 18aa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3963 18ac 4A40     		eors	r2, r2, r1
 3964 18ae D2B2     		uxtb	r2, r2
 3965 18b0 1A70     		strb	r2, [r3]
 343:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[11] = rsbox[state[15]] ^ expandedKey[(round * 16) + 11];
 3966              		.loc 1 343 0 discriminator 3
 3967 18b2 7B68     		ldr	r3, [r7, #4]
 3968 18b4 0B33     		adds	r3, r3, #11
 3969 18b6 7A68     		ldr	r2, [r7, #4]
 3970 18b8 0F32     		adds	r2, r2, #15
 3971 18ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3972 18bc 1146     		mov	r1, r2
 3973 18be 0E4A     		ldr	r2, .L25
 3974 18c0 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 3975 18c2 97F90F20 		ldrsb	r2, [r7, #15]
 3976 18c6 1201     		lsls	r2, r2, #4
 3977 18c8 0B32     		adds	r2, r2, #11
 3978 18ca 3868     		ldr	r0, [r7]
 3979 18cc 0244     		add	r2, r2, r0
 3980 18ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3981 18d0 4A40     		eors	r2, r2, r1
 3982 18d2 D2B2     		uxtb	r2, r2
 3983 18d4 1A70     		strb	r2, [r3]
 344:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         state[15] = buf1;
 3984              		.loc 1 344 0 discriminator 3
 3985 18d6 7B68     		ldr	r3, [r7, #4]
 3986 18d8 0F33     		adds	r3, r3, #15
 3987 18da BA7B     		ldrb	r2, [r7, #14]
 3988 18dc 1A70     		strb	r2, [r3]
 272:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // barreto
 3989              		.loc 1 272 0 discriminator 3
 3990 18de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3991 18e0 DBB2     		uxtb	r3, r3
 3992 18e2 013B     		subs	r3, r3, #1
 3993 18e4 DBB2     		uxtb	r3, r3
 3994 18e6 FB73     		strb	r3, [r7, #15]
 3995              	.L21:
 272:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****         // barreto
 3996              		.loc 1 272 0 is_stmt 0 discriminator 1
 3997 18e8 97F90F30 		ldrsb	r3, [r7, #15]
 3998 18ec 002B     		cmp	r3, #0
 3999 18ee BFF6D7AB 		bge	.L22
 345:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     }
 346:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 347:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 348:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** }
 4000              		.loc 1 348 0 is_stmt 1
 4001 18f2 1037     		adds	r7, r7, #16
 4002              		.cfi_def_cfa_offset 8
 4003 18f4 BD46     		mov	sp, r7
 4004              		.cfi_def_cfa_register 13
 4005              		@ sp needed
 4006 18f6 80BD     		pop	{r7, pc}
 4007              	.L26:
 4008              		.align	2
 4009              	.L25:
 4010 18f8 00000000 		.word	rsbox
 4011              		.cfi_endproc
 4012              	.LFE3:
 4014              		.align	2
 4015              		.global	aes_ecb_enc
 4016              		.thumb
 4017              		.thumb_func
 4019              	aes_ecb_enc:
 4020              	.LFB4:
 349:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** /**
 350:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** \brief Basic AES encryption of a single 16-octet block.
 351:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** \param[in,out] buffer Single block plaintext. Will be overwritten by ciphertext.
 352:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** \param[in] key Buffer containing the secret key (16 octets).
 353:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 354:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** \returns E_SUCCESS when the encryption was successful. 
 355:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** */
 356:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** owerror_t aes_ecb_enc(uint8_t buffer[16], uint8_t key[16])
 357:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** {
 4021              		.loc 1 357 0
 4022              		.cfi_startproc
 4023              		@ args = 0, pretend = 0, frame = 184
 4024              		@ frame_needed = 1, uses_anonymous_args = 0
 4025 18fc 80B5     		push	{r7, lr}
 4026              		.cfi_def_cfa_offset 8
 4027              		.cfi_offset 7, -8
 4028              		.cfi_offset 14, -4
 4029 18fe AEB0     		sub	sp, sp, #184
 4030              		.cfi_def_cfa_offset 192
 4031 1900 00AF     		add	r7, sp, #0
 4032              		.cfi_def_cfa_register 7
 4033 1902 7860     		str	r0, [r7, #4]
 4034 1904 3960     		str	r1, [r7]
 358:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     uint8_t expandedKey[176];
 359:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 360:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     expandKey(expandedKey, key);       // expand the key into 176 bytes
 4035              		.loc 1 360 0
 4036 1906 07F10803 		add	r3, r7, #8
 4037 190a 1846     		mov	r0, r3
 4038 190c 3968     		ldr	r1, [r7]
 4039 190e FFF7FEFF 		bl	expandKey
 361:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     aes_encr(buffer, expandedKey);
 4040              		.loc 1 361 0
 4041 1912 07F10803 		add	r3, r7, #8
 4042 1916 7868     		ldr	r0, [r7, #4]
 4043 1918 1946     		mov	r1, r3
 4044 191a FFF7FEFF 		bl	aes_encr
 362:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** 
 363:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c ****     return E_SUCCESS;
 4045              		.loc 1 363 0
 4046 191e 0023     		movs	r3, #0
 364:build/OpenMote-CC2538_armgcc/bsp/boards/common/aes_ecb.c **** }
 4047              		.loc 1 364 0
 4048 1920 1846     		mov	r0, r3
 4049 1922 B837     		adds	r7, r7, #184
 4050              		.cfi_def_cfa_offset 8
 4051 1924 BD46     		mov	sp, r7
 4052              		.cfi_def_cfa_register 13
 4053              		@ sp needed
 4054 1926 80BD     		pop	{r7, pc}
 4055              		.cfi_endproc
 4056              	.LFE4:
 4058              	.Letext0:
 4059              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 4060              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 4061              		.file 4 "inc/opendefs.h"
 4062              		.file 5 "bsp/boards/OpenMote-CC2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes_ecb.c
     /tmp/ccGvjhzA.s:19     .rodata:0000000000000000 $d
     /tmp/ccGvjhzA.s:22     .rodata:0000000000000000 rreg_uriquery
     /tmp/ccGvjhzA.s:27     .rodata:0000000000000008 infoBoardname
     /tmp/ccGvjhzA.s:32     .rodata:0000000000000010 infouCName
     /tmp/ccGvjhzA.s:37     .rodata:0000000000000018 infoRadioName
     /tmp/ccGvjhzA.s:42     .rodata:0000000000000024 infoStackName
     /tmp/ccGvjhzA.s:48     .rodata:0000000000000030 sbox
     /tmp/ccGvjhzA.s:309    .rodata:0000000000000130 rsbox
     /tmp/ccGvjhzA.s:570    .rodata:0000000000000230 Rcon
     /tmp/ccGvjhzA.s:583    .text:0000000000000000 $t
     /tmp/ccGvjhzA.s:588    .text:0000000000000000 expandKey
     /tmp/ccGvjhzA.s:1026   .text:0000000000000310 $d
     /tmp/ccGvjhzA.s:1031   .text:0000000000000318 $t
     /tmp/ccGvjhzA.s:1036   .text:0000000000000318 galois_mul2
     /tmp/ccGvjhzA.s:1091   .text:000000000000034c aes_encr
     /tmp/ccGvjhzA.s:1485   .text:0000000000000614 $d
     /tmp/ccGvjhzA.s:1487   .text:0000000000000618 $t
     /tmp/ccGvjhzA.s:2285   .text:0000000000000c0c $d
     /tmp/ccGvjhzA.s:2287   .text:0000000000000c10 $t
     /tmp/ccGvjhzA.s:2414   .text:0000000000000ce4 aes_decr
     /tmp/ccGvjhzA.s:2924   .text:000000000000109c $d
     /tmp/ccGvjhzA.s:2927   .text:00000000000010a0 $t
     /tmp/ccGvjhzA.s:4010   .text:00000000000018f8 $d
     /tmp/ccGvjhzA.s:4014   .text:00000000000018fc $t
     /tmp/ccGvjhzA.s:4019   .text:00000000000018fc aes_ecb_enc
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.59116071098782a37a9183a8102fe91b
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.toolchain_defs.h.2.e4ebbe6e0a48032a9b79077dc42e1ffd
                           .group:0000000000000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:0000000000000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:0000000000000000 wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51
                           .group:0000000000000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:0000000000000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:0000000000000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:0000000000000000 wm4.cdefs.h.47.e6563c1c3863188ba4ac4eaa2c85b6f1
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.board_info.h.22.aeb00002354a4949fff54190040e37af
                           .group:0000000000000000 wm4.opendefs.h.23.bdaf9c024be66ead04de21e3ce3dfaf2

NO UNDEFINED SYMBOLS
