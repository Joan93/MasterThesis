   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ccm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	CCMAuthEncryptStart
  20              		.thumb
  21              		.thumb_func
  23              	CCMAuthEncryptStart:
  24              	.LFB0:
  25              		.file 1 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c"
   1:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** /******************************************************************************
   2:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  Filename:       ccm.c
   3:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  Revised:        $Date: 2013-03-22 16:13:31 +0100 (Fri, 22 Mar 2013) $
   4:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  Revision:       $Revision: 9513 $
   5:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
   6:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  Description:    Support for Hardware CCM encryption and authentication.
   7:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
   8:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
   9:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
  10:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
  11:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  Redistribution and use in source and binary forms, with or without
  12:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  modification, are permitted provided that the following conditions
  13:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  are met:
  14:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
  15:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *    Redistributions of source code must retain the above copyright
  16:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *    notice, this list of conditions and the following disclaimer.
  17:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
  18:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *    Redistributions in binary form must reproduce the above copyright
  19:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *    notice, this list of conditions and the following disclaimer in the
  20:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *    documentation and/or other materials provided with the distribution.
  21:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
  22:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *    Neither the name of Texas Instruments Incorporated nor the names of
  23:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *    its contributors may be used to endorse or promote products derived
  24:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *    from this software without specific prior written permission.
  25:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
  26:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  27:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  28:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  29:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  30:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  31:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  32:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  33:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  34:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  35:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** *
  38:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** ******************************************************************************/
  39:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
  40:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
  41:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
  42:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \addtogroup ccm_api
  43:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! @{
  44:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
  45:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
  46:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
  47:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** #include "aes.h"
  48:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** #include "ccm.h"
  49:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
  50:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
  51:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
  52:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
  53:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! CCMAuthEncryptStart starts the CCM operation
  54:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
  55:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param bEncrypt if set to 'true' then run encryption and set to 'false' for
  56:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! authentication only.
  57:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param ui8Mval is the length of authentication field in octets [0,2,4,6,8,10,
  58:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! 12, 14 or 16].
  59:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  pui8N is the pointer to 13-byte or 12-byte Nonce.
  60:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  pui8M  is the pointer to octet string 'm'/input message.
  61:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui16LenM is the length of pui8M[] in octets.
  62:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  pui8A is the pointer to octet string 'a'.
  63:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui16LenA is the Length of pui8A[] in octets.
  64:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui8KeyLocation is the location where the Key is stored in Key RAM.
  65:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  pui8Cstate is the pointer to output buffer.
  66:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui8CCMLVal is the ccm L Value to be used.
  67:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui8IntEnable if set to 'true' to enable interrupts or 'false' to
  68:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! disable interrupts.  Should be 'false' if \e bEncrypt is set to 'false'.
  69:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
  70:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
  71:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! The function will place in \e pui8Cstate the first ui8Mval bytes
  72:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! containing the Authentication Tag.
  73:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
  74:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! The \e ui8KeyLocation parameter is an enumerated type which specifies
  75:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! the Key Ram location in which the key is stored.
  76:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! This parameter can have any of the following values:
  77:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
  78:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_0
  79:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_1
  80:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_2,
  81:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_3,
  82:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_4,
  83:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_5,
  84:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_6,
  85:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_7
  86:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
  87:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \return  AES_SUCCESS if successful.
  88:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
  89:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
  90:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** uint8_t CCMAuthEncryptStart(bool bEncrypt,
  91:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint8_t ui8Mval,
  92:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint8_t *pui8N,
  93:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint8_t *pui8M,
  94:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint16_t ui16LenM,
  95:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint8_t *pui8A,
  96:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint16_t ui16LenA,
  97:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint8_t ui8KeyLocation,
  98:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint8_t *pui8Cstate,
  99:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint8_t ui8CCMLVal,
 100:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                             uint8_t ui8IntEnable)
 101:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** {
  26              		.loc 1 101 0
  27              		.cfi_startproc
  28              		@ args = 28, pretend = 0, frame = 40
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 8AB0     		sub	sp, sp, #40
  35              		.cfi_def_cfa_offset 48
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 BA60     		str	r2, [r7, #8]
  39 0008 7B60     		str	r3, [r7, #4]
  40 000a 0346     		mov	r3, r0
  41 000c FB73     		strb	r3, [r7, #15]
  42 000e 0B46     		mov	r3, r1
  43 0010 BB73     		strb	r3, [r7, #14]
 102:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint8_t  ui8A0[16];
 103:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint32_t ui32CtrlVal;
 104:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint8_t  ui8I;
 105:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     g_ui8CurrentAESOp = AES_CCM;
  44              		.loc 1 105 0
  45 0012 704B     		ldr	r3, .L15
  46 0014 0322     		movs	r2, #3
  47 0016 1A70     		strb	r2, [r3]
 106:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 107:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     IntDisable(INT_AES);
  48              		.loc 1 107 0
  49 0018 9F20     		movs	r0, #159
  50 001a FFF7FEFF 		bl	IntDisable
 108:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 109:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // workaround for AES registers not retained after PM2
 110:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CFG) = AES_CTRL_INT_CFG_LEVEL;
  51              		.loc 1 110 0
  52 001e 6E4B     		ldr	r3, .L15+4
  53 0020 0122     		movs	r2, #1
  54 0022 1A60     		str	r2, [r3]
 111:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_EN) = (AES_CTRL_INT_EN_RESULT_AV |
  55              		.loc 1 111 0
  56 0024 6D4B     		ldr	r3, .L15+8
  57 0026 0322     		movs	r2, #3
  58 0028 1A60     		str	r2, [r3]
 112:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                               AES_CTRL_INT_EN_DMA_IN_DONE);
 113:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 114:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_ALG_SEL) = AES_CTRL_ALG_SEL_AES;
  59              		.loc 1 114 0
  60 002a 6D4B     		ldr	r3, .L15+12
  61 002c 0222     		movs	r2, #2
  62 002e 1A60     		str	r2, [r3]
 115:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) |= (AES_CTRL_INT_CLR_DMA_IN_DONE |
  63              		.loc 1 115 0
  64 0030 6C4A     		ldr	r2, .L15+16
  65 0032 6C4B     		ldr	r3, .L15+16
  66 0034 1B68     		ldr	r3, [r3]
  67 0036 43F00303 		orr	r3, r3, #3
  68 003a 1360     		str	r3, [r2]
 116:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                 AES_CTRL_INT_CLR_RESULT_AV);
 117:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 118:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_KEY_STORE_READ_AREA) = (uint32_t)ui8KeyLocation;
  69              		.loc 1 118 0
  70 003c 6A4A     		ldr	r2, .L15+20
  71 003e 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
  72 0042 1360     		str	r3, [r2]
  73              	.L2:
 119:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 120:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     //wait until key is loaded to the AES module
 121:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     do
 122:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 123:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ASM_NOP;
  74              		.loc 1 123 0 discriminator 1
  75              	@ 123 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c" 1
  76 0044 00BF     		NOP
  77              	@ 0 "" 2
 124:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 125:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     while((HWREG(AES_KEY_STORE_READ_AREA) & AES_KEY_STORE_READ_AREA_BUSY));
  78              		.loc 1 125 0 discriminator 1
  79              		.thumb
  80 0046 684B     		ldr	r3, .L15+20
  81 0048 1B68     		ldr	r3, [r3]
  82 004a 002B     		cmp	r3, #0
  83 004c FADB     		blt	.L2
 126:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 127:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     //check for Key Store read error
 128:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT)& AES_CTRL_INT_STAT_KEY_ST_RD_ERR))
  84              		.loc 1 128 0
  85 004e 674B     		ldr	r3, .L15+24
  86 0050 1B68     		ldr	r3, [r3]
  87 0052 03F00053 		and	r3, r3, #536870912
  88 0056 002B     		cmp	r3, #0
  89 0058 07D0     		beq	.L3
 129:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 130:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // clear the Keystore Read error bit
 131:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_RD_ERR;
  90              		.loc 1 131 0
  91 005a 624A     		ldr	r2, .L15+16
  92 005c 614B     		ldr	r3, .L15+16
  93 005e 1B68     		ldr	r3, [r3]
  94 0060 43F00053 		orr	r3, r3, #536870912
  95 0064 1360     		str	r3, [r2]
 132:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         return (AES_KEYSTORE_READ_ERROR);
  96              		.loc 1 132 0
  97 0066 0123     		movs	r3, #1
  98 0068 AFE0     		b	.L14
  99              	.L3:
 133:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 134:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 135:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // Prepare the initialization vector
 136:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui8A0[0] = ui8CCMLVal - 1;  // Lval
 100              		.loc 1 136 0
 101 006a 97F84430 		ldrb	r3, [r7, #68]
 102 006e 013B     		subs	r3, r3, #1
 103 0070 DBB2     		uxtb	r3, r3
 104 0072 3B74     		strb	r3, [r7, #16]
 137:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 138:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     for(ui8I = 0; ui8I < 13; ui8I++)
 105              		.loc 1 138 0
 106 0074 0023     		movs	r3, #0
 107 0076 87F82330 		strb	r3, [r7, #35]
 108 007a 11E0     		b	.L5
 109              	.L6:
 139:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 140:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ui8A0[ui8I + 1] = pui8N[ui8I];
 110              		.loc 1 140 0 discriminator 3
 111 007c 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 112 0080 0133     		adds	r3, r3, #1
 113 0082 97F82320 		ldrb	r2, [r7, #35]	@ zero_extendqisi2
 114 0086 B968     		ldr	r1, [r7, #8]
 115 0088 0A44     		add	r2, r2, r1
 116 008a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 117 008c 07F12801 		add	r1, r7, #40
 118 0090 0B44     		add	r3, r3, r1
 119 0092 03F8182C 		strb	r2, [r3, #-24]
 138:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 120              		.loc 1 138 0 discriminator 3
 121 0096 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 122 009a 0133     		adds	r3, r3, #1
 123 009c 87F82330 		strb	r3, [r7, #35]
 124              	.L5:
 138:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 125              		.loc 1 138 0 is_stmt 0 discriminator 1
 126 00a0 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 127 00a4 0C2B     		cmp	r3, #12
 128 00a6 E9D9     		bls	.L6
 141:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 142:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(3 == ui8CCMLVal)
 129              		.loc 1 142 0 is_stmt 1
 130 00a8 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 131 00ac 032B     		cmp	r3, #3
 132 00ae 01D1     		bne	.L7
 143:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 144:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ui8A0[13] = 0;
 133              		.loc 1 144 0
 134 00b0 0023     		movs	r3, #0
 135 00b2 7B77     		strb	r3, [r7, #29]
 136              	.L7:
 145:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 146:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui8A0[14] = 0;  // initialize counter to 0
 137              		.loc 1 146 0
 138 00b4 0023     		movs	r3, #0
 139 00b6 BB77     		strb	r3, [r7, #30]
 147:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui8A0[15] = 0;  // initialize counter to 0
 140              		.loc 1 147 0
 141 00b8 0023     		movs	r3, #0
 142 00ba FB77     		strb	r3, [r7, #31]
 148:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 149:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // write initialization vector
 150:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_IV_0) = ((uint32_t  *)&ui8A0)[0];
 143              		.loc 1 150 0
 144 00bc 4C4A     		ldr	r2, .L15+28
 145 00be 07F11003 		add	r3, r7, #16
 146 00c2 1B68     		ldr	r3, [r3]
 147 00c4 1360     		str	r3, [r2]
 151:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_IV_1) = ((uint32_t  *)&ui8A0)[1];
 148              		.loc 1 151 0
 149 00c6 4B4A     		ldr	r2, .L15+32
 150 00c8 7B69     		ldr	r3, [r7, #20]
 151 00ca 1360     		str	r3, [r2]
 152:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_IV_2) = ((uint32_t  *)&ui8A0)[2];
 152              		.loc 1 152 0
 153 00cc 4A4A     		ldr	r2, .L15+36
 154 00ce BB69     		ldr	r3, [r7, #24]
 155 00d0 1360     		str	r3, [r2]
 153:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_IV_3) = ((uint32_t  *)&ui8A0)[3];
 156              		.loc 1 153 0
 157 00d2 4A4A     		ldr	r2, .L15+40
 158 00d4 FB69     		ldr	r3, [r7, #28]
 159 00d6 1360     		str	r3, [r2]
 154:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 155:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // configure AES engine
 156:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal = ((ui8CCMLVal - 1) <<
 160              		.loc 1 156 0
 161 00d8 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 162 00dc 013B     		subs	r3, r3, #1
 163 00de DB04     		lsls	r3, r3, #19
 164 00e0 7B62     		str	r3, [r7, #36]
 157:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                    AES_AES_CTRL_CCM_L_S);            // CCM_L
 158:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 159:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(ui8Mval >= 2)
 165              		.loc 1 159 0
 166 00e2 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 167 00e4 012B     		cmp	r3, #1
 168 00e6 07D9     		bls	.L9
 160:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 161:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ui32CtrlVal |= (((ui8Mval - 2) >> 1) <<
 169              		.loc 1 161 0
 170 00e8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 171 00ea 023B     		subs	r3, r3, #2
 172 00ec 5B10     		asrs	r3, r3, #1
 173 00ee 9B05     		lsls	r3, r3, #22
 174 00f0 1A46     		mov	r2, r3
 175 00f2 7B6A     		ldr	r3, [r7, #36]
 176 00f4 1343     		orrs	r3, r3, r2
 177 00f6 7B62     		str	r3, [r7, #36]
 178              	.L9:
 162:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                         AES_AES_CTRL_CCM_M_S);           // CCM_M
 163:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 164:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     else
 165:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 166:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ui32CtrlVal |= (0 <<
 167:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                         AES_AES_CTRL_CCM_M_S);           // CCM_M
 168:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 169:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= (AES_AES_CTRL_CCM);               // CCM
 179              		.loc 1 169 0
 180 00f8 7B6A     		ldr	r3, [r7, #36]
 181 00fa 43F48023 		orr	r3, r3, #262144
 182 00fe 7B62     		str	r3, [r7, #36]
 170:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= (1 << AES_AES_CTRL_key_size_S);   // key = 128
 183              		.loc 1 170 0
 184 0100 7B6A     		ldr	r3, [r7, #36]
 185 0102 43F00803 		orr	r3, r3, #8
 186 0106 7B62     		str	r3, [r7, #36]
 171:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= (1 << AES_AES_CTRL_input_ready);  // encryption
 187              		.loc 1 171 0
 188 0108 7B6A     		ldr	r3, [r7, #36]
 189 010a 43F00403 		orr	r3, r3, #4
 190 010e 7B62     		str	r3, [r7, #36]
 172:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= AES_AES_CTRL_CTR;                 // CTR
 191              		.loc 1 172 0
 192 0110 7B6A     		ldr	r3, [r7, #36]
 193 0112 43F04003 		orr	r3, r3, #64
 194 0116 7B62     		str	r3, [r7, #36]
 173:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= AES_AES_CTRL_save_context;        // save context
 195              		.loc 1 173 0
 196 0118 7B6A     		ldr	r3, [r7, #36]
 197 011a 43F00053 		orr	r3, r3, #536870912
 198 011e 7B62     		str	r3, [r7, #36]
 174:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= (0x3 << AES_AES_CTRL_ctr_width_S);// CTR width 128
 199              		.loc 1 174 0
 200 0120 7B6A     		ldr	r3, [r7, #36]
 201 0122 43F4C073 		orr	r3, r3, #384
 202 0126 7B62     		str	r3, [r7, #36]
 175:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // program AES-CCM-128 encryption
 176:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_CTRL) = ui32CtrlVal;
 203              		.loc 1 176 0
 204 0128 354A     		ldr	r2, .L15+44
 205 012a 7B6A     		ldr	r3, [r7, #36]
 206 012c 1360     		str	r3, [r2]
 177:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 178:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // write the length of the crypto block (lo)
 179:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_C_LENGTH_0) = (uint16_t)(ui16LenM) ;
 207              		.loc 1 179 0
 208 012e 354A     		ldr	r2, .L15+48
 209 0130 3B8E     		ldrh	r3, [r7, #48]
 210 0132 1360     		str	r3, [r2]
 180:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // write the length of the crypto block (hi)
 181:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_C_LENGTH_1)  =  0;
 211              		.loc 1 181 0
 212 0134 344B     		ldr	r3, .L15+52
 213 0136 0022     		movs	r2, #0
 214 0138 1A60     		str	r2, [r3]
 182:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 183:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // write the length of the AAD data block may be non-block size aligned
 184:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_AUTH_LENGTH) = ui16LenA;
 215              		.loc 1 184 0
 216 013a 344A     		ldr	r2, .L15+56
 217 013c 3B8F     		ldrh	r3, [r7, #56]
 218 013e 1360     		str	r3, [r2]
 185:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 186:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(ui16LenA != 0)
 219              		.loc 1 186 0
 220 0140 3B8F     		ldrh	r3, [r7, #56]
 221 0142 002B     		cmp	r3, #0
 222 0144 1BD0     		beq	.L10
 187:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 188:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // configure DMAC to fetch the AAD data
 189:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // enable DMA channel 0
 190:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_CTRL)     = AES_DMAC_CH0_CTRL_EN;
 223              		.loc 1 190 0
 224 0146 324B     		ldr	r3, .L15+60
 225 0148 0122     		movs	r2, #1
 226 014a 1A60     		str	r2, [r3]
 191:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // base address of the AAD input data in ext. memory
 192:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_EXTADDR)  = (uint32_t)pui8A;
 227              		.loc 1 192 0
 228 014c 314A     		ldr	r2, .L15+64
 229 014e 7B6B     		ldr	r3, [r7, #52]
 230 0150 1360     		str	r3, [r2]
 193:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // AAD data length in bytes, equal to the AAD length len
 194:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         //({aad data}) (may be non-block size aligned)
 195:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 196:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_DMALENGTH) = ui16LenA;
 231              		.loc 1 196 0
 232 0152 314A     		ldr	r2, .L15+68
 233 0154 3B8F     		ldrh	r3, [r7, #56]
 234 0156 1360     		str	r3, [r2]
 235              	.L11:
 197:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 198:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // wait for completion of the AAD data transfer, DMA_IN_DONE
 199:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         do
 200:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         {
 201:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ASM_NOP;
 236              		.loc 1 201 0 discriminator 1
 237              	@ 201 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c" 1
 238 0158 00BF     		NOP
 239              	@ 0 "" 2
 202:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         }
 203:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         while(!(HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_IN_DONE));
 240              		.loc 1 203 0 discriminator 1
 241              		.thumb
 242 015a 244B     		ldr	r3, .L15+24
 243 015c 1B68     		ldr	r3, [r3]
 244 015e 03F00203 		and	r3, r3, #2
 245 0162 002B     		cmp	r3, #0
 246 0164 F8D0     		beq	.L11
 204:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 205:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // check for the absence of error
 206:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR))
 247              		.loc 1 206 0
 248 0166 214B     		ldr	r3, .L15+24
 249 0168 1B68     		ldr	r3, [r3]
 250 016a 002B     		cmp	r3, #0
 251 016c 07DA     		bge	.L10
 207:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         {
 208:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             //clear the DMA error
 209:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_DMA_BUS_ERR;
 252              		.loc 1 209 0
 253 016e 1D4A     		ldr	r2, .L15+16
 254 0170 1C4B     		ldr	r3, .L15+16
 255 0172 1B68     		ldr	r3, [r3]
 256 0174 43F00043 		orr	r3, r3, #-2147483648
 257 0178 1360     		str	r3, [r2]
 210:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             return (AES_DMA_BUS_ERROR);
 258              		.loc 1 210 0
 259 017a 0323     		movs	r3, #3
 260 017c 25E0     		b	.L14
 261              	.L10:
 211:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         }
 212:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 213:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 214:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // clear interrupt status
 215:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) = (AES_CTRL_INT_CLR_DMA_IN_DONE |
 262              		.loc 1 215 0
 263 017e 194B     		ldr	r3, .L15+16
 264 0180 0322     		movs	r2, #3
 265 0182 1A60     		str	r2, [r3]
 216:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                AES_CTRL_INT_CLR_RESULT_AV);
 217:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(ui8IntEnable)
 266              		.loc 1 217 0
 267 0184 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 268 0188 002B     		cmp	r3, #0
 269 018a 05D0     		beq	.L12
 218:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 219:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         IntPendClear(INT_AES);
 270              		.loc 1 219 0
 271 018c 9F20     		movs	r0, #159
 272 018e FFF7FEFF 		bl	IntPendClear
 220:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         IntEnable(INT_AES);
 273              		.loc 1 220 0
 274 0192 9F20     		movs	r0, #159
 275 0194 FFF7FEFF 		bl	IntEnable
 276              	.L12:
 221:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 222:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 223:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // enable result available bit in interrupt enable
 224:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_EN) = AES_CTRL_INT_EN_RESULT_AV;
 277              		.loc 1 224 0
 278 0198 104B     		ldr	r3, .L15+8
 279 019a 0122     		movs	r2, #1
 280 019c 1A60     		str	r2, [r3]
 225:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 226:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(bEncrypt)
 281              		.loc 1 226 0
 282 019e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 283 01a0 002B     		cmp	r3, #0
 284 01a2 11D0     		beq	.L13
 227:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 228:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // configure DMAC
 229:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // enable DMA channel 0
 230:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_CTRL) = AES_DMAC_CH0_CTRL_EN;
 285              		.loc 1 230 0
 286 01a4 1A4B     		ldr	r3, .L15+60
 287 01a6 0122     		movs	r2, #1
 288 01a8 1A60     		str	r2, [r3]
 231:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // base address of the payload data in ext. memory
 232:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_EXTADDR) = (uint32_t)pui8M;
 289              		.loc 1 232 0
 290 01aa 1A4A     		ldr	r2, .L15+64
 291 01ac 7B68     		ldr	r3, [r7, #4]
 292 01ae 1360     		str	r3, [r2]
 233:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // payload data length in bytes, equal to the message length
 234:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         //len({crypto_data})
 235:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_DMALENGTH) = (ui16LenM);
 293              		.loc 1 235 0
 294 01b0 194A     		ldr	r2, .L15+68
 295 01b2 3B8E     		ldrh	r3, [r7, #48]
 296 01b4 1360     		str	r3, [r2]
 236:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 237:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // enable DMA channel 1
 238:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_CTRL) = AES_DMAC_CH1_CTRL_EN;
 297              		.loc 1 238 0
 298 01b6 194B     		ldr	r3, .L15+72
 299 01b8 0122     		movs	r2, #1
 300 01ba 1A60     		str	r2, [r3]
 239:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // base address of the output data buffer
 240:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_EXTADDR) = (uint32_t)pui8M;
 301              		.loc 1 240 0
 302 01bc 184A     		ldr	r2, .L15+76
 303 01be 7B68     		ldr	r3, [r7, #4]
 304 01c0 1360     		str	r3, [r2]
 241:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // output data length in bytes, equal to the result data length
 242:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // len({crypto data})
 243:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_DMALENGTH) = ui16LenM;
 305              		.loc 1 243 0
 306 01c2 184A     		ldr	r2, .L15+80
 307 01c4 3B8E     		ldrh	r3, [r7, #48]
 308 01c6 1360     		str	r3, [r2]
 309              	.L13:
 244:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 245:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     return (AES_SUCCESS);
 310              		.loc 1 245 0
 311 01c8 0023     		movs	r3, #0
 312              	.L14:
 246:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 247:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** }
 313              		.loc 1 247 0 discriminator 1
 314 01ca 1846     		mov	r0, r3
 315 01cc 2837     		adds	r7, r7, #40
 316              		.cfi_def_cfa_offset 8
 317 01ce BD46     		mov	sp, r7
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 01d0 80BD     		pop	{r7, pc}
 321              	.L16:
 322 01d2 00BF     		.align	2
 323              	.L15:
 324 01d4 00000000 		.word	g_ui8CurrentAESOp
 325 01d8 80B70840 		.word	1074313088
 326 01dc 84B70840 		.word	1074313092
 327 01e0 00B70840 		.word	1074312960
 328 01e4 88B70840 		.word	1074313096
 329 01e8 0CB40840 		.word	1074312204
 330 01ec 90B70840 		.word	1074313104
 331 01f0 40B50840 		.word	1074312512
 332 01f4 44B50840 		.word	1074312516
 333 01f8 48B50840 		.word	1074312520
 334 01fc 4CB50840 		.word	1074312524
 335 0200 50B50840 		.word	1074312528
 336 0204 54B50840 		.word	1074312532
 337 0208 58B50840 		.word	1074312536
 338 020c 5CB50840 		.word	1074312540
 339 0210 00B00840 		.word	1074311168
 340 0214 04B00840 		.word	1074311172
 341 0218 0CB00840 		.word	1074311180
 342 021c 20B00840 		.word	1074311200
 343 0220 24B00840 		.word	1074311204
 344 0224 2CB00840 		.word	1074311212
 345              		.cfi_endproc
 346              	.LFE0:
 348              		.align	2
 349              		.global	CCMAuthEncryptCheckResult
 350              		.thumb
 351              		.thumb_func
 353              	CCMAuthEncryptCheckResult:
 354              	.LFB1:
 248:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 249:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 250:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 251:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! CCMAuthEncryptCheckResult checks the status of CCM encrypt operation.
 252:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 253:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \return  if result is available or error occurs, function returns true.  
 254:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! If result is not yet available or no error occurs, returns false
 255:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 256:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 257:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 258:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** uint8_t CCMAuthEncryptCheckResult(void)
 259:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** {
 355              		.loc 1 259 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0228 80B4     		push	{r7}
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 7, -4
 363 022a 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
 260:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     return (((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_RESULT_AV)) ||
 365              		.loc 1 260 0
 366 022c 0F4B     		ldr	r3, .L22
 367 022e 1B78     		ldrb	r3, [r3]
 368 0230 DBB2     		uxtb	r3, r3
 369 0232 03F00103 		and	r3, r3, #1
 261:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR)) ||
 262:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_WR_ERR)) ||
 370              		.loc 1 262 0
 371 0236 002B     		cmp	r3, #0
 372 0238 0FD1     		bne	.L18
 261:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR)) ||
 373              		.loc 1 261 0
 374 023a 0C4B     		ldr	r3, .L22
 375 023c 1B78     		ldrb	r3, [r3]
 376              		.loc 1 262 0
 377 023e 0B4B     		ldr	r3, .L22
 378 0240 1B78     		ldrb	r3, [r3]
 379 0242 DBB2     		uxtb	r3, r3
 380 0244 03F08043 		and	r3, r3, #1073741824
 261:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR)) ||
 381              		.loc 1 261 0
 382 0248 002B     		cmp	r3, #0
 383 024a 06D1     		bne	.L18
 263:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR)));
 384              		.loc 1 263 0 discriminator 2
 385 024c 074B     		ldr	r3, .L22
 386 024e 1B78     		ldrb	r3, [r3]
 387 0250 DBB2     		uxtb	r3, r3
 388 0252 03F00053 		and	r3, r3, #536870912
 262:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR)));
 389              		.loc 1 262 0 discriminator 2
 390 0256 002B     		cmp	r3, #0
 391 0258 01D0     		beq	.L19
 392              	.L18:
 262:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR)));
 393              		.loc 1 262 0 is_stmt 0 discriminator 1
 394 025a 0123     		movs	r3, #1
 395 025c 00E0     		b	.L20
 396              	.L19:
 262:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR)));
 397              		.loc 1 262 0 discriminator 3
 398 025e 0023     		movs	r3, #0
 399              	.L20:
 260:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ((HWREGB(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR)) ||
 400              		.loc 1 260 0 is_stmt 1
 401 0260 DBB2     		uxtb	r3, r3
 264:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** }
 402              		.loc 1 264 0
 403 0262 1846     		mov	r0, r3
 404 0264 BD46     		mov	sp, r7
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 0266 5DF8047B 		ldr	r7, [sp], #4
 408              		.cfi_restore 7
 409              		.cfi_def_cfa_offset 0
 410 026a 7047     		bx	lr
 411              	.L23:
 412              		.align	2
 413              	.L22:
 414 026c 90B70840 		.word	1074313104
 415              		.cfi_endproc
 416              	.LFE1:
 418              		.align	2
 419              		.global	CCMAuthEncryptGetResult
 420              		.thumb
 421              		.thumb_func
 423              	CCMAuthEncryptGetResult:
 424              	.LFB2:
 265:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 266:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 267:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 268:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! CCMAuthEncryptGetResult gets the result of CCM operation.  This
 269:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! function should be called after CCCMAuthEncryptStart is called.
 270:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 271:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param ui8Mval is length of authentication field in octets [0,2,4,6,8,10,12,
 272:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!  14 or 16].
 273:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param ui16LenM  is length of message pui8M[] in octets.
 274:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param pui8Cstate is pointer to AES state buffer.
 275:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 276:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \return  AES_SUCCESS if successful.
 277:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 278:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 279:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** uint8_t CCMAuthEncryptGetResult(uint8_t ui8Mval,
 280:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                 uint16_t ui16LenM,
 281:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                 uint8_t *pui8Cstate)
 282:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 283:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** {
 425              		.loc 1 283 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 32
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0270 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0272 88B0     		sub	sp, sp, #32
 434              		.cfi_def_cfa_offset 40
 435 0274 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 437 0276 0346     		mov	r3, r0
 438 0278 3A60     		str	r2, [r7]
 439 027a FB71     		strb	r3, [r7, #7]
 440 027c 0B46     		mov	r3, r1	@ movhi
 441 027e BB80     		strh	r3, [r7, #4]	@ movhi
 284:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint8_t volatile ui8MIC[16];
 285:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint8_t ui8I;
 286:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 287:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR))
 442              		.loc 1 287 0
 443 0280 374B     		ldr	r3, .L32
 444 0282 1B68     		ldr	r3, [r3]
 445 0284 002B     		cmp	r3, #0
 446 0286 07DA     		bge	.L25
 288:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 289:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // clear the DMA error bit
 290:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_DMA_BUS_ERR;
 447              		.loc 1 290 0
 448 0288 364A     		ldr	r2, .L32+4
 449 028a 364B     		ldr	r3, .L32+4
 450 028c 1B68     		ldr	r3, [r3]
 451 028e 43F00043 		orr	r3, r3, #-2147483648
 452 0292 1360     		str	r3, [r2]
 291:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         return (AES_DMA_BUS_ERROR);
 453              		.loc 1 291 0
 454 0294 0323     		movs	r3, #3
 455 0296 5EE0     		b	.L26
 456              	.L25:
 292:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 293:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_WR_ERR))
 457              		.loc 1 293 0
 458 0298 314B     		ldr	r3, .L32
 459 029a 1B68     		ldr	r3, [r3]
 460 029c 03F08043 		and	r3, r3, #1073741824
 461 02a0 002B     		cmp	r3, #0
 462 02a2 07D0     		beq	.L27
 294:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 295:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // clear the Key Store Write error bit
 296:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_WR_ERR;
 463              		.loc 1 296 0
 464 02a4 2F4A     		ldr	r2, .L32+4
 465 02a6 2F4B     		ldr	r3, .L32+4
 466 02a8 1B68     		ldr	r3, [r3]
 467 02aa 43F08043 		orr	r3, r3, #1073741824
 468 02ae 1360     		str	r3, [r2]
 297:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         return (AES_KEYSTORE_WRITE_ERROR);
 469              		.loc 1 297 0
 470 02b0 0223     		movs	r3, #2
 471 02b2 50E0     		b	.L26
 472              	.L27:
 298:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 299:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR))
 473              		.loc 1 299 0
 474 02b4 2A4B     		ldr	r3, .L32
 475 02b6 1B68     		ldr	r3, [r3]
 476 02b8 03F00053 		and	r3, r3, #536870912
 477 02bc 002B     		cmp	r3, #0
 478 02be 07D0     		beq	.L28
 300:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 301:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // clear the Key Store Read error bit
 302:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_RD_ERR;
 479              		.loc 1 302 0
 480 02c0 284A     		ldr	r2, .L32+4
 481 02c2 284B     		ldr	r3, .L32+4
 482 02c4 1B68     		ldr	r3, [r3]
 483 02c6 43F00053 		orr	r3, r3, #536870912
 484 02ca 1360     		str	r3, [r2]
 303:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         return (AES_KEYSTORE_READ_ERROR);
 485              		.loc 1 303 0
 486 02cc 0123     		movs	r3, #1
 487 02ce 42E0     		b	.L26
 488              	.L28:
 304:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 305:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 306:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     IntDisable(INT_AES);
 489              		.loc 1 306 0
 490 02d0 9F20     		movs	r0, #159
 491 02d2 FFF7FEFF 		bl	IntDisable
 307:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 308:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // disable the master control/DMA clock
 309:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_ALG_SEL) = 0x00000000;
 492              		.loc 1 309 0
 493 02d6 244B     		ldr	r3, .L32+8
 494 02d8 0022     		movs	r2, #0
 495 02da 1A60     		str	r2, [r3]
 496              	.L29:
 310:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 311:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // read tag
 312:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // wait for the context ready bit [30]
 313:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     do
 314:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 315:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ASM_NOP;
 497              		.loc 1 315 0 discriminator 1
 498              	@ 315 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c" 1
 499 02dc 00BF     		NOP
 500              	@ 0 "" 2
 316:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 317:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     while((HWREG(AES_AES_CTRL) & AES_AES_CTRL_saved_context_ready) !=
 501              		.loc 1 317 0 discriminator 1
 502              		.thumb
 503 02de 234B     		ldr	r3, .L32+12
 504 02e0 1B68     		ldr	r3, [r3]
 505 02e2 03F08043 		and	r3, r3, #1073741824
 318:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             AES_AES_CTRL_saved_context_ready);
 506              		.loc 1 318 0 discriminator 1
 507 02e6 002B     		cmp	r3, #0
 508 02e8 F8D0     		beq	.L29
 319:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 320:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // Read the tag registers
 321:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[0] = HWREG(AES_AES_TAG_OUT_0);
 509              		.loc 1 321 0
 510 02ea 07F10C03 		add	r3, r7, #12
 511 02ee 204A     		ldr	r2, .L32+16
 512 02f0 1268     		ldr	r2, [r2]
 513 02f2 1A60     		str	r2, [r3]
 322:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[1] = HWREG(AES_AES_TAG_OUT_1);
 514              		.loc 1 322 0
 515 02f4 07F10C03 		add	r3, r7, #12
 516 02f8 0433     		adds	r3, r3, #4
 517 02fa 1E4A     		ldr	r2, .L32+20
 518 02fc 1268     		ldr	r2, [r2]
 519 02fe 1A60     		str	r2, [r3]
 323:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[2] = HWREG(AES_AES_TAG_OUT_2);
 520              		.loc 1 323 0
 521 0300 07F10C03 		add	r3, r7, #12
 522 0304 0833     		adds	r3, r3, #8
 523 0306 1C4A     		ldr	r2, .L32+24
 524 0308 1268     		ldr	r2, [r2]
 525 030a 1A60     		str	r2, [r3]
 324:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[3] = HWREG(AES_AES_TAG_OUT_3);
 526              		.loc 1 324 0
 527 030c 07F10C03 		add	r3, r7, #12
 528 0310 0C33     		adds	r3, r3, #12
 529 0312 1A4A     		ldr	r2, .L32+28
 530 0314 1268     		ldr	r2, [r2]
 531 0316 1A60     		str	r2, [r3]
 325:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 326:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // clear the interrupt status
 327:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) |= (AES_CTRL_INT_CLR_DMA_IN_DONE |
 532              		.loc 1 327 0
 533 0318 124A     		ldr	r2, .L32+4
 534 031a 124B     		ldr	r3, .L32+4
 535 031c 1B68     		ldr	r3, [r3]
 536 031e 43F00303 		orr	r3, r3, #3
 537 0322 1360     		str	r3, [r2]
 328:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                 AES_CTRL_INT_CLR_RESULT_AV);
 329:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 330:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // copy tag to pui8Cstate
 331:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     for(ui8I = 0; ui8I < ui8Mval; ui8I++)
 538              		.loc 1 331 0
 539 0324 0023     		movs	r3, #0
 540 0326 FB77     		strb	r3, [r7, #31]
 541 0328 0DE0     		b	.L30
 542              	.L31:
 332:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 333:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         pui8Cstate[ui8I] = ui8MIC[ui8I];
 543              		.loc 1 333 0 discriminator 3
 544 032a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 545 032c 3A68     		ldr	r2, [r7]
 546 032e 1344     		add	r3, r3, r2
 547 0330 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 548 0332 07F12001 		add	r1, r7, #32
 549 0336 0A44     		add	r2, r2, r1
 550 0338 12F8142C 		ldrb	r2, [r2, #-20]
 551 033c D2B2     		uxtb	r2, r2
 552 033e 1A70     		strb	r2, [r3]
 331:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 553              		.loc 1 331 0 discriminator 3
 554 0340 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 555 0342 0133     		adds	r3, r3, #1
 556 0344 FB77     		strb	r3, [r7, #31]
 557              	.L30:
 331:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 558              		.loc 1 331 0 is_stmt 0 discriminator 1
 559 0346 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 560 0348 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 561 034a 9A42     		cmp	r2, r3
 562 034c EDD3     		bcc	.L31
 334:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 335:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     g_ui8CurrentAESOp = AES_NONE;
 563              		.loc 1 335 0 is_stmt 1
 564 034e 0C4B     		ldr	r3, .L32+32
 565 0350 0022     		movs	r2, #0
 566 0352 1A70     		strb	r2, [r3]
 336:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     return (AES_SUCCESS);
 567              		.loc 1 336 0
 568 0354 0023     		movs	r3, #0
 569              	.L26:
 337:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** }
 570              		.loc 1 337 0
 571 0356 1846     		mov	r0, r3
 572 0358 2037     		adds	r7, r7, #32
 573              		.cfi_def_cfa_offset 8
 574 035a BD46     		mov	sp, r7
 575              		.cfi_def_cfa_register 13
 576              		@ sp needed
 577 035c 80BD     		pop	{r7, pc}
 578              	.L33:
 579 035e 00BF     		.align	2
 580              	.L32:
 581 0360 90B70840 		.word	1074313104
 582 0364 88B70840 		.word	1074313096
 583 0368 00B70840 		.word	1074312960
 584 036c 50B50840 		.word	1074312528
 585 0370 70B50840 		.word	1074312560
 586 0374 74B50840 		.word	1074312564
 587 0378 78B50840 		.word	1074312568
 588 037c 7CB50840 		.word	1074312572
 589 0380 00000000 		.word	g_ui8CurrentAESOp
 590              		.cfi_endproc
 591              	.LFE2:
 593              		.align	2
 594              		.global	CCMInvAuthDecryptStart
 595              		.thumb
 596              		.thumb_func
 598              	CCMInvAuthDecryptStart:
 599              	.LFB3:
 338:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 339:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 340:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 341:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! CCMInvAuthDecryptStart starts the CCM Decryption and Inverse
 342:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! Authentication operation.
 343:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 344:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param bDecrypt if set to 'true' then run decryption, set to 'false' if
 345:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! authentication only
 346:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param ui8Mval is the length of authentication field in octets [0,2,4,6,8,
 347:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! 10,12,14 or 16].
 348:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  pui8N is the pointer to 13-byte or 12-byte Nonce.
 349:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  pui8C  is the pointer to octet string 'c' = 'm' || auth tag T.
 350:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui16LenC is the length of pui8C[] in octets.
 351:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  pui8A is the pointer to octet string 'a'.
 352:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui16LenA is the Length of pui8A[] in octets.
 353:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui8KeyLocation is the location where the Key is stored in Key RAM.
 354:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  pui8Cstate is the pointer to output buffer.  (cannot be part
 355:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! of pui8C[]).
 356:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui8CCMLVal is the ccm L Value to be used.
 357:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param  ui8IntEnable if set to 'true' to enable interrupts or 'false' to
 358:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! disable interuupts.  Set to 'false' if \e bDecrypt is set to 'false'.
 359:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 360:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 361:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! The function will place in \e pui8Cstate the first ui8Mval bytes of 
 362:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! containing the Authentication Tag.
 363:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 364:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! The \e ui8KeyLocation parameter is an enumerated type which specifies
 365:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! the Key Ram locationin which the key is stored.
 366:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! This parameter can have any of the following values:
 367:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 368:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_0
 369:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_1
 370:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_2,
 371:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_3,
 372:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_4,
 373:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_5,
 374:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_6,
 375:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! - \b KEY_AREA_7
 376:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 377:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \return  AES_SUCCESS if successful.
 378:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 379:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 380:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** uint8_t CCMInvAuthDecryptStart(bool bDecrypt,
 381:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint8_t ui8Mval,
 382:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint8_t *pui8N,
 383:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint8_t *pui8C,
 384:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint16_t ui16LenC,
 385:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint8_t *pui8A,
 386:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint16_t ui16LenA,
 387:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint8_t ui8KeyLocation,
 388:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint8_t *pui8Cstate,
 389:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint8_t ui8CCMLVal,
 390:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                uint8_t ui8IntEnable)
 391:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** {
 600              		.loc 1 391 0
 601              		.cfi_startproc
 602              		@ args = 28, pretend = 0, frame = 40
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604 0384 80B5     		push	{r7, lr}
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0386 8AB0     		sub	sp, sp, #40
 609              		.cfi_def_cfa_offset 48
 610 0388 00AF     		add	r7, sp, #0
 611              		.cfi_def_cfa_register 7
 612 038a BA60     		str	r2, [r7, #8]
 613 038c 7B60     		str	r3, [r7, #4]
 614 038e 0346     		mov	r3, r0
 615 0390 FB73     		strb	r3, [r7, #15]
 616 0392 0B46     		mov	r3, r1
 617 0394 BB73     		strb	r3, [r7, #14]
 392:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint16_t ui16LenM = ui16LenC - ui8Mval;
 618              		.loc 1 392 0
 619 0396 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 620 0398 9BB2     		uxth	r3, r3
 621 039a 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 622 039c D31A     		subs	r3, r2, r3
 623 039e 3B84     		strh	r3, [r7, #32]	@ movhi
 393:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint8_t  ui8A0[16];
 394:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint32_t ui32CtrlVal;
 395:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint8_t  ui8I;
 396:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     g_ui8CurrentAESOp = AES_CCM;
 624              		.loc 1 396 0
 625 03a0 6A4B     		ldr	r3, .L48
 626 03a2 0322     		movs	r2, #3
 627 03a4 1A70     		strb	r2, [r3]
 397:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 398:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // workaround for AES registers not retained after PM2
 399:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CFG) = AES_CTRL_INT_CFG_LEVEL;
 628              		.loc 1 399 0
 629 03a6 6A4B     		ldr	r3, .L48+4
 630 03a8 0122     		movs	r2, #1
 631 03aa 1A60     		str	r2, [r3]
 400:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_EN) = (AES_CTRL_INT_EN_RESULT_AV |
 632              		.loc 1 400 0
 633 03ac 694B     		ldr	r3, .L48+8
 634 03ae 0322     		movs	r2, #3
 635 03b0 1A60     		str	r2, [r3]
 401:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                               AES_CTRL_INT_EN_DMA_IN_DONE);
 402:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 403:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_ALG_SEL) = AES_CTRL_ALG_SEL_AES;
 636              		.loc 1 403 0
 637 03b2 694B     		ldr	r3, .L48+12
 638 03b4 0222     		movs	r2, #2
 639 03b6 1A60     		str	r2, [r3]
 404:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) = (AES_CTRL_INT_CLR_DMA_IN_DONE |
 640              		.loc 1 404 0
 641 03b8 684B     		ldr	r3, .L48+16
 642 03ba 0322     		movs	r2, #3
 643 03bc 1A60     		str	r2, [r3]
 405:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                AES_CTRL_INT_CLR_RESULT_AV);
 406:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 407:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_KEY_STORE_READ_AREA) = (uint32_t)ui8KeyLocation;
 644              		.loc 1 407 0
 645 03be 684A     		ldr	r2, .L48+20
 646 03c0 97F83C30 		ldrb	r3, [r7, #60]	@ zero_extendqisi2
 647 03c4 1360     		str	r3, [r2]
 648              	.L35:
 408:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 409:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     //wait until key is loaded to the AES module
 410:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     do
 411:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 412:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ASM_NOP;
 649              		.loc 1 412 0 discriminator 1
 650              	@ 412 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c" 1
 651 03c6 00BF     		NOP
 652              	@ 0 "" 2
 413:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 414:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     while((HWREG(AES_KEY_STORE_READ_AREA) & AES_KEY_STORE_READ_AREA_BUSY));
 653              		.loc 1 414 0 discriminator 1
 654              		.thumb
 655 03c8 654B     		ldr	r3, .L48+20
 656 03ca 1B68     		ldr	r3, [r3]
 657 03cc 002B     		cmp	r3, #0
 658 03ce FADB     		blt	.L35
 415:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 416:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     //check for Key Store read error
 417:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT)& AES_CTRL_INT_STAT_KEY_ST_RD_ERR))
 659              		.loc 1 417 0
 660 03d0 644B     		ldr	r3, .L48+24
 661 03d2 1B68     		ldr	r3, [r3]
 662 03d4 03F00053 		and	r3, r3, #536870912
 663 03d8 002B     		cmp	r3, #0
 664 03da 07D0     		beq	.L36
 418:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 419:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // clear the Keystore Read error bit
 420:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_RD_ERR;
 665              		.loc 1 420 0
 666 03dc 5F4A     		ldr	r2, .L48+16
 667 03de 5F4B     		ldr	r3, .L48+16
 668 03e0 1B68     		ldr	r3, [r3]
 669 03e2 43F00053 		orr	r3, r3, #536870912
 670 03e6 1360     		str	r3, [r2]
 421:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         return (AES_KEYSTORE_READ_ERROR);
 671              		.loc 1 421 0
 672 03e8 0123     		movs	r3, #1
 673 03ea ABE0     		b	.L47
 674              	.L36:
 422:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 423:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 424:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // Prepare the initialization vector
 425:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui8A0[0] = ui8CCMLVal - 1;          // Lval
 675              		.loc 1 425 0
 676 03ec 97F84430 		ldrb	r3, [r7, #68]
 677 03f0 013B     		subs	r3, r3, #1
 678 03f2 DBB2     		uxtb	r3, r3
 679 03f4 3B74     		strb	r3, [r7, #16]
 426:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     for(ui8I = 0; ui8I < 13; ui8I++)
 680              		.loc 1 426 0
 681 03f6 0023     		movs	r3, #0
 682 03f8 87F82330 		strb	r3, [r7, #35]
 683 03fc 11E0     		b	.L38
 684              	.L39:
 427:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 428:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ui8A0[ui8I + 1] = pui8N[ui8I];
 685              		.loc 1 428 0 discriminator 3
 686 03fe 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 687 0402 0133     		adds	r3, r3, #1
 688 0404 97F82320 		ldrb	r2, [r7, #35]	@ zero_extendqisi2
 689 0408 B968     		ldr	r1, [r7, #8]
 690 040a 0A44     		add	r2, r2, r1
 691 040c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 692 040e 07F12801 		add	r1, r7, #40
 693 0412 0B44     		add	r3, r3, r1
 694 0414 03F8182C 		strb	r2, [r3, #-24]
 426:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     for(ui8I = 0; ui8I < 13; ui8I++)
 695              		.loc 1 426 0 discriminator 3
 696 0418 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 697 041c 0133     		adds	r3, r3, #1
 698 041e 87F82330 		strb	r3, [r7, #35]
 699              	.L38:
 426:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     for(ui8I = 0; ui8I < 13; ui8I++)
 700              		.loc 1 426 0 is_stmt 0 discriminator 1
 701 0422 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 702 0426 0C2B     		cmp	r3, #12
 703 0428 E9D9     		bls	.L39
 429:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 430:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(3 == ui8CCMLVal)
 704              		.loc 1 430 0 is_stmt 1
 705 042a 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 706 042e 032B     		cmp	r3, #3
 707 0430 01D1     		bne	.L40
 431:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 432:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ui8A0[13] = 0;
 708              		.loc 1 432 0
 709 0432 0023     		movs	r3, #0
 710 0434 7B77     		strb	r3, [r7, #29]
 711              	.L40:
 433:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 434:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui8A0[14] = 0;                   // initialize counter to 0
 712              		.loc 1 434 0
 713 0436 0023     		movs	r3, #0
 714 0438 BB77     		strb	r3, [r7, #30]
 435:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui8A0[15] = 0;                   // initialize counter to 0
 715              		.loc 1 435 0
 716 043a 0023     		movs	r3, #0
 717 043c FB77     		strb	r3, [r7, #31]
 436:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 437:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // write initialization vector
 438:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_IV_0) = ((uint32_t  *)&ui8A0)[0];
 718              		.loc 1 438 0
 719 043e 4A4A     		ldr	r2, .L48+28
 720 0440 07F11003 		add	r3, r7, #16
 721 0444 1B68     		ldr	r3, [r3]
 722 0446 1360     		str	r3, [r2]
 439:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_IV_1) = ((uint32_t  *)&ui8A0)[1];
 723              		.loc 1 439 0
 724 0448 484A     		ldr	r2, .L48+32
 725 044a 7B69     		ldr	r3, [r7, #20]
 726 044c 1360     		str	r3, [r2]
 440:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_IV_2) = ((uint32_t  *)&ui8A0)[2];
 727              		.loc 1 440 0
 728 044e 484A     		ldr	r2, .L48+36
 729 0450 BB69     		ldr	r3, [r7, #24]
 730 0452 1360     		str	r3, [r2]
 441:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_IV_3) = ((uint32_t  *)&ui8A0)[3];
 731              		.loc 1 441 0
 732 0454 474A     		ldr	r2, .L48+40
 733 0456 FB69     		ldr	r3, [r7, #28]
 734 0458 1360     		str	r3, [r2]
 442:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 443:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // configure AES engine
 444:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal = ((ui8CCMLVal - 1) <<
 735              		.loc 1 444 0
 736 045a 97F84430 		ldrb	r3, [r7, #68]	@ zero_extendqisi2
 737 045e 013B     		subs	r3, r3, #1
 738 0460 DB04     		lsls	r3, r3, #19
 739 0462 7B62     		str	r3, [r7, #36]
 445:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                    AES_AES_CTRL_CCM_L_S);             // CCM_L
 446:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(ui8Mval >= 2)
 740              		.loc 1 446 0
 741 0464 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 742 0466 012B     		cmp	r3, #1
 743 0468 07D9     		bls	.L42
 447:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 448:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ui32CtrlVal |= (((ui8Mval - 2) >> 1) <<
 744              		.loc 1 448 0
 745 046a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 746 046c 023B     		subs	r3, r3, #2
 747 046e 5B10     		asrs	r3, r3, #1
 748 0470 9B05     		lsls	r3, r3, #22
 749 0472 1A46     		mov	r2, r3
 750 0474 7B6A     		ldr	r3, [r7, #36]
 751 0476 1343     		orrs	r3, r3, r2
 752 0478 7B62     		str	r3, [r7, #36]
 753              	.L42:
 449:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                         AES_AES_CTRL_CCM_M_S);           // CCM_M
 450:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 451:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     else
 452:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 453:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ui32CtrlVal |= (0 <<
 454:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                         AES_AES_CTRL_CCM_M_S);           // CCM_M
 455:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 456:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= (AES_AES_CTRL_CCM);                // CCM
 754              		.loc 1 456 0
 755 047a 7B6A     		ldr	r3, [r7, #36]
 756 047c 43F48023 		orr	r3, r3, #262144
 757 0480 7B62     		str	r3, [r7, #36]
 457:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= (1 << AES_AES_CTRL_key_size_S);    // key = 128
 758              		.loc 1 457 0
 759 0482 7B6A     		ldr	r3, [r7, #36]
 760 0484 43F00803 		orr	r3, r3, #8
 761 0488 7B62     		str	r3, [r7, #36]
 458:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= (0 << AES_AES_CTRL_input_ready);   // decryption
 459:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= AES_AES_CTRL_CTR;                  // CTR
 762              		.loc 1 459 0
 763 048a 7B6A     		ldr	r3, [r7, #36]
 764 048c 43F04003 		orr	r3, r3, #64
 765 0490 7B62     		str	r3, [r7, #36]
 460:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= AES_AES_CTRL_save_context;         // save context
 766              		.loc 1 460 0
 767 0492 7B6A     		ldr	r3, [r7, #36]
 768 0494 43F00053 		orr	r3, r3, #536870912
 769 0498 7B62     		str	r3, [r7, #36]
 461:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ui32CtrlVal |= (0x3 << AES_AES_CTRL_ctr_width_S); // CTR width 128
 770              		.loc 1 461 0
 771 049a 7B6A     		ldr	r3, [r7, #36]
 772 049c 43F4C073 		orr	r3, r3, #384
 773 04a0 7B62     		str	r3, [r7, #36]
 462:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // program AES-CCM-128 encryption
 463:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_CTRL) = ui32CtrlVal;
 774              		.loc 1 463 0
 775 04a2 354A     		ldr	r2, .L48+44
 776 04a4 7B6A     		ldr	r3, [r7, #36]
 777 04a6 1360     		str	r3, [r2]
 464:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 465:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // write the length of the crypto block (lo)
 466:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_C_LENGTH_0) = (uint16_t)(ui16LenM) ;
 778              		.loc 1 466 0
 779 04a8 344A     		ldr	r2, .L48+48
 780 04aa 3B8C     		ldrh	r3, [r7, #32]
 781 04ac 1360     		str	r3, [r2]
 467:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // write the length of the crypto block (hi)
 468:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_C_LENGTH_1)  =  0;
 782              		.loc 1 468 0
 783 04ae 344B     		ldr	r3, .L48+52
 784 04b0 0022     		movs	r2, #0
 785 04b2 1A60     		str	r2, [r3]
 469:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 470:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // write the length of the AAD data block may be non-block size aligned
 471:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_AES_AUTH_LENGTH) = ui16LenA;
 786              		.loc 1 471 0
 787 04b4 334A     		ldr	r2, .L48+56
 788 04b6 3B8F     		ldrh	r3, [r7, #56]
 789 04b8 1360     		str	r3, [r2]
 472:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 473:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(ui16LenA != 0)
 790              		.loc 1 473 0
 791 04ba 3B8F     		ldrh	r3, [r7, #56]
 792 04bc 002B     		cmp	r3, #0
 793 04be 1BD0     		beq	.L43
 474:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 475:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // configure DMAC to fetch the AAD data
 476:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // enable DMA channel 0
 477:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_CTRL)      =  AES_DMAC_CH0_CTRL_EN;
 794              		.loc 1 477 0
 795 04c0 314B     		ldr	r3, .L48+60
 796 04c2 0122     		movs	r2, #1
 797 04c4 1A60     		str	r2, [r3]
 478:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // base address of the AAD input data in ext. memory
 479:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_EXTADDR)   = (uint32_t)pui8A;
 798              		.loc 1 479 0
 799 04c6 314A     		ldr	r2, .L48+64
 800 04c8 7B6B     		ldr	r3, [r7, #52]
 801 04ca 1360     		str	r3, [r2]
 480:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // AAD data length in bytes, equal to the AAD length len
 481:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         //({aad data}) (may be non-block size aligned)
 482:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 483:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_DMALENGTH) = ui16LenA;
 802              		.loc 1 483 0
 803 04cc 304A     		ldr	r2, .L48+68
 804 04ce 3B8F     		ldrh	r3, [r7, #56]
 805 04d0 1360     		str	r3, [r2]
 806              	.L44:
 484:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 485:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // wait for completion of the AAD data transfer, DMA_IN_DONE
 486:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         do
 487:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         {
 488:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             ASM_NOP;
 807              		.loc 1 488 0 discriminator 1
 808              	@ 488 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c" 1
 809 04d2 00BF     		NOP
 810              	@ 0 "" 2
 489:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         }
 490:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         while(!(HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_IN_DONE));
 811              		.loc 1 490 0 discriminator 1
 812              		.thumb
 813 04d4 234B     		ldr	r3, .L48+24
 814 04d6 1B68     		ldr	r3, [r3]
 815 04d8 03F00203 		and	r3, r3, #2
 816 04dc 002B     		cmp	r3, #0
 817 04de F8D0     		beq	.L44
 491:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 492:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // check for the absence of error
 493:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR))
 818              		.loc 1 493 0
 819 04e0 204B     		ldr	r3, .L48+24
 820 04e2 1B68     		ldr	r3, [r3]
 821 04e4 002B     		cmp	r3, #0
 822 04e6 07DA     		bge	.L43
 494:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         {
 495:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_DMA_BUS_ERR;
 823              		.loc 1 495 0
 824 04e8 1C4A     		ldr	r2, .L48+16
 825 04ea 1C4B     		ldr	r3, .L48+16
 826 04ec 1B68     		ldr	r3, [r3]
 827 04ee 43F00043 		orr	r3, r3, #-2147483648
 828 04f2 1360     		str	r3, [r2]
 496:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             return (AES_DMA_BUS_ERROR);
 829              		.loc 1 496 0
 830 04f4 0323     		movs	r3, #3
 831 04f6 25E0     		b	.L47
 832              	.L43:
 497:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         }
 498:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 499:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 500:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // clear interrupt status
 501:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) = (AES_CTRL_INT_CLR_DMA_IN_DONE |
 833              		.loc 1 501 0
 834 04f8 184B     		ldr	r3, .L48+16
 835 04fa 0322     		movs	r2, #3
 836 04fc 1A60     		str	r2, [r3]
 502:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                AES_CTRL_INT_CLR_RESULT_AV);
 503:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 504:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(ui8IntEnable)
 837              		.loc 1 504 0
 838 04fe 97F84830 		ldrb	r3, [r7, #72]	@ zero_extendqisi2
 839 0502 002B     		cmp	r3, #0
 840 0504 05D0     		beq	.L45
 505:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 506:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         IntPendClear(INT_AES);
 841              		.loc 1 506 0
 842 0506 9F20     		movs	r0, #159
 843 0508 FFF7FEFF 		bl	IntPendClear
 507:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         IntEnable(INT_AES);
 844              		.loc 1 507 0
 845 050c 9F20     		movs	r0, #159
 846 050e FFF7FEFF 		bl	IntEnable
 847              	.L45:
 508:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 509:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 510:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // enable result available bit in interrupt enable
 511:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_EN) = AES_CTRL_INT_EN_RESULT_AV;
 848              		.loc 1 511 0
 849 0512 104B     		ldr	r3, .L48+8
 850 0514 0122     		movs	r2, #1
 851 0516 1A60     		str	r2, [r3]
 512:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 513:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if(bDecrypt)
 852              		.loc 1 513 0
 853 0518 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 854 051a 002B     		cmp	r3, #0
 855 051c 11D0     		beq	.L46
 514:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 515:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // configure DMAC
 516:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // enable DMA channel 0
 517:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_CTRL) = AES_DMAC_CH0_CTRL_EN;
 856              		.loc 1 517 0
 857 051e 1A4B     		ldr	r3, .L48+60
 858 0520 0122     		movs	r2, #1
 859 0522 1A60     		str	r2, [r3]
 518:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // base address of the payload data in ext. memory
 519:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_EXTADDR) = (uint32_t)pui8C;
 860              		.loc 1 519 0
 861 0524 194A     		ldr	r2, .L48+64
 862 0526 7B68     		ldr	r3, [r7, #4]
 863 0528 1360     		str	r3, [r2]
 520:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // payload data length in bytes, equal to the message length len({crypto_data})
 521:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH0_DMALENGTH) = (ui16LenM);
 864              		.loc 1 521 0
 865 052a 194A     		ldr	r2, .L48+68
 866 052c 3B8C     		ldrh	r3, [r7, #32]
 867 052e 1360     		str	r3, [r2]
 522:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 523:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // enable DMA channel 1
 524:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_CTRL) = AES_DMAC_CH1_CTRL_EN;
 868              		.loc 1 524 0
 869 0530 184B     		ldr	r3, .L48+72
 870 0532 0122     		movs	r2, #1
 871 0534 1A60     		str	r2, [r3]
 525:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // base address of the output data buffer
 526:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_EXTADDR) = (uint32_t)pui8C;
 872              		.loc 1 526 0
 873 0536 184A     		ldr	r2, .L48+76
 874 0538 7B68     		ldr	r3, [r7, #4]
 875 053a 1360     		str	r3, [r2]
 527:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // output data length in bytes, equal to the result data length len({crypto data})
 528:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_DMAC_CH1_DMALENGTH) = ui16LenM;
 876              		.loc 1 528 0
 877 053c 174A     		ldr	r2, .L48+80
 878 053e 3B8C     		ldrh	r3, [r7, #32]
 879 0540 1360     		str	r3, [r2]
 880              	.L46:
 529:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 530:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 531:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     return (AES_SUCCESS);
 881              		.loc 1 531 0
 882 0542 0023     		movs	r3, #0
 883              	.L47:
 532:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** }
 884              		.loc 1 532 0 discriminator 1
 885 0544 1846     		mov	r0, r3
 886 0546 2837     		adds	r7, r7, #40
 887              		.cfi_def_cfa_offset 8
 888 0548 BD46     		mov	sp, r7
 889              		.cfi_def_cfa_register 13
 890              		@ sp needed
 891 054a 80BD     		pop	{r7, pc}
 892              	.L49:
 893              		.align	2
 894              	.L48:
 895 054c 00000000 		.word	g_ui8CurrentAESOp
 896 0550 80B70840 		.word	1074313088
 897 0554 84B70840 		.word	1074313092
 898 0558 00B70840 		.word	1074312960
 899 055c 88B70840 		.word	1074313096
 900 0560 0CB40840 		.word	1074312204
 901 0564 90B70840 		.word	1074313104
 902 0568 40B50840 		.word	1074312512
 903 056c 44B50840 		.word	1074312516
 904 0570 48B50840 		.word	1074312520
 905 0574 4CB50840 		.word	1074312524
 906 0578 50B50840 		.word	1074312528
 907 057c 54B50840 		.word	1074312532
 908 0580 58B50840 		.word	1074312536
 909 0584 5CB50840 		.word	1074312540
 910 0588 00B00840 		.word	1074311168
 911 058c 04B00840 		.word	1074311172
 912 0590 0CB00840 		.word	1074311180
 913 0594 20B00840 		.word	1074311200
 914 0598 24B00840 		.word	1074311204
 915 059c 2CB00840 		.word	1074311212
 916              		.cfi_endproc
 917              	.LFE3:
 919              		.align	2
 920              		.global	CCMInvAuthDecryptCheckResult
 921              		.thumb
 922              		.thumb_func
 924              	CCMInvAuthDecryptCheckResult:
 925              	.LFB4:
 533:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 534:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 535:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 536:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! CCMInvAuthDecryptCheckResult function checks CCM decrypt and Inverse
 537:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! Authentication result.
 538:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 539:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \return  if result is available or error occurs returns true.  If result
 540:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! is not yet available or no error occurs returns false
 541:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 542:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 543:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** uint8_t CCMInvAuthDecryptCheckResult(void)
 544:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** {
 926              		.loc 1 544 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930 05a0 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 05a2 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 545:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // check if result is available (or) some error has occured
 546:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     return (CCMAuthEncryptCheckResult());
 936              		.loc 1 546 0
 937 05a4 FFF7FEFF 		bl	CCMAuthEncryptCheckResult
 938 05a8 0346     		mov	r3, r0
 547:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** }
 939              		.loc 1 547 0
 940 05aa 1846     		mov	r0, r3
 941 05ac 80BD     		pop	{r7, pc}
 942              		.cfi_endproc
 943              	.LFE4:
 945 05ae 00BF     		.align	2
 946              		.global	CCMInvAuthDecryptGetResult
 947              		.thumb
 948              		.thumb_func
 950              	CCMInvAuthDecryptGetResult:
 951              	.LFB5:
 548:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 549:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 550:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 551:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! CCMInvAuthDecryptGetResult gets the result of CCM operation. This
 552:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! function should be called only after CCMInvAuthDecryptStart is called.
 553:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 554:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param ui8Mval is length of authentication field in octets [0,2,4,6,8,10,
 555:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! 12,14 or 16].
 556:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param pui8C is pointer to octet string 'c' = 'm' || auth tag T.
 557:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param ui16LenC  is length of message pui8C[] in octets.
 558:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \param pui8Cstate is pointer to AES state buffer, cannot be part of
 559:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!  pui8C[]).
 560:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //!
 561:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //! \return  AES_SUCCESS if successful.
 562:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //
 563:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** //*****************************************************************************
 564:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** uint8_t CCMInvAuthDecryptGetResult(uint8_t ui8Mval,
 565:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                    uint8_t *pui8C,
 566:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                    uint16_t ui16LenC,
 567:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                    uint8_t *pui8Cstate)
 568:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** {
 952              		.loc 1 568 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 40
 955              		@ frame_needed = 1, uses_anonymous_args = 0
 956 05b0 80B5     		push	{r7, lr}
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 7, -8
 959              		.cfi_offset 14, -4
 960 05b2 8AB0     		sub	sp, sp, #40
 961              		.cfi_def_cfa_offset 48
 962 05b4 00AF     		add	r7, sp, #0
 963              		.cfi_def_cfa_register 7
 964 05b6 B960     		str	r1, [r7, #8]
 965 05b8 7B60     		str	r3, [r7, #4]
 966 05ba 0346     		mov	r3, r0
 967 05bc FB73     		strb	r3, [r7, #15]
 968 05be 1346     		mov	r3, r2	@ movhi
 969 05c0 BB81     		strh	r3, [r7, #12]	@ movhi
 569:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint8_t volatile ui8MIC[16];
 570:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint16_t ui16LenM = ui16LenC - ui8Mval;
 970              		.loc 1 570 0
 971 05c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 972 05c4 9BB2     		uxth	r3, r3
 973 05c6 BA89     		ldrh	r2, [r7, #12]	@ movhi
 974 05c8 D31A     		subs	r3, r2, r3
 975 05ca BB84     		strh	r3, [r7, #36]	@ movhi
 571:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     uint8_t ui8I, ui8J;
 572:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 573:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_DMA_BUS_ERR))
 976              		.loc 1 573 0
 977 05cc 494B     		ldr	r3, .L63
 978 05ce 1B68     		ldr	r3, [r3]
 979 05d0 002B     		cmp	r3, #0
 980 05d2 07DA     		bge	.L53
 574:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 575:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         //clear the DMA error
 576:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_DMA_BUS_ERR;
 981              		.loc 1 576 0
 982 05d4 484A     		ldr	r2, .L63+4
 983 05d6 484B     		ldr	r3, .L63+4
 984 05d8 1B68     		ldr	r3, [r3]
 985 05da 43F00043 		orr	r3, r3, #-2147483648
 986 05de 1360     		str	r3, [r2]
 577:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         return (AES_DMA_BUS_ERROR);
 987              		.loc 1 577 0
 988 05e0 0323     		movs	r3, #3
 989 05e2 83E0     		b	.L54
 990              	.L53:
 578:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 579:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_WR_ERR))
 991              		.loc 1 579 0
 992 05e4 434B     		ldr	r3, .L63
 993 05e6 1B68     		ldr	r3, [r3]
 994 05e8 03F08043 		and	r3, r3, #1073741824
 995 05ec 002B     		cmp	r3, #0
 996 05ee 07D0     		beq	.L55
 580:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 581:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // clear the Key Store Write error bit
 582:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_WR_ERR;
 997              		.loc 1 582 0
 998 05f0 414A     		ldr	r2, .L63+4
 999 05f2 414B     		ldr	r3, .L63+4
 1000 05f4 1B68     		ldr	r3, [r3]
 1001 05f6 43F08043 		orr	r3, r3, #1073741824
 1002 05fa 1360     		str	r3, [r2]
 583:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         return (AES_KEYSTORE_WRITE_ERROR);
 1003              		.loc 1 583 0
 1004 05fc 0223     		movs	r3, #2
 1005 05fe 75E0     		b	.L54
 1006              	.L55:
 584:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 585:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     if((HWREG(AES_CTRL_INT_STAT) & AES_CTRL_INT_STAT_KEY_ST_RD_ERR))
 1007              		.loc 1 585 0
 1008 0600 3C4B     		ldr	r3, .L63
 1009 0602 1B68     		ldr	r3, [r3]
 1010 0604 03F00053 		and	r3, r3, #536870912
 1011 0608 002B     		cmp	r3, #0
 1012 060a 07D0     		beq	.L56
 586:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 587:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         // clear the Key Store Read error bit
 588:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         HWREG(AES_CTRL_INT_CLR) |= AES_CTRL_INT_CLR_KEY_ST_RD_ERR;
 1013              		.loc 1 588 0
 1014 060c 3A4A     		ldr	r2, .L63+4
 1015 060e 3A4B     		ldr	r3, .L63+4
 1016 0610 1B68     		ldr	r3, [r3]
 1017 0612 43F00053 		orr	r3, r3, #536870912
 1018 0616 1360     		str	r3, [r2]
 589:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         return (AES_KEYSTORE_READ_ERROR);
 1019              		.loc 1 589 0
 1020 0618 0123     		movs	r3, #1
 1021 061a 67E0     		b	.L54
 1022              	.L56:
 590:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 591:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 592:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     IntDisable(INT_AES);
 1023              		.loc 1 592 0
 1024 061c 9F20     		movs	r0, #159
 1025 061e FFF7FEFF 		bl	IntDisable
 593:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 594:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // disable the master control/DMA clock
 595:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_ALG_SEL) = 0x00000000;
 1026              		.loc 1 595 0
 1027 0622 364B     		ldr	r3, .L63+8
 1028 0624 0022     		movs	r2, #0
 1029 0626 1A60     		str	r2, [r3]
 1030              	.L57:
 596:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 597:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // read tag
 598:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // wait for the context ready bit [30]
 599:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     do
 600:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 601:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         ASM_NOP;
 1031              		.loc 1 601 0 discriminator 1
 1032              	@ 601 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c" 1
 1033 0628 00BF     		NOP
 1034              	@ 0 "" 2
 602:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 603:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     while((HWREG(AES_AES_CTRL) & AES_AES_CTRL_saved_context_ready) !=
 1035              		.loc 1 603 0 discriminator 1
 1036              		.thumb
 1037 062a 354B     		ldr	r3, .L63+12
 1038 062c 1B68     		ldr	r3, [r3]
 1039 062e 03F08043 		and	r3, r3, #1073741824
 604:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             AES_AES_CTRL_saved_context_ready);
 1040              		.loc 1 604 0 discriminator 1
 1041 0632 002B     		cmp	r3, #0
 1042 0634 F8D0     		beq	.L57
 605:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 606:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // Read the tag registers
 607:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[0] = HWREG(AES_AES_TAG_OUT_0);
 1043              		.loc 1 607 0
 1044 0636 07F11403 		add	r3, r7, #20
 1045 063a 324A     		ldr	r2, .L63+16
 1046 063c 1268     		ldr	r2, [r2]
 1047 063e 1A60     		str	r2, [r3]
 608:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[1] = HWREG(AES_AES_TAG_OUT_1);
 1048              		.loc 1 608 0
 1049 0640 07F11403 		add	r3, r7, #20
 1050 0644 0433     		adds	r3, r3, #4
 1051 0646 304A     		ldr	r2, .L63+20
 1052 0648 1268     		ldr	r2, [r2]
 1053 064a 1A60     		str	r2, [r3]
 609:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[2] = HWREG(AES_AES_TAG_OUT_2);
 1054              		.loc 1 609 0
 1055 064c 07F11403 		add	r3, r7, #20
 1056 0650 0833     		adds	r3, r3, #8
 1057 0652 2E4A     		ldr	r2, .L63+24
 1058 0654 1268     		ldr	r2, [r2]
 1059 0656 1A60     		str	r2, [r3]
 610:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     ((uint32_t  *)&ui8MIC)[3] = HWREG(AES_AES_TAG_OUT_3);
 1060              		.loc 1 610 0
 1061 0658 07F11403 		add	r3, r7, #20
 1062 065c 0C33     		adds	r3, r3, #12
 1063 065e 2C4A     		ldr	r2, .L63+28
 1064 0660 1268     		ldr	r2, [r2]
 1065 0662 1A60     		str	r2, [r3]
 611:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 612:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // clear the interrupt status
 613:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     HWREG(AES_CTRL_INT_CLR) |= (AES_CTRL_INT_CLR_DMA_IN_DONE |
 1066              		.loc 1 613 0
 1067 0664 244A     		ldr	r2, .L63+4
 1068 0666 244B     		ldr	r3, .L63+4
 1069 0668 1B68     		ldr	r3, [r3]
 1070 066a 43F00303 		orr	r3, r3, #3
 1071 066e 1360     		str	r3, [r2]
 614:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****                                 AES_CTRL_INT_CLR_RESULT_AV);
 615:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 616:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     // copy tag to pui8Cstate
 617:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     for(ui8I = 0; ui8I < ui8Mval; ui8I++)
 1072              		.loc 1 617 0
 1073 0670 0023     		movs	r3, #0
 1074 0672 87F82730 		strb	r3, [r7, #39]
 1075 0676 11E0     		b	.L58
 1076              	.L59:
 618:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 619:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         pui8Cstate[ui8I] = ui8MIC[ui8I];
 1077              		.loc 1 619 0 discriminator 3
 1078 0678 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1079 067c 7A68     		ldr	r2, [r7, #4]
 1080 067e 1344     		add	r3, r3, r2
 1081 0680 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1082 0684 07F12801 		add	r1, r7, #40
 1083 0688 0A44     		add	r2, r2, r1
 1084 068a 12F8142C 		ldrb	r2, [r2, #-20]
 1085 068e D2B2     		uxtb	r2, r2
 1086 0690 1A70     		strb	r2, [r3]
 617:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 1087              		.loc 1 617 0 discriminator 3
 1088 0692 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1089 0696 0133     		adds	r3, r3, #1
 1090 0698 87F82730 		strb	r3, [r7, #39]
 1091              	.L58:
 617:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 1092              		.loc 1 617 0 is_stmt 0 discriminator 1
 1093 069c 97F82720 		ldrb	r2, [r7, #39]	@ zero_extendqisi2
 1094 06a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1095 06a2 9A42     		cmp	r2, r3
 1096 06a4 E8D3     		bcc	.L59
 620:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 621:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 622:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     for(ui8J = 0; ui8J < ui8Mval; ui8J++)
 1097              		.loc 1 622 0 is_stmt 1
 1098 06a6 0023     		movs	r3, #0
 1099 06a8 87F82630 		strb	r3, [r7, #38]
 1100 06ac 15E0     		b	.L60
 1101              	.L62:
 623:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 624:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         if(pui8Cstate[ui8J] != pui8C[ui16LenM + ui8J])
 1102              		.loc 1 624 0
 1103 06ae 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1104 06b2 7A68     		ldr	r2, [r7, #4]
 1105 06b4 1344     		add	r3, r3, r2
 1106 06b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1107 06b8 B98C     		ldrh	r1, [r7, #36]
 1108 06ba 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1109 06be 0B44     		add	r3, r3, r1
 1110 06c0 1946     		mov	r1, r3
 1111 06c2 BB68     		ldr	r3, [r7, #8]
 1112 06c4 0B44     		add	r3, r3, r1
 1113 06c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114 06c8 9A42     		cmp	r2, r3
 1115 06ca 01D0     		beq	.L61
 625:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         {
 626:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****             return (CCM_AUTHENTICATION_FAILED);
 1116              		.loc 1 626 0
 1117 06cc 0423     		movs	r3, #4
 1118 06ce 0DE0     		b	.L54
 1119              	.L61:
 622:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 1120              		.loc 1 622 0 discriminator 2
 1121 06d0 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 1122 06d4 0133     		adds	r3, r3, #1
 1123 06d6 87F82630 		strb	r3, [r7, #38]
 1124              	.L60:
 622:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     {
 1125              		.loc 1 622 0 is_stmt 0 discriminator 1
 1126 06da 97F82620 		ldrb	r2, [r7, #38]	@ zero_extendqisi2
 1127 06de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1128 06e0 9A42     		cmp	r2, r3
 1129 06e2 E4D3     		bcc	.L62
 627:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****         }
 628:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     }
 629:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** 
 630:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     g_ui8CurrentAESOp = AES_NONE;
 1130              		.loc 1 630 0 is_stmt 1
 1131 06e4 0B4B     		ldr	r3, .L63+32
 1132 06e6 0022     		movs	r2, #0
 1133 06e8 1A70     		strb	r2, [r3]
 631:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c ****     return (AES_SUCCESS);
 1134              		.loc 1 631 0
 1135 06ea 0023     		movs	r3, #0
 1136              	.L54:
 632:build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/ccm.c **** }
 1137              		.loc 1 632 0
 1138 06ec 1846     		mov	r0, r3
 1139 06ee 2837     		adds	r7, r7, #40
 1140              		.cfi_def_cfa_offset 8
 1141 06f0 BD46     		mov	sp, r7
 1142              		.cfi_def_cfa_register 13
 1143              		@ sp needed
 1144 06f2 80BD     		pop	{r7, pc}
 1145              	.L64:
 1146              		.align	2
 1147              	.L63:
 1148 06f4 90B70840 		.word	1074313104
 1149 06f8 88B70840 		.word	1074313096
 1150 06fc 00B70840 		.word	1074312960
 1151 0700 50B50840 		.word	1074312528
 1152 0704 70B50840 		.word	1074312560
 1153 0708 74B50840 		.word	1074312564
 1154 070c 78B50840 		.word	1074312568
 1155 0710 7CB50840 		.word	1074312572
 1156 0714 00000000 		.word	g_ui8CurrentAESOp
 1157              		.cfi_endproc
 1158              	.LFE5:
 1160              	.Letext0:
 1161              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1162              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1163              		.file 4 "build/OpenMote-CC2538_armgcc/bsp/boards/OpenMote-CC2538/source/aes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ccm.c
     /tmp/cc86mrNW.s:18     .text:0000000000000000 $t
     /tmp/cc86mrNW.s:23     .text:0000000000000000 CCMAuthEncryptStart
     /tmp/cc86mrNW.s:324    .text:00000000000001d4 $d
     /tmp/cc86mrNW.s:348    .text:0000000000000228 $t
     /tmp/cc86mrNW.s:353    .text:0000000000000228 CCMAuthEncryptCheckResult
     /tmp/cc86mrNW.s:414    .text:000000000000026c $d
     /tmp/cc86mrNW.s:418    .text:0000000000000270 $t
     /tmp/cc86mrNW.s:423    .text:0000000000000270 CCMAuthEncryptGetResult
     /tmp/cc86mrNW.s:581    .text:0000000000000360 $d
     /tmp/cc86mrNW.s:593    .text:0000000000000384 $t
     /tmp/cc86mrNW.s:598    .text:0000000000000384 CCMInvAuthDecryptStart
     /tmp/cc86mrNW.s:895    .text:000000000000054c $d
     /tmp/cc86mrNW.s:919    .text:00000000000005a0 $t
     /tmp/cc86mrNW.s:924    .text:00000000000005a0 CCMInvAuthDecryptCheckResult
     /tmp/cc86mrNW.s:950    .text:00000000000005b0 CCMInvAuthDecryptGetResult
     /tmp/cc86mrNW.s:1148   .text:00000000000006f4 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.59116071098782a37a9183a8102fe91b
                           .group:0000000000000000 wm4.hw_aes.h.39.77ecc3829d96bb0e5669b1f36ecffb12
                           .group:0000000000000000 wm4.hw_ints.h.42.85b9479f2be35b086f1bb7cbb15bc097
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.aes.h.66.0fb976edb685649779bd34f5f8f7ef75

UNDEFINED SYMBOLS
IntDisable
IntPendClear
IntEnable
g_ui8CurrentAESOp
