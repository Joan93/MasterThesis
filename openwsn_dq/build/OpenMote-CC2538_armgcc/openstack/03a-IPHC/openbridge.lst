   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"openbridge.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  22              	rreg_uriquery:
  23 0000 683D7563 		.ascii	"h=ucb\000"
  23      6200
  24 0006 0000     		.align	2
  27              	infoBoardname:
  28 0008 43433235 		.ascii	"CC2538\000"
  28      333800
  29 000f 00       		.align	2
  32              	infouCName:
  33 0010 43433235 		.ascii	"CC2538\000"
  33      333800
  34 0017 00       		.align	2
  37              	infoRadioName:
  38 0018 43433235 		.ascii	"CC2538 SoC\000"
  38      33382053 
  38      6F4300
  39 0023 00       		.align	2
  42              	infoStackName:
  43 0024 4F70656E 		.ascii	"OpenWSN \000"
  43      57534E20 
  43      00
  44              		.text
  45              		.align	2
  46              		.global	openbridge_init
  47              		.thumb
  48              		.thumb_func
  50              	openbridge_init:
  51              	.LFB0:
  52              		.file 1 "build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c"
   1:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "opendefs.h"
   2:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "openbridge.h"
   3:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "openserial.h"
   4:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "packetfunctions.h"
   5:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "iphc.h"
   6:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "idmanager.h"
   7:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** #include "openqueue.h"
   8:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
   9:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** //=========================== variables =======================================
  10:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  11:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** //=========================== prototypes ======================================
  12:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** //=========================== public ==========================================
  13:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  14:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** void openbridge_init() {
  53              		.loc 1 14 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58 0000 80B4     		push	{r7}
  59              		.cfi_def_cfa_offset 4
  60              		.cfi_offset 7, -4
  61 0002 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
  15:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** }
  63              		.loc 1 15 0
  64 0004 BD46     		mov	sp, r7
  65              		.cfi_def_cfa_register 13
  66              		@ sp needed
  67 0006 5DF8047B 		ldr	r7, [sp], #4
  68              		.cfi_restore 7
  69              		.cfi_def_cfa_offset 0
  70 000a 7047     		bx	lr
  71              		.cfi_endproc
  72              	.LFE0:
  74              		.align	2
  75              		.global	openbridge_triggerData
  76              		.thumb
  77              		.thumb_func
  79              	openbridge_triggerData:
  80              	.LFB1:
  16:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  17:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** void openbridge_triggerData() {
  81              		.loc 1 17 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 144
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85 000c 90B5     		push	{r4, r7, lr}
  86              		.cfi_def_cfa_offset 12
  87              		.cfi_offset 4, -12
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 000e A5B0     		sub	sp, sp, #148
  91              		.cfi_def_cfa_offset 160
  92 0010 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  18:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    uint8_t           input_buffer[136];//worst case: 8B of next hop + 128B of data
  19:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    OpenQueueEntry_t* pkt;
  20:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    uint8_t           numDataBytes;
  21:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****   
  22:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    numDataBytes = openserial_getNumDataBytes();
  94              		.loc 1 22 0
  95 0012 FFF7FEFF 		bl	openserial_getNumDataBytes
  96 0016 0346     		mov	r3, r0
  97 0018 87F88F30 		strb	r3, [r7, #143]
  23:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****   
  24:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //poipoi xv
  25:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //this is a temporal workaround as we are never supposed to get chunks of data
  26:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //longer than input buffer size.. I assume that HDLC will solve that.
  27:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // MAC header is 13B + 8 next hop so we cannot accept packets that are longer than 118B
  28:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    if (numDataBytes>(136 - 10/*21*/) || numDataBytes<8){
  98              		.loc 1 28 0
  99 001c 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 100 0020 7E2B     		cmp	r3, #126
 101 0022 03D8     		bhi	.L3
 102              		.loc 1 28 0 is_stmt 0 discriminator 1
 103 0024 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 104 0028 072B     		cmp	r3, #7
 105 002a 09D8     		bhi	.L4
 106              	.L3:
  29:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //to prevent too short or too long serial frames to kill the stack  
  30:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****        openserial_printError(COMPONENT_OPENBRIDGE,ERR_INPUTBUFFER_LENGTH,
 107              		.loc 1 30 0 is_stmt 1
 108 002c 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 109 0030 9BB2     		uxth	r3, r3
 110 0032 1020     		movs	r0, #16
 111 0034 3421     		movs	r1, #52
 112 0036 1A46     		mov	r2, r3
 113 0038 0023     		movs	r3, #0
 114 003a FFF7FEFF 		bl	openserial_printError
  31:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****                    (errorparameter_t)numDataBytes,
  32:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****                    (errorparameter_t)0);
  33:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****        return;
 115              		.loc 1 33 0
 116 003e 62E0     		b	.L2
 117              	.L4:
  34:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    }
  35:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****   
  36:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    //copying the buffer once we know it is not too big
  37:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    openserial_getInputBuffer(&(input_buffer[0]),numDataBytes);
 118              		.loc 1 37 0
 119 0040 3A46     		mov	r2, r7
 120 0042 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 121 0046 1046     		mov	r0, r2
 122 0048 1946     		mov	r1, r3
 123 004a FFF7FEFF 		bl	openserial_getInputBuffer
  38:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****   
  39:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    if (idmanager_getIsDAGroot()==TRUE && numDataBytes>0) {
 124              		.loc 1 39 0
 125 004e FFF7FEFF 		bl	idmanager_getIsDAGroot
 126 0052 0346     		mov	r3, r0
 127 0054 002B     		cmp	r3, #0
 128 0056 56D0     		beq	.L2
 129              		.loc 1 39 0 is_stmt 0 discriminator 1
 130 0058 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 131 005c 002B     		cmp	r3, #0
 132 005e 52D0     		beq	.L2
  40:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       pkt = openqueue_getFreePacketBuffer(COMPONENT_OPENBRIDGE);
 133              		.loc 1 40 0 is_stmt 1
 134 0060 1020     		movs	r0, #16
 135 0062 FFF7FEFF 		bl	openqueue_getFreePacketBuffer
 136 0066 C7F88800 		str	r0, [r7, #136]
  41:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       if (pkt==NULL) {
 137              		.loc 1 41 0
 138 006a D7F88830 		ldr	r3, [r7, #136]
 139 006e 002B     		cmp	r3, #0
 140 0070 06D1     		bne	.L7
  42:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****          openserial_printError(COMPONENT_OPENBRIDGE,ERR_NO_FREE_PACKET_BUFFER,
 141              		.loc 1 42 0
 142 0072 1020     		movs	r0, #16
 143 0074 2C21     		movs	r1, #44
 144 0076 0022     		movs	r2, #0
 145 0078 0023     		movs	r3, #0
 146 007a FFF7FEFF 		bl	openserial_printError
  43:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****                                (errorparameter_t)0,
  44:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****                                (errorparameter_t)0);
  45:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****          return;
 147              		.loc 1 45 0
 148 007e 42E0     		b	.L2
 149              	.L7:
  46:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       }
  47:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //admin
  48:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       pkt->creator  = COMPONENT_OPENBRIDGE;
 150              		.loc 1 48 0
 151 0080 D7F88830 		ldr	r3, [r7, #136]
 152 0084 1022     		movs	r2, #16
 153 0086 1A70     		strb	r2, [r3]
  49:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       pkt->owner    = COMPONENT_OPENBRIDGE;
 154              		.loc 1 49 0
 155 0088 D7F88830 		ldr	r3, [r7, #136]
 156 008c 1022     		movs	r2, #16
 157 008e 5A70     		strb	r2, [r3, #1]
  50:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //l2
  51:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       pkt->l2_nextORpreviousHop.type = ADDR_64B;
 158              		.loc 1 51 0
 159 0090 D7F88830 		ldr	r3, [r7, #136]
 160 0094 0222     		movs	r2, #2
 161 0096 83F83820 		strb	r2, [r3, #56]
  52:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       memcpy(&(pkt->l2_nextORpreviousHop.addr_64b[0]),&(input_buffer[0]),8);
 162              		.loc 1 52 0
 163 009a D7F88830 		ldr	r3, [r7, #136]
 164 009e 03F13902 		add	r2, r3, #57
 165 00a2 3B46     		mov	r3, r7
 166 00a4 1046     		mov	r0, r2
 167 00a6 1946     		mov	r1, r3
 168 00a8 0822     		movs	r2, #8
 169 00aa FFF7FEFF 		bl	memcpy
  53:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //payload
  54:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       packetfunctions_reserveHeaderSize(pkt,numDataBytes-8);
 170              		.loc 1 54 0
 171 00ae 97F88F30 		ldrb	r3, [r7, #143]
 172 00b2 083B     		subs	r3, r3, #8
 173 00b4 DBB2     		uxtb	r3, r3
 174 00b6 D7F88800 		ldr	r0, [r7, #136]
 175 00ba 1946     		mov	r1, r3
 176 00bc FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  55:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       memcpy(pkt->payload,&(input_buffer[8]),numDataBytes-8);
 177              		.loc 1 55 0
 178 00c0 D7F88830 		ldr	r3, [r7, #136]
 179 00c4 5A68     		ldr	r2, [r3, #4]
 180 00c6 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 181 00ca 083B     		subs	r3, r3, #8
 182 00cc 1C46     		mov	r4, r3
 183 00ce 3B46     		mov	r3, r7
 184 00d0 0833     		adds	r3, r3, #8
 185 00d2 1046     		mov	r0, r2
 186 00d4 1946     		mov	r1, r3
 187 00d6 2246     		mov	r2, r4
 188 00d8 FFF7FEFF 		bl	memcpy
  56:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       
  57:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //this is to catch the too short packet. remove it after fw-103 is solved.
  58:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       if (numDataBytes<16){
 189              		.loc 1 58 0
 190 00dc 97F88F30 		ldrb	r3, [r7, #143]	@ zero_extendqisi2
 191 00e0 0F2B     		cmp	r3, #15
 192 00e2 05D8     		bhi	.L8
  59:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****               openserial_printError(COMPONENT_OPENBRIDGE,ERR_INVALIDSERIALFRAME,
 193              		.loc 1 59 0
 194 00e4 1020     		movs	r0, #16
 195 00e6 3621     		movs	r1, #54
 196 00e8 0022     		movs	r2, #0
 197 00ea 0023     		movs	r3, #0
 198 00ec FFF7FEFF 		bl	openserial_printError
 199              	.L8:
  60:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****                             (errorparameter_t)0,
  61:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****                             (errorparameter_t)0);
  62:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       }        
  63:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       //send
  64:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       if ((iphc_sendFromBridge(pkt))==E_FAIL) {
 200              		.loc 1 64 0
 201 00f0 D7F88800 		ldr	r0, [r7, #136]
 202 00f4 FFF7FEFF 		bl	iphc_sendFromBridge
 203 00f8 0346     		mov	r3, r0
 204 00fa 012B     		cmp	r3, #1
 205 00fc 03D1     		bne	.L2
  65:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****          openqueue_freePacketBuffer(pkt);
 206              		.loc 1 65 0
 207 00fe D7F88800 		ldr	r0, [r7, #136]
 208 0102 FFF7FEFF 		bl	openqueue_freePacketBuffer
 209              	.L2:
  66:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       }
  67:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    }
  68:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** }
 210              		.loc 1 68 0
 211 0106 9437     		adds	r7, r7, #148
 212              		.cfi_def_cfa_offset 12
 213 0108 BD46     		mov	sp, r7
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 010a 90BD     		pop	{r4, r7, pc}
 217              		.cfi_endproc
 218              	.LFE1:
 220              		.align	2
 221              		.global	openbridge_sendDone
 222              		.thumb
 223              		.thumb_func
 225              	openbridge_sendDone:
 226              	.LFB2:
  69:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  70:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** void openbridge_sendDone(OpenQueueEntry_t* msg, owerror_t error) {
 227              		.loc 1 70 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 010c 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 010e 82B0     		sub	sp, sp, #8
 236              		.cfi_def_cfa_offset 16
 237 0110 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 239 0112 7860     		str	r0, [r7, #4]
 240 0114 0B46     		mov	r3, r1
 241 0116 FB70     		strb	r3, [r7, #3]
  71:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    msg->owner = COMPONENT_OPENBRIDGE;
 242              		.loc 1 71 0
 243 0118 7B68     		ldr	r3, [r7, #4]
 244 011a 1022     		movs	r2, #16
 245 011c 5A70     		strb	r2, [r3, #1]
  72:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    if (msg->creator!=COMPONENT_OPENBRIDGE) {
 246              		.loc 1 72 0
 247 011e 7B68     		ldr	r3, [r7, #4]
 248 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 249 0122 102B     		cmp	r3, #16
 250 0124 05D0     		beq	.L11
  73:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****       openserial_printError(COMPONENT_OPENBRIDGE,ERR_UNEXPECTED_SENDDONE,
 251              		.loc 1 73 0
 252 0126 1020     		movs	r0, #16
 253 0128 2B21     		movs	r1, #43
 254 012a 0022     		movs	r2, #0
 255 012c 0023     		movs	r3, #0
 256 012e FFF7FEFF 		bl	openserial_printError
 257              	.L11:
  74:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****                             (errorparameter_t)0,
  75:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****                             (errorparameter_t)0);
  76:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    }
  77:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    openqueue_freePacketBuffer(msg);
 258              		.loc 1 77 0
 259 0132 7868     		ldr	r0, [r7, #4]
 260 0134 FFF7FEFF 		bl	openqueue_freePacketBuffer
  78:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** }
 261              		.loc 1 78 0
 262 0138 0837     		adds	r7, r7, #8
 263              		.cfi_def_cfa_offset 8
 264 013a BD46     		mov	sp, r7
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 013c 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE2:
 271 013e 00BF     		.align	2
 272              		.global	openbridge_receive
 273              		.thumb
 274              		.thumb_func
 276              	openbridge_receive:
 277              	.LFB3:
  79:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** 
  80:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** /**
  81:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** \brief Receive a frame at the openbridge, which sends it out over serial.
  82:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** */
  83:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** void openbridge_receive(OpenQueueEntry_t* msg) {
 278              		.loc 1 83 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0140 90B5     		push	{r4, r7, lr}
 283              		.cfi_def_cfa_offset 12
 284              		.cfi_offset 4, -12
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0142 83B0     		sub	sp, sp, #12
 288              		.cfi_def_cfa_offset 24
 289 0144 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
 291 0146 7860     		str	r0, [r7, #4]
  84:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    
  85:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // prepend previous hop
  86:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    packetfunctions_reserveHeaderSize(msg,LENGTH_ADDR64b);
 292              		.loc 1 86 0
 293 0148 7868     		ldr	r0, [r7, #4]
 294 014a 0821     		movs	r1, #8
 295 014c FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  87:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    memcpy(msg->payload,msg->l2_nextORpreviousHop.addr_64b,LENGTH_ADDR64b);
 296              		.loc 1 87 0
 297 0150 7B68     		ldr	r3, [r7, #4]
 298 0152 5A68     		ldr	r2, [r3, #4]
 299 0154 7B68     		ldr	r3, [r7, #4]
 300 0156 3933     		adds	r3, r3, #57
 301 0158 1046     		mov	r0, r2
 302 015a 1946     		mov	r1, r3
 303 015c 0822     		movs	r2, #8
 304 015e FFF7FEFF 		bl	memcpy
  88:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    
  89:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // prepend next hop (me)
  90:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    packetfunctions_reserveHeaderSize(msg,LENGTH_ADDR64b);
 305              		.loc 1 90 0
 306 0162 7868     		ldr	r0, [r7, #4]
 307 0164 0821     		movs	r1, #8
 308 0166 FFF7FEFF 		bl	packetfunctions_reserveHeaderSize
  91:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    memcpy(msg->payload,idmanager_getMyID(ADDR_64B)->addr_64b,LENGTH_ADDR64b);
 309              		.loc 1 91 0
 310 016a 7B68     		ldr	r3, [r7, #4]
 311 016c 5C68     		ldr	r4, [r3, #4]
 312 016e 0220     		movs	r0, #2
 313 0170 FFF7FEFF 		bl	idmanager_getMyID
 314 0174 0346     		mov	r3, r0
 315 0176 0133     		adds	r3, r3, #1
 316 0178 2046     		mov	r0, r4
 317 017a 1946     		mov	r1, r3
 318 017c 0822     		movs	r2, #8
 319 017e FFF7FEFF 		bl	memcpy
  92:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    
  93:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // send packet over serial (will be memcopied into serial buffer)
  94:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    openserial_printData((uint8_t*)(msg->payload),msg->length);
 320              		.loc 1 94 0
 321 0182 7B68     		ldr	r3, [r7, #4]
 322 0184 5A68     		ldr	r2, [r3, #4]
 323 0186 7B68     		ldr	r3, [r7, #4]
 324 0188 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 325 018a 1046     		mov	r0, r2
 326 018c 1946     		mov	r1, r3
 327 018e FFF7FEFF 		bl	openserial_printData
  95:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    
  96:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    // free packet
  97:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c ****    openqueue_freePacketBuffer(msg);
 328              		.loc 1 97 0
 329 0192 7868     		ldr	r0, [r7, #4]
 330 0194 FFF7FEFF 		bl	openqueue_freePacketBuffer
  98:build/OpenMote-CC2538_armgcc/openstack/03a-IPHC/openbridge.c **** }
 331              		.loc 1 98 0
 332 0198 0C37     		adds	r7, r7, #12
 333              		.cfi_def_cfa_offset 12
 334 019a BD46     		mov	sp, r7
 335              		.cfi_def_cfa_register 13
 336              		@ sp needed
 337 019c 90BD     		pop	{r4, r7, pc}
 338              		.cfi_endproc
 339              	.LFE3:
 341              	.Letext0:
 342              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 343              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 344              		.file 4 "inc/opendefs.h"
 345              		.file 5 "bsp/boards/OpenMote-CC2538/board_info.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 openbridge.c
     /tmp/ccvyTy0s.s:19     .rodata:0000000000000000 $d
     /tmp/ccvyTy0s.s:22     .rodata:0000000000000000 rreg_uriquery
     /tmp/ccvyTy0s.s:27     .rodata:0000000000000008 infoBoardname
     /tmp/ccvyTy0s.s:32     .rodata:0000000000000010 infouCName
     /tmp/ccvyTy0s.s:37     .rodata:0000000000000018 infoRadioName
     /tmp/ccvyTy0s.s:42     .rodata:0000000000000024 infoStackName
     /tmp/ccvyTy0s.s:45     .text:0000000000000000 $t
     /tmp/ccvyTy0s.s:50     .text:0000000000000000 openbridge_init
     /tmp/ccvyTy0s.s:79     .text:000000000000000c openbridge_triggerData
     /tmp/ccvyTy0s.s:225    .text:000000000000010c openbridge_sendDone
     /tmp/ccvyTy0s.s:276    .text:0000000000000140 openbridge_receive
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.0.59116071098782a37a9183a8102fe91b
                           .group:0000000000000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:0000000000000000 wm4._default_types.h.15.933e8edd27a65e0b69af4a865eb623d2
                           .group:0000000000000000 wm4._intsup.h.10.35a45952db64d30146faa63a55c20c1c
                           .group:0000000000000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:0000000000000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:0000000000000000 wm4.toolchain_defs.h.2.e4ebbe6e0a48032a9b79077dc42e1ffd
                           .group:0000000000000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:0000000000000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:0000000000000000 wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51
                           .group:0000000000000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:0000000000000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:0000000000000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:0000000000000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:0000000000000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:0000000000000000 wm4.cdefs.h.47.e6563c1c3863188ba4ac4eaa2c85b6f1
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:0000000000000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:0000000000000000 wm4.hw_types.h.67.b10589a0806dcc2d274d6fab6b736519
                           .group:0000000000000000 wm4.interrupt.h.41.272fc4ec0e276feb439e7974d0f77eaf
                           .group:0000000000000000 wm4.board_info.h.22.aeb00002354a4949fff54190040e37af
                           .group:0000000000000000 wm4.opendefs.h.23.bdaf9c024be66ead04de21e3ce3dfaf2
                           .group:0000000000000000 wm4.openserial.h.8.a9fe077ce3323e4f6730d3ecdff542cc
                           .group:0000000000000000 wm4.iphc.h.2.9e7d9d56ac728a3c0b3014283a59854e
                           .group:0000000000000000 wm4.idmanager.h.2.8c0e2159b32ef3125cbb1e984805cbfe

UNDEFINED SYMBOLS
openserial_getNumDataBytes
openserial_printError
openserial_getInputBuffer
idmanager_getIsDAGroot
openqueue_getFreePacketBuffer
memcpy
packetfunctions_reserveHeaderSize
iphc_sendFromBridge
openqueue_freePacketBuffer
idmanager_getMyID
openserial_printData
